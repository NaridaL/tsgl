{"version":3,"file":"bundle.module.js","sources":["../src/Buffer.ts","../src/Mesh.ts","../src/Shader.ts","../src/Texture.ts","../src/shaders/posCoordVS.glslx","../src/shaders/sdfRenderFS.glslx","../src/KhronosGroupWebGLDebug.ts","../src/TSGLContext.ts"],"sourcesContent":["/// <reference types=\"webgl-strict-types\" />\nimport { assert, int, NLA_DEBUG, V3 } from \"ts3dutils\"\nimport { currentGL, TSGLContext } from \"./index\"\n\nimport GL = WebGLRenderingContextStrict\nconst WGL = (WebGLRenderingContext as any) as WebGLRenderingContextStrict.Constants\n\nexport class Buffer {\n  buffer: WebGLBuffer | undefined = undefined\n  data: any[] = []\n\n  /** Number of elements in buffer. 2 V3s is still 2, not 6. */\n  count: int = 0\n\n  /** Space between elements in buffer. 3 for V3s. */\n  spacing: 1 | 2 | 3 | 4 = 1\n\n  hasBeenCompiled: boolean = false\n\n  name?: string\n\n  maxValue?: number\n\n  bindSize: GL[\"UNSIGNED_INT\"] | GL[\"UNSIGNED_SHORT\"]\n\n  /**\n   * Provides a simple method of uploading data to a GPU buffer.\n   *\n   * @example\n   *     const vertices = new Buffer(WGL.ARRAY_BUFFER, Float32Array)\n   *     vertices.data = [[0, 0, 0], [1, 0, 0], [0, 1, 0], [1, 1, 0]]\n   *     vertices.compile()\n   *\n   * @example\n   *     const indices = new Buffer(WGL.ELEMENT_ARRAY_BUFFER, Uint16Array)\n   *     indices.data = [[0, 1, 2], [2, 1, 3]]\n   *     indices.compile()\n   *\n   * @param target Specifies the target to which the buffer object is bound.\n   * @param type\n   */\n  constructor(\n    public readonly target: GL.BufferTarget,\n    public readonly type:\n      | typeof Float32Array\n      | typeof Uint16Array\n      | typeof Uint32Array,\n  ) {\n    assert(\n      target == WGL.ARRAY_BUFFER || target == WGL.ELEMENT_ARRAY_BUFFER,\n      \"target == WGL.ARRAY_BUFFER || target == WGL.ELEMENT_ARRAY_BUFFER\",\n    )\n    assert(\n      type == Float32Array || type == Uint16Array || type == Uint32Array,\n      \"type == Float32Array || type == Uint16Array || type == Uint32Array\",\n    )\n    if (Uint16Array == type) {\n      this.bindSize = WGL.UNSIGNED_SHORT\n    } else if (Uint32Array == type) {\n      this.bindSize = WGL.UNSIGNED_INT\n    }\n  }\n\n  /**\n   * Upload the contents of `data` to the GPU in preparation for rendering. The data must be a list of lists\n   * where each inner list has the same length. For example, each element of data for vertex normals would be a\n   * list of length three. This will remember the data length and element length for later use by shaders.\n   *\n   * This could have used `[].concat.apply([], this.data)` to flatten the array but Google\n   * Chrome has a maximum number of arguments so the concatenations are chunked to avoid that limit.\n   *\n   * @param usage Either `WGL.STATIC_DRAW` or `WGL.DYNAMIC_DRAW`. Defaults to `WGL.STATIC_DRAW`\n   */\n  compile(\n    usage: GL.BufferDataUsage = WGL.STATIC_DRAW,\n    gl: TSGLContext = currentGL(),\n  ): void {\n    assert(\n      WGL.STATIC_DRAW == usage || WGL.DYNAMIC_DRAW == usage,\n      \"WGL.STATIC_DRAW == type || WGL.DYNAMIC_DRAW == type\",\n    )\n    this.buffer = this.buffer || gl.createBuffer()!\n    let buffer: Float32Array | Uint16Array | Uint32Array\n    if (this.data.length == 0) {\n      console.warn(\"empty buffer \" + this.name)\n      //console.trace()\n    }\n    if (this.data.length == 0 || this.data[0] instanceof V3) {\n      assert(!(this.data[0] instanceof V3) || this.type == Float32Array)\n      V3.pack(\n        this.data,\n        (buffer = new this.type(this.data.length * 3) as Float32Array),\n      ) // asserts that all\n      // elements are V3s\n      this.spacing = 3\n      this.count = this.data.length\n      this.maxValue = 0\n    } else {\n      //assert(Array != this.data[0].constructor, this.name + this.data[0])\n      if (Array.isArray(this.data[0])) {\n        const bufferLength = this.data.length * this.data[0].length\n        buffer = new this.type(bufferLength)\n        let i = this.data.length,\n          destPtr = bufferLength\n        while (i--) {\n          const subArray = this.data[i]\n          let j = subArray.length\n          while (j--) {\n            buffer[--destPtr] = subArray[j]\n          }\n        }\n        assert(0 == destPtr)\n      } else {\n        buffer = new this.type(this.data)\n      }\n\n      const spacing = this.data.length ? buffer.length / this.data.length : 0\n      assert(\n        spacing % 1 == 0,\n        `buffer ${this.name} elements not of consistent size, average size is ` +\n          spacing,\n      )\n      if (NLA_DEBUG) {\n        if (10000 <= buffer.length) {\n          this.maxValue = 0\n        } else {\n          this.maxValue = Math.max.apply(undefined, buffer)\n        }\n      }\n      assert([1, 2, 3, 4].includes(spacing))\n      this.spacing = spacing as 1 | 2 | 3 | 4\n      this.count = this.data.length\n    }\n    gl.bindBuffer(this.target, this.buffer)\n    gl.bufferData(this.target, buffer, usage)\n    this.hasBeenCompiled = true\n  }\n}\n","/// <reference types=\"webgl-strict-types\" />\nimport {\n  AABB,\n  arrayFromFunction,\n  assert,\n  assertVectors,\n  eq0,\n  int,\n  lerp,\n  M4,\n  NLA_PRECISION,\n  raddd,\n  TAU,\n  Transformable,\n  Tuple3,\n  V,\n  V3,\n} from \"ts3dutils\"\n\nimport { Buffer, currentGL, GL_COLOR, pushQuad, TSGLContext } from \"./index\"\n\nconst { cos, sin, PI, min, max } = Math\n\nconst WGL = (WebGLRenderingContext as any) as WebGLRenderingContextStrict.Constants\nimport GL = WebGLRenderingContextStrict\n\nconst tempM4_1 = new M4()\nconst tempM4_2 = new M4()\n\nexport interface MeshData {\n  normals: V3[]\n  coords: [number, number][]\n  colors: GL_COLOR[]\n  TRIANGLES: int[]\n  LINES: int[]\n}\nexport type MeshWith<T extends keyof MeshData = never> = Mesh &\n  Pick<MeshData, T>\n\n/**\n * @example new Mesh()\n *        .addIndexBuffer('TRIANGLES')\n *        .addIndexBuffer('LINES')\n *        .addVertexBuffer('normals', 'ts_Normal')\n */\nexport class Mesh extends Transformable {\n  hasBeenCompiled: boolean = false\n  vertexBuffers: { [name: string]: Buffer } = {}\n  indexBuffers: { [name: string]: Buffer } = {}\n\n  vertices: V3[]\n  normals?: V3[]\n\n  constructor() {\n    super()\n    this.addVertexBuffer(\"vertices\", \"ts_Vertex\")\n  }\n\n  /**\n   * Calculate area, volume and centroid of the mesh.\n   *\n   * The area is the sum of the areas of the triangles.\n   *\n   * For closed meshes, the volume is the contained volume. If the volume is inside-out, i.e. the face normals point\n   * inwards, the returned value is negative. In general, this calculates the sum of the z-direction shadow volumes\n   * of the triangles. The z-dir shadow volume is the cut-off prism with the triangle projected onto the XY plane as\n   * the base face and the triangle itself as the top face.\n   *\n   * The centroid is the \"mean point of all points inside the volume\". If a uniform density is assumed, this is\n   * equivalent to the center of gravity. In general, this calculates the weighted average of the centroids of all the\n   * triangle shadow volumes.\n   */\n  calcVolume(\n    this: Mesh & { TRIANGLES: int[] },\n  ): { volume: number; centroid: V3; area: number } {\n    let totalVolumeX2 = 0,\n      totalCentroidWithZX2 = V3.O,\n      totalAreaX2 = 0\n    const triangles = this.TRIANGLES\n    const vertices = this.vertices\n    for (let i = 0; i < triangles.length; i += 3) {\n      const ai = triangles[i + 0],\n        bi = triangles[i + 1],\n        ci = triangles[i + 2]\n      const a = vertices[ai],\n        b = vertices[bi],\n        c = vertices[ci]\n      const ab = b.minus(a),\n        ac = c.minus(a)\n      const normal = ab.cross(ac)\n      //const centroidZ = (v0.z + v1.z + v2.z) / 3\n      const faceCentroid = V3.add(a, b, c).div(3)\n      //totalVolume += centroidZ * (area === v01.cross(v02).length() / 2) * v01.cross(v02).unit().z\n      totalVolumeX2 += faceCentroid.z * normal.z\n      const faceAreaX2 = normal.length()\n      totalAreaX2 += faceAreaX2\n\n      // NB: the shadow volume centroid does NOT have the same XY coordinates\n      // as the face centroid.\n      // calculate the weighted centroid of the shadow volume:\n      // faceShadowCentroid = INTEGRATE [0; 1] (\n      //   INTEGRATE [0; 1 - s] (\n      //     normal.z *\n      //     ((1 - s - t) a + s b + t c) *\n      //     ((1 - s - t) a + s b + t c).z\n      //   ) dt\n      // ) ds\n      // = (a (2 a.z + b.z + c.z) + b (a.z + 2 b.z + c.z) + c (a.z + b.z + 2 c.z)) / 24\n      const faceShadowCentroid = V3.add(\n        a.times(2 * a.z + b.z + c.z),\n        b.times(a.z + 2 * b.z + c.z),\n        c.times(a.z + b.z + 2 * c.z),\n      ).times(normal.z) // 1/24 factor is done at very end\n      totalCentroidWithZX2 = totalCentroidWithZX2.plus(faceShadowCentroid)\n    }\n    // sumInPlaceTree adds negligible additional accuracy for XY sphere\n    const volume = totalVolumeX2 / 2\n    return {\n      volume,\n      centroid: eq0(volume)\n        ? V3.O\n        : totalCentroidWithZX2.div(24 * volume).schur(new V3(1, 1, 0.5)),\n      area: totalAreaX2 / 2,\n    }\n  }\n\n  /**\n   * Add a new vertex buffer with a list as a property called `name` on this object and map it to\n   * the attribute called `attribute` in all shaders that draw this mesh.\n   * @example new Mesh().addVertexBuffer('coords', 'ts_TexCoord')\n   */\n  addVertexBuffer<K extends string>(\n    name: K,\n    attribute: string,\n  ): this & { [k in K]: any[] } {\n    assert(\n      !this.vertexBuffers[attribute],\n      \"Buffer \" + attribute + \" already exists.\",\n    )\n    //assert(!this[name])\n    this.hasBeenCompiled = false\n    assert(\"string\" == typeof name)\n    assert(\"string\" == typeof attribute)\n    const buffer = (this.vertexBuffers[attribute] = new Buffer(\n      WGL.ARRAY_BUFFER,\n      Float32Array,\n    ))\n    buffer.name = name\n    ;(this as any)[name] = []\n    return this as any\n  }\n\n  /**\n   * Add a new index buffer.\n   * @example new Mesh().addIndexBuffer('TRIANGLES')\n   * @example new Mesh().addIndexBuffer('LINES')\n   */\n  addIndexBuffer<K extends string>(\n    name: K,\n    type: GL[\"UNSIGNED_SHORT\"] | GL[\"UNSIGNED_INT\"] = WGL.UNSIGNED_SHORT,\n  ): this & { [k in K]: int[] } {\n    this.hasBeenCompiled = false\n    const arrayType = WGL.UNSIGNED_SHORT == type ? Uint16Array : Uint32Array\n    const buffer = (this.indexBuffers[name] = new Buffer(\n      WGL.ELEMENT_ARRAY_BUFFER,\n      arrayType,\n    ))\n    buffer.name = name\n    ;(this as any)[name] = []\n    return this as any\n  }\n\n  concat(...others: this[]): this {\n    const result = new Mesh() as any\n    const allMeshes = [this as Mesh].concat(others)\n    Object.getOwnPropertyNames(this.vertexBuffers).forEach((attribute) => {\n      assert(others.every((other) => !!other.vertexBuffers[attribute]))\n      const bufferName = this.vertexBuffers[attribute].name!\n      if (\"ts_Vertex\" !== attribute) {\n        result.addVertexBuffer(bufferName, attribute)\n      }\n      result[bufferName] = [].concat(\n        ...allMeshes.map((mesh) => (mesh as any)[bufferName]),\n      )\n    })\n    Object.getOwnPropertyNames(this.indexBuffers).forEach((name) => {\n      assert(others.every((other) => !!other.indexBuffers[name]))\n      result.addIndexBuffer(name, this.indexBuffers[name].bindSize)\n      const newIndexBufferData = new Array(\n        allMeshes.reduce((sum, mesh) => sum + (mesh as any)[name].length, 0),\n      )\n      let ptr = 0\n      let startIndex = 0\n      for (const mesh of allMeshes) {\n        for (const index of (mesh as any)[name] as int[]) {\n          newIndexBufferData[ptr++] = startIndex + index\n        }\n        startIndex += mesh.vertices.length\n      }\n      result[name] = newIndexBufferData\n    })\n    result.compile()\n    return result\n  }\n\n  /**\n   * Upload all attached buffers to the GPU in preparation for rendering. This doesn't need to be called every\n   * frame, only needs to be done when the data changes.\n   *\n   * Sets `this.hasBeenCompiled` to true.\n   */\n  compile(gl: TSGLContext = currentGL()) {\n    // figure out shortest vertex buffer to make sure indexBuffers are in bounds\n    let minVertexBufferLength = Infinity // TODO, _minBufferName\n    Object.getOwnPropertyNames(this.vertexBuffers).forEach((attribute) => {\n      const buffer = this.vertexBuffers[attribute]\n      buffer.data = (this as any)[buffer.name!]\n      buffer.compile(undefined, gl)\n      if ((this as any)[buffer.name!].length < minVertexBufferLength) {\n        // _minBufferName = attribute\n        minVertexBufferLength = (this as any)[buffer.name!].length\n      }\n    })\n\n    for (const name in this.indexBuffers) {\n      const buffer = this.indexBuffers[name]\n      buffer.data = (this as any)[buffer.name!]\n      buffer.compile(undefined, gl)\n      // if (NLA_DEBUG && buffer.maxValue >= minVertexBufferLength) {\n      // \tthrow new Error(`max index value for buffer ${name}\n      // \tis too large ${buffer.maxValue} min Vbuffer size: ${minVertexBufferLength} ${minBufferName}`)\n      // }\n    }\n    this.hasBeenCompiled = true\n    return this\n  }\n\n  static async fromBinarySTL(stl: Blob) {\n    return new Promise<Mesh & { normals: V3[] }>((resolve, reject) => {\n      const mesh = new Mesh().addVertexBuffer(\"normals\", \"ts_Normal\")\n      const fileReader = new FileReader()\n      fileReader.onerror = reject\n      fileReader.onload = function (_progressEvent) {\n        const dataView = new DataView(this.result as ArrayBuffer)\n        const HEADER_BYTE_SIZE = 80\n        const triangleCount = dataView.getUint32(HEADER_BYTE_SIZE, true)\n        mesh.normals.length = triangleCount * 3\n        mesh.vertices.length = triangleCount * 3\n        let i = triangleCount * 3,\n          bufferPtr = HEADER_BYTE_SIZE + 4\n\n        function readV3() {\n          const x = dataView.getFloat32(bufferPtr, true)\n          bufferPtr += 4\n          const y = dataView.getFloat32(bufferPtr, true)\n          bufferPtr += 4\n          const z = dataView.getFloat32(bufferPtr, true)\n          bufferPtr += 4\n          return new V3(x, y, z)\n        }\n\n        while (i) {\n          i -= 3\n          const normal = readV3()\n          mesh.normals[i + 0] = normal\n          mesh.normals[i + 1] = normal\n          mesh.normals[i + 2] = normal\n          mesh.vertices[i + 0] = readV3()\n          mesh.vertices[i + 1] = readV3()\n          mesh.vertices[i + 2] = readV3()\n\n          bufferPtr += 2\n        }\n        resolve(mesh)\n      }\n      fileReader.readAsArrayBuffer(stl)\n    })\n  }\n\n  toBinarySTL(this: Mesh & { TRIANGLES: number[] }): Blob {\n    if (!this.TRIANGLES) throw new Error(\"TRIANGLES must be defined.\")\n    const HEADER_BYTE_SIZE = 80,\n      FLOAT_BYTE_SIZE = 4\n    const triangles = this.TRIANGLES\n    const triangleCount = triangles.length / 3\n    const buffer = new ArrayBuffer(\n      HEADER_BYTE_SIZE + 4 + triangleCount * (4 * 3 * FLOAT_BYTE_SIZE + 2),\n    )\n    const dataView = new DataView(buffer)\n    dataView.setUint32(HEADER_BYTE_SIZE, triangleCount, true)\n    let bufferPtr = HEADER_BYTE_SIZE + 4\n    let i = triangles.length\n    while (i) {\n      i -= 3\n      const a = this.vertices[triangles[i]],\n        b = this.vertices[triangles[i + 1]],\n        c = this.vertices[triangles[i + 2]]\n      const normal = V3.normalOnPoints(a, b, c)\n      ;[normal, a, b, c].forEach((v) => {\n        dataView.setFloat32(bufferPtr, v.x, true)\n        bufferPtr += 4\n        dataView.setFloat32(bufferPtr, v.y, true)\n        bufferPtr += 4\n        dataView.setFloat32(bufferPtr, v.z, true)\n        bufferPtr += 4\n      })\n      // skip 2 bytes, already initalized to zero\n      bufferPtr += 2\n    }\n    assert(bufferPtr == buffer.byteLength, bufferPtr + \" \" + buffer.byteLength)\n    return new Blob([buffer], { type: \"application/octet-stream\" })\n  }\n\n  /**\n   * Returns a new Mesh with transformed vertices.\n   *\n   * Transform all vertices by `matrix` and all normals by the inverse transpose of `matrix`.\n   *\n   * Index buffer data is referenced.\n   */\n  transform(m4: M4): this {\n    const mesh = new Mesh()\n    mesh.vertices = m4.transformedPoints(this.vertices)\n    if (this.normals) {\n      mesh.addVertexBuffer(\"normals\", \"ts_Normal\")\n      const invTrans = m4\n        .as3x3(tempM4_1)\n        .inversed(tempM4_2)\n        .transposed(tempM4_1)\n      mesh.normals = this.normals.map((n) => invTrans.transformVector(n).unit())\n      // mesh.normals.forEach(n => assert(n.hasLength(1)))\n    }\n    for (const name in this.indexBuffers) {\n      mesh.addIndexBuffer(name)\n      ;(mesh as any)[name] = (this as any)[name]\n    }\n    for (const attribute in this.vertexBuffers) {\n      if (\"ts_Vertex\" !== attribute && \"ts_Normal\" !== attribute) {\n        const name = this.vertexBuffers[attribute].name!\n        mesh.addVertexBuffer(name, attribute)\n        ;(mesh as any)[name] = (this as any)[name]\n      }\n    }\n    // this.hasBeenCompiled && mesh.compile()\n    return mesh as this\n  }\n\n  /**\n   * Computes a new normal for each vertex from the average normal of the neighboring triangles. This means\n   * adjacent triangles must share vertices for the resulting normals to be smooth.\n   */\n  computeNormalsFromFlatTriangles(\n    this: Mesh & { TRIANGLES: int[] },\n  ): this & { normals: V3[] } {\n    if (!this.normals) this.addVertexBuffer(\"normals\", \"ts_Normal\")\n    // tslint:disable:no-string-literal\n    //this.vertexBuffers['ts_Normal'].data = arrayFromFunction(this.vertices.length, i => V3.O)\n\n    const TRIANGLES = this.TRIANGLES,\n      vertices = this.vertices,\n      normals = this.normals!\n    normals.length = vertices.length\n    for (let i = 0; i < TRIANGLES.length; i += 3) {\n      const ai = TRIANGLES[i],\n        bi = TRIANGLES[i + 1],\n        ci = TRIANGLES[i + 2]\n      const a = vertices[ai]\n      const b = vertices[bi]\n      const c = vertices[ci]\n      const normal = b.minus(a).cross(c.minus(a)).unit()\n      normals[ai] = normals[ai] ? normals[ai].plus(normal) : normal\n      normals[bi] = normals[bi] ? normals[bi].plus(normal) : normal\n      normals[ci] = normals[ci] ? normals[ci].plus(normal) : normal\n    }\n    for (let i = 0; i < vertices.length; i++) {\n      normals[i] = normals[i].unit()\n    }\n    this.hasBeenCompiled = false\n    return this as any\n  }\n\n  /**\n   * Populate the specified index buffer (default 'LINES') from the `triangles` index buffer.\n   */\n  computeWireframeFromFlatTriangles(\n    this: Mesh & { TRIANGLES: int[] },\n  ): this & { LINES: int[] }\n  computeWireframeFromFlatTriangles<T extends string>(\n    this: Mesh & { TRIANGLES: int[] },\n    indexBufferName: T,\n  ): this & { [k in T]: int[] }\n  computeWireframeFromFlatTriangles(\n    this: any,\n    indexBufferName: string = \"LINES\",\n  ): this {\n    if (!this.TRIANGLES) throw new Error(\"TRIANGLES must be defined.\")\n    const canonEdges = new Set<number>()\n\n    function canonEdge(i0: int, i1: int) {\n      const iMin = min(i0, i1),\n        iMax = max(i0, i1)\n      return (iMin << 16) | iMax\n    }\n\n    // function uncanonEdge(key) {\n    // \treturn [key >> 16, key & 0xffff]\n    // }\n    const t = this.TRIANGLES\n    for (let i = 0; i < t.length; i += 3) {\n      canonEdges.add(canonEdge(t[i + 0], t[i + 1]))\n      canonEdges.add(canonEdge(t[i + 1], t[i + 2]))\n      canonEdges.add(canonEdge(t[i + 2], t[i + 0]))\n    }\n    const data = indexBufferName\n    if (!this[data]) this.addIndexBuffer(indexBufferName)\n    //this.LINES = new Array(canonEdges.size)\n    canonEdges.forEach((val) => this[data].push(val >> 16, val & 0xffff))\n    this.hasBeenCompiled = false\n    return this\n  }\n\n  computeWireframeFromFlatTrianglesClosedMesh(\n    this: Mesh & { TRIANGLES: int[] },\n  ): this & { LINES: int[] }\n  computeWireframeFromFlatTrianglesClosedMesh<T extends string>(\n    this: Mesh & { TRIANGLES: int[] },\n    indexBufferName: T,\n  ): this & { [k in T]: int[] }\n  computeWireframeFromFlatTrianglesClosedMesh(\n    this: any,\n    indexBufferName: string = \"LINES\",\n  ): this {\n    if (!this.TRIANGLES) throw new Error(\"TRIANGLES must be defined.\")\n    if (!this.LINES) this.addIndexBuffer(\"LINES\")\n    const tris = this.TRIANGLES\n    if (!this[indexBufferName]) this.addIndexBuffer(indexBufferName)\n    const lines = this[indexBufferName]\n    for (let i = 0; i < tris.length; i += 3) {\n      if (tris[i + 0] < tris[i + 1]) lines.push(tris[i + 0], tris[i + 1])\n      if (tris[i + 1] < tris[i + 2]) lines.push(tris[i + 1], tris[i + 2])\n      if (tris[i + 2] < tris[i + 0]) lines.push(tris[i + 2], tris[i + 0])\n    }\n    this.hasBeenCompiled = false\n    return this\n  }\n\n  computeNormalLines(\n    this: Mesh & { normals: V3[] },\n    length: number,\n  ): this & { LINES: int[] }\n  computeNormalLines<T extends string>(\n    this: Mesh & { normals: V3[] },\n    length: number,\n    indexBufferName: T,\n  ): this & { [k in T]: int[] }\n  computeNormalLines(\n    this: any,\n    length: number = 1,\n    indexBufferName: string = \"LINES\",\n  ) {\n    if (!this.normals) {\n      throw new Error(\"normals must be defined.\")\n    }\n    const vs = this.vertices,\n      si = this.vertices.length\n    if (!this[indexBufferName]) this.addIndexBuffer(indexBufferName)\n\n    for (let i = 0; i < this.normals.length; i++) {\n      vs[si + i] = vs[i].plus(this.normals[i].toLength(length))\n      this[indexBufferName].push(si + i, i)\n    }\n    this.hasBeenCompiled = false\n    return this\n  }\n\n  getAABB(): AABB {\n    return new AABB().addPoints(this.vertices)\n  }\n\n  getBoundingSphere(): { center: V3; radius: number } {\n    const sphere = { center: this.getAABB().getCenter(), radius: 0 }\n    for (let i = 0; i < this.vertices.length; i++) {\n      sphere.radius = Math.max(\n        sphere.radius,\n        this.vertices[i].minus(sphere.center).length(),\n      )\n    }\n    return sphere\n  }\n\n  /**\n   * Generates a square mesh in the XY plane.\n   * Texture coordinates (buffer \"coords\") are set to go from 0 to 1 in either direction.\n   *\n   * @param options foo\n   * @param options.detail Defaults to 1\n   * @param options.detailX Defaults to options.detail. Number of subdivisions in X direction.\n   * @param options.detailY Defaults to options.detail. Number of subdivisions in Y direction.j\n   * @param options.width defaults to 1\n   * @param options.height defaults to 1\n   * @param options.startX defaults to 0\n   * @param options.startY defaults to 0\n   */\n  static plane(\n    options: {\n      detail?: int\n      detailX?: int\n      detailY?: int\n      width?: number\n      height?: number\n      startX?: number\n      startY?: number\n    } = {},\n  ) {\n    const detailX = options.detailX || options.detail || 1\n    const detailY = options.detailY || options.detail || 1\n    const startX = options.startX || 0\n    const startY = options.startY || 0\n    const width = options.width || 1\n    const height = options.height || 1\n    const mesh = new Mesh()\n      .addIndexBuffer(\"LINES\")\n      .addIndexBuffer(\"TRIANGLES\")\n      .addVertexBuffer(\"normals\", \"ts_Normal\")\n      .addVertexBuffer(\"coords\", \"ts_TexCoord\")\n\n    for (let j = 0; j <= detailY; j++) {\n      const t = j / detailY\n      for (let i = 0; i <= detailX; i++) {\n        const s = i / detailX\n        mesh.vertices.push(new V3(startX + s * width, startY + t * height, 0))\n        mesh.coords.push([s, t])\n        mesh.normals.push(V3.Z)\n        if (i < detailX && j < detailY) {\n          const offset = i + j * (detailX + 1)\n          mesh.TRIANGLES.push(\n            offset,\n            offset + 1,\n            offset + detailX + 1,\n            offset + detailX + 1,\n            offset + 1,\n            offset + detailX + 2,\n          )\n        }\n      }\n    }\n\n    for (let i = 0; i < detailX; i++) {\n      mesh.LINES.push(i, i + 1)\n      mesh.LINES.push(\n        (detailX + 1) * detailY + i,\n        (detailX + 1) * detailY + i + 1,\n      )\n    }\n    for (let j = 0; j < detailY; j++) {\n      mesh.LINES.push(detailX * j, detailX * (j + 1) + 1)\n      mesh.LINES.push(detailX * (j + 1), detailX * (j + 2) + 1)\n    }\n\n    mesh.compile()\n    return mesh\n  }\n\n  // unique corners of a unit cube. Used by Mesh.cube to generate a cube mesh.\n  //  Z            Y\n  //  ^  6      7 /\n  //  |  +------+\n  //  4/ |   5 /|\n  //  +------+  |\n  //  |  +---|--+\n  //  | /2   | /3\n  //  +------+     --> X\n  //  0      1\n  static UNIT_CUBE_CORNERS = [\n    V3.O,\n    new V3(0, 0, 1),\n    new V3(0, 1, 0),\n    new V3(0, 1, 1),\n\n    new V3(1, 0, 0),\n    new V3(1, 0, 1),\n    new V3(1, 1, 0),\n    V3.XYZ,\n  ]\n  static box(xDetail: int = 1, yDetail: int = 1, zDetail: int = 1) {\n    const mesh = new Mesh()\n      .addIndexBuffer(\"LINES\")\n      .addIndexBuffer(\"TRIANGLES\")\n      .addVertexBuffer(\"normals\", \"ts_Normal\")\n    mesh.vertices.length = mesh.normals.length =\n      2 *\n      ((xDetail + 1) * (yDetail + 1) +\n        (yDetail + 1) * (zDetail + 1) +\n        (zDetail + 1) * (xDetail + 1))\n    mesh.TRIANGLES.length =\n      4 * (xDetail * yDetail + yDetail * zDetail + zDetail * xDetail)\n    let vi = 0,\n      ti = 0\n    function x(\n      detailX: int,\n      detailY: int,\n      m: M4,\n      startX = 0,\n      width = 1,\n      startY = 0,\n      height = 1,\n    ) {\n      const normal = m.transformVector(V3.Z)\n      for (let j = 0; j <= detailY; j++) {\n        const t = j / detailY\n        for (let i = 0; i <= detailX; i++) {\n          const s = i / detailX\n          mesh.vertices[vi] = m.transformPoint(\n            new V3(startX + s * width, startY + t * height, 0),\n          )\n          mesh.normals[vi] = normal\n          vi++\n          if (i < detailX && j < detailY) {\n            const offset = i + j * (detailX + 1)\n            mesh.TRIANGLES[ti++] = offset\n            mesh.TRIANGLES[ti++] = offset + detailX + 1\n            mesh.TRIANGLES[ti++] = offset + 1\n            mesh.TRIANGLES[ti++] = offset + detailX + 1\n            mesh.TRIANGLES[ti++] = offset + detailX + 2\n            mesh.TRIANGLES[ti++] = offset + 1\n          }\n        }\n      }\n    }\n    x(yDetail, xDetail, M4.forSys(V3.Y, V3.X, V3.Z.negated()))\n    x(xDetail, yDetail, M4.translate(V3.Z))\n    x(zDetail, yDetail, M4.forSys(V3.Z, V3.Y, V3.X.negated()))\n    x(yDetail, zDetail, M4.forSys(V3.Y, V3.Z, V3.X, V3.X))\n    x(xDetail, zDetail, M4.forSys(V3.X, V3.Z, V3.Y.negated()))\n    x(zDetail, xDetail, M4.forSys(V3.Z, V3.X, V3.Y, V3.Y))\n    return mesh\n  }\n\n  /**\n   * Generates a unit cube (1x1x1) starting at the origin and extending into the (+ + +) octant.\n   * I.e. box from V3.O to V3(1,1,1)\n   * Creates line (only cube edges), triangle, vertex and normal1 buffers.\n   */\n  static cube() {\n    const mesh = new Mesh()\n      .addVertexBuffer(\"normals\", \"ts_Normal\")\n      .addIndexBuffer(\"TRIANGLES\")\n      .addIndexBuffer(\"LINES\")\n\n    // basically indexes for faces of the cube. vertices each need to be added 3 times,\n    // as they have different normals depending on the face being rendered\n    const VERTEX_CORNERS = [\n      [0, 4, 6, 2], // X = 0\n      [1, 3, 7, 5], // X = 1\n\n      [0, 1, 5, 4], // Y = 0\n      [2, 6, 7, 3], // Y = 1\n\n      [0, 2, 3, 1], // Z = 0\n      [4, 5, 7, 6], // Z = 1\n    ]\n\n    const VERTEX_NORMALS = [\n      V3.X.negated(),\n      V3.X,\n      V3.Y.negated(),\n      V3.Y,\n      V3.Z.negated(),\n      V3.Z,\n    ]\n\n    for (let i = 0; i < 6; i++) {\n      pushQuad(\n        mesh.TRIANGLES,\n        true,\n        mesh.vertices.length,\n        mesh.vertices.length + 1,\n        mesh.vertices.length + 3,\n        mesh.vertices.length + 2,\n      )\n      mesh.vertices.push(\n        ...VERTEX_CORNERS[i].map((j) => Mesh.UNIT_CUBE_CORNERS[j]),\n      )\n      mesh.normals.push(\n        VERTEX_NORMALS[i],\n        VERTEX_NORMALS[i],\n        VERTEX_NORMALS[i],\n        VERTEX_NORMALS[i],\n      )\n    }\n    // indexes of LINES relative to UNIT_CUBE_CORNERS. Mapped to VERTEX_CORNERS.indexOf\n    // so they make sense in the context of the mesh\n    mesh.LINES = [\n      [0, 1],\n      [0, 2],\n      [1, 3],\n      [2, 3],\n\n      [0, 4],\n      [1, 5],\n      [2, 6],\n      [3, 7],\n\n      [4, 5],\n      [4, 6],\n      [5, 7],\n      [6, 7],\n    ]\n      .flatMap((x) => x)\n      .map((i) => {\n        let fvi: number = 0\n        const fi = VERTEX_CORNERS.findIndex(\n          (faceVertexIndexes) => (fvi = faceVertexIndexes.indexOf(i)) != -1,\n        )\n        return fi * 4 + fvi\n      })\n\n    mesh.compile()\n    return mesh\n  }\n\n  static isocahedron() {\n    return Mesh.sphere(0)\n  }\n\n  static sphere2(latitudes: int, longitudes: int) {\n    const baseVertices = arrayFromFunction(latitudes, (i) => {\n      const angle = (i / (latitudes - 1)) * PI - PI / 2\n      return new V3(0, cos(angle), sin(angle))\n    })\n    const vqs = arrayFromFunction(latitudes, (i) => {\n      const angle = (i / (latitudes - 1)) * PI - PI / 2\n      const q = cos(angle)\n      return [(i / (latitudes - 1)) * q, q] as [number, number]\n    })\n    return Mesh.rotation(\n      baseVertices,\n      { anchor: V3.O, dir1: V3.Z },\n      2 * PI,\n      longitudes,\n      true,\n      baseVertices,\n      vqs,\n    )\n  }\n\n  /**\n   * Returns a sphere mesh with radius 1 created by subdividing the faces of a isocahedron (20-sided) recursively\n   * The sphere is positioned at the origin\n   * @param subdivisions\n   *      How many recursive divisions to do. A subdivision divides a triangle into 4,\n   *      so the total number of triangles is 20 * 4^subdivisions\n   * @returns\n   *      Contains vertex and normal1 buffers and index buffers for triangles and LINES\n   */\n  static sphere(subdivisions: int = 3) {\n    const golden = (1 + Math.sqrt(5)) / 2,\n      u = new V3(1, golden, 0).unit(),\n      s = u.x,\n      t = u.y\n    // base vertices of isocahedron\n    const vertices = [\n      new V3(-s, t, 0),\n      new V3(s, t, 0),\n      new V3(-s, -t, 0),\n      new V3(s, -t, 0),\n\n      new V3(0, -s, t),\n      new V3(0, s, t),\n      new V3(0, -s, -t),\n      new V3(0, s, -t),\n\n      new V3(t, 0, -s),\n      new V3(t, 0, s),\n      new V3(-t, 0, -s),\n      new V3(-t, 0, s),\n    ]\n    // base triangles of isocahedron\n    // prettier-ignore\n    const triangles = [\n\t\t\t// 5 faces around point 0\n\t\t\t0, 11, 5,\n\t\t\t0, 5, 1,\n\t\t\t0, 1, 7,\n\t\t\t0, 7, 10,\n\t\t\t0, 10, 11,\n\n\t\t\t// 5 adjacent faces\n\t\t\t1, 5, 9,\n\t\t\t5, 11, 4,\n\t\t\t11, 10, 2,\n\t\t\t10, 7, 6,\n\t\t\t7, 1, 8,\n\n\t\t\t// 5 faces around point 3\n\t\t\t3, 9, 4,\n\t\t\t3, 4, 2,\n\t\t\t3, 2, 6,\n\t\t\t3, 6, 8,\n\t\t\t3, 8, 9,\n\n\t\t\t// 5 adjacent faces\n\t\t\t4, 9, 5,\n\t\t\t2, 4, 11,\n\t\t\t6, 2, 10,\n\t\t\t8, 6, 7,\n\t\t\t9, 8, 1,\n\t\t]\n\n    /**\n     * Tesselates triangle a b c\n     * a b c must already be in vertices with the indexes ia ib ic\n     * res is the number of subdivisions to do. 0 just results in triangle and line indexes being added to the\n     * respective buffers.\n     */\n    function tesselateRecursively(\n      a: V3,\n      b: V3,\n      c: V3,\n      res: int,\n      vertices: V3[],\n      triangles: int[],\n      ia: int,\n      ib: int,\n      ic: int,\n      lines: int[],\n    ) {\n      if (0 == res) {\n        triangles.push(ia, ib, ic)\n        if (ia < ib) lines.push(ia, ib)\n        if (ib < ic) lines.push(ib, ic)\n        if (ic < ia) lines.push(ic, ia)\n      } else {\n        // subdivide the triangle abc into 4 by adding a vertex (with the correct distance from the origin)\n        // between each segment ab, bc and cd, then calling the function recursively\n        const abMid1 = a.plus(b).toLength(1),\n          bcMid1 = b.plus(c).toLength(1),\n          caMid1 = c.plus(a).toLength(1)\n        // indexes of new vertices:\n        const iabm = vertices.length,\n          ibcm = iabm + 1,\n          icam = iabm + 2\n        vertices.push(abMid1, bcMid1, caMid1)\n        tesselateRecursively(\n          abMid1,\n          bcMid1,\n          caMid1,\n          res - 1,\n          vertices,\n          triangles,\n          iabm,\n          ibcm,\n          icam,\n          lines,\n        )\n        tesselateRecursively(\n          a,\n          abMid1,\n          caMid1,\n          res - 1,\n          vertices,\n          triangles,\n          ia,\n          iabm,\n          icam,\n          lines,\n        )\n        tesselateRecursively(\n          b,\n          bcMid1,\n          abMid1,\n          res - 1,\n          vertices,\n          triangles,\n          ib,\n          ibcm,\n          iabm,\n          lines,\n        )\n        tesselateRecursively(\n          c,\n          caMid1,\n          bcMid1,\n          res - 1,\n          vertices,\n          triangles,\n          ic,\n          icam,\n          ibcm,\n          lines,\n        )\n      }\n    }\n\n    const mesh = new Mesh()\n      .addVertexBuffer(\"normals\", \"ts_Normal\")\n      .addIndexBuffer(\"TRIANGLES\")\n      .addIndexBuffer(\"LINES\")\n    mesh.vertices.push(...vertices)\n    subdivisions = undefined == subdivisions ? 4 : subdivisions\n    for (let i = 0; i < 20; i++) {\n      const [ia, ic, ib] = triangles.slice(i * 3, i * 3 + 3)\n      tesselateRecursively(\n        vertices[ia],\n        vertices[ic],\n        vertices[ib],\n        subdivisions,\n        mesh.vertices,\n        mesh.TRIANGLES,\n        ia,\n        ic,\n        ib,\n        mesh.LINES,\n      )\n    }\n\n    mesh.normals = mesh.vertices\n    mesh.compile()\n    return mesh\n  }\n\n  static aabb(aabb: AABB) {\n    const matrix = M4.product(\n      M4.translate(aabb.min),\n      M4.scale(\n        aabb.size().max(new V3(NLA_PRECISION, NLA_PRECISION, NLA_PRECISION)),\n      ),\n    )\n    const mesh = Mesh.cube().transform(matrix)\n    // mesh.vertices = aabb.corners()\n    mesh.computeNormalLines(20)\n    mesh.compile()\n\n    return mesh\n  }\n\n  static offsetVertices(\n    vertices: V3[],\n    offset: V3,\n    close: boolean,\n  ): Mesh & { TRIANGLES: int[]; coords: [number, number][] }\n  static offsetVertices(\n    vertices: V3[],\n    offset: V3,\n    close: boolean,\n    normals: V3[],\n  ): Mesh & { TRIANGLES: int[]; coords: [number, number][]; normals: V3[] }\n  static offsetVertices(\n    vertices: V3[],\n    offset: V3,\n    close: boolean,\n    normals?: V3[],\n  ) {\n    assertVectors.apply(undefined, vertices)\n    assertVectors(offset)\n\n    const mesh = new Mesh()\n      .addIndexBuffer(\"TRIANGLES\")\n      .addVertexBuffer(\"coords\", \"ts_TexCoord\")\n    normals && mesh.addVertexBuffer(\"normals\", \"ts_Normal\")\n    mesh.vertices = vertices.concat(vertices.map((v) => v.plus(offset)))\n    const vl = vertices.length\n    mesh.coords = arrayFromFunction(vl * 2, (i): [number, number] => [\n      (i % vl) / vl,\n      (i / vl) | 0,\n    ])\n\n    const triangles = mesh.TRIANGLES\n    for (let i = 0; i < vertices.length - 1; i++) {\n      pushQuad(\n        triangles,\n        false,\n        i,\n        i + 1,\n        vertices.length + i,\n        vertices.length + i + 1,\n      )\n    }\n    if (close) {\n      pushQuad(\n        triangles,\n        false,\n        vertices.length - 1,\n        0,\n        vertices.length * 2 - 1,\n        vertices.length,\n      )\n    }\n    if (normals) {\n      mesh.normals = normals.concat(normals)\n    }\n    mesh.compile()\n    return mesh\n  }\n\n  // Creates a new $Mesh by rotating $vertices by $totalRads around $lineAxis (according to the right-hand\n  // rule). $steps is the number of steps to take. $close is whether the vertices of the first and last step\n  // should be connected by triangles. If $normals is set (pass an array of V3s of the same length as $vertices),\n  // these will also be rotated and correctly added to the mesh.\n  // @example const precious = Mesh.rotation([V(10, 0, -2), V(10, 0, 2), V(11, 0, 2), V(11, 0, -2)], , L3.Z, 512)\n  static rotation(\n    vertices: V3[],\n    lineAxis: { anchor: V3; dir1: V3 },\n    totalRads: raddd,\n    steps: int,\n    close = true,\n    normals?: V3[],\n    vqs?: [number, number][],\n  ) {\n    const mesh = new Mesh().addIndexBuffer(\"TRIANGLES\")\n    normals && mesh.addVertexBuffer(\"normals\", \"ts_Normal\")\n    vqs && mesh.addVertexBuffer(\"coordsUVQ\", \"ts_TexCoordUVQ\")\n    const vc = vertices.length,\n      vTotal = vc * steps\n\n    const rotMat = new M4()\n    const triangles = mesh.TRIANGLES\n    for (let i = 0; i < steps; i++) {\n      // add triangles\n      const rads = totalRads * (i / steps)\n      M4.rotateLine(lineAxis.anchor, lineAxis.dir1, rads, rotMat)\n      mesh.vertices.push(...rotMat.transformedPoints(vertices))\n\n      normals && mesh.normals!.push(...rotMat.transformedVectors(normals))\n      vqs &&\n        ((mesh as unknown) as {\n          coordsUVQ: [number, number, number][]\n        }).coordsUVQ.push(\n          ...vqs.map(([v, q]): [number, number, number] => [\n            (i / steps) * q,\n            v,\n            q,\n          ]),\n        )\n      if (close || i !== steps - 1) {\n        for (let j = 0; j < vc - 1; j++) {\n          pushQuad(\n            triangles,\n            false,\n            i * vc + j + 1,\n            i * vc + j,\n            ((i + 1) * vc + j + 1) % vTotal,\n            ((i + 1) * vc + j) % vTotal,\n          )\n        }\n      }\n    }\n\n    mesh.compile()\n    return mesh\n  }\n\n  static spiral(\n    vertices: V3[],\n    lineAxis: { anchor: V3; dir1: V3 },\n    totalRads: raddd,\n    steps: int,\n    gradient: number,\n    normals?: V3[],\n    vqs?: [number, number][],\n  ) {\n    const mesh = new Mesh().addIndexBuffer(\"TRIANGLES\")\n    normals && mesh.addVertexBuffer(\"normals\", \"ts_Normal\")\n    vqs && mesh.addVertexBuffer(\"coordsUVQ\", \"ts_TexCoordUVQ\")\n    const vc = vertices.length,\n      vTotal = vc * steps\n\n    const rotMat = new M4()\n    const triangles = mesh.TRIANGLES\n    for (let i = 0; i < steps; i++) {\n      // add triangles\n      const rads = totalRads * (i / steps)\n      M4.rotateLine(lineAxis.anchor, lineAxis.dir1, rads, rotMat)\n\n      mesh.vertices.push(\n        ...rotMat\n          .translate(\n            lineAxis.dir1.toLength((totalRads / TAU) * (i / steps) * gradient),\n          )\n          .transformedPoints(vertices),\n      )\n\n      normals && mesh.normals!.push(...rotMat.transformedVectors(normals))\n      vqs &&\n        ((mesh as unknown) as {\n          coordsUVQ: [number, number, number][]\n        }).coordsUVQ.push(\n          ...vqs.map(([v, q]): [number, number, number] => [\n            (i / steps) * q,\n            v,\n            q,\n          ]),\n        )\n      if (i !== steps - 1) {\n        for (let j = 0; j < vc - 1; j++) {\n          pushQuad(\n            triangles,\n            false,\n            i * vc + j + 1,\n            i * vc + j,\n            ((i + 1) * vc + j + 1) % vTotal,\n            ((i + 1) * vc + j) % vTotal,\n          )\n        }\n      }\n    }\n\n    mesh.compile()\n    return mesh\n  }\n\n  static parametric(\n    pF: (d: number, z: number) => V3,\n    pN: undefined,\n    sMin: number,\n    sMax: number,\n    tMin: number,\n    tMax: number,\n    sRes: number,\n    tRes: number,\n  ): Mesh & { TRIANGLES: int[] }\n  static parametric(\n    pF: (d: number, z: number) => V3,\n    pN: (d: number, z: number) => V3,\n    sMin: number,\n    sMax: number,\n    tMin: number,\n    tMax: number,\n    sRes: number,\n    tRes: number,\n  ): Mesh & { normals: V3[]; TRIANGLES: int[] }\n  static parametric(\n    pF: (d: number, z: number) => V3,\n    pN: ((d: number, z: number) => V3) | undefined,\n    sMin: number,\n    sMax: number,\n    tMin: number,\n    tMax: number,\n    sRes: number,\n    tRes: number,\n  ) {\n    const mesh = new Mesh()\n      .addIndexBuffer(\"TRIANGLES\")\n      .addVertexBuffer(\"normals\", \"ts_Normal\")\n    for (let si = 0; si <= sRes; si++) {\n      const s = lerp(sMin, sMax, si / sRes)\n      for (let ti = 0; ti <= tRes; ti++) {\n        const t = lerp(tMin, tMax, ti / tRes)\n        mesh.vertices.push(pF(s, t))\n        pN && mesh.normals.push(pN(s, t))\n        if (ti < tRes && si < sRes) {\n          const offset = ti + si * (tRes + 1)\n          pushQuad(\n            mesh.TRIANGLES,\n            false,\n            offset,\n            offset + tRes + 1,\n            offset + 1,\n            offset + tRes + 2,\n          )\n        }\n      }\n    }\n    return mesh\n  }\n\n  static load(json: {\n    vertices: Tuple3<number>[]\n    triangles?: Tuple3<number>[]\n    normals?: Tuple3<number>[]\n  }) {\n    const mesh = new Mesh()\n    if (Array.isArray(json.vertices[0])) {\n      mesh.vertices = json.vertices.map((x) => V(x))\n    } else {\n      throw new Error()\n    }\n    if (json.triangles) {\n      mesh.addIndexBuffer(\"TRIANGLES\")\n      ;(mesh as any).TRIANGLES = json.triangles\n    }\n    if (json.normals) {\n      mesh.addVertexBuffer(\"normals\", \"ts_Normal\")\n      ;(mesh as any).normals = json.normals\n    }\n    mesh.compile()\n    return mesh\n  }\n\n  toJSON() {\n    return {\n      vertices: this.vertices.map((x) => x.toArray()),\n      TRIANGLES: (this as any).TRIANGLES,\n    }\n  }\n}\n","/* tslint:disable:no-string-literal */\n/// <reference types=\"webgl-strict-types\" />\nimport {\n  assert,\n  assertf,\n  assertInst,\n  assertVectors,\n  int,\n  M4,\n  NLA_DEBUG,\n  V3,\n} from \"ts3dutils\"\n\nimport { Buffer, currentGL, GL_COLOR, Mesh, TSGLContext } from \"./index\"\n\nimport GL = WebGLRenderingContextStrict\nconst WGL = (WebGLRenderingContext as any) as WebGLRenderingContextStrict.Constants\n\n/**\n * These are all the draw modes usable in OpenGL ES\n */\nconst DRAW_MODE_NAMES = {\n  [WGL.POINTS]: \"POINTS\",\n  [WGL.LINES]: \"LINES\",\n  [WGL.LINE_STRIP]: \"LINE_STRIP\",\n  [WGL.LINE_LOOP]: \"LINE_LOOP\",\n  [WGL.TRIANGLES]: \"TRIANGLES\",\n  [WGL.TRIANGLE_STRIP]: \"TRIANGLE_STRIP\",\n  [WGL.TRIANGLE_FAN]: \"TRIANGLE_FAN\",\n}\nconst DRAW_MODE_CHECKS: { [type: string]: (x: int) => boolean } = {\n  [WGL.POINTS]: (_) => true,\n  [WGL.LINES]: (x) => 0 == x % 2, // divisible by 2\n  [WGL.LINE_STRIP]: (x) => x > 2, // need at least 2\n  [WGL.LINE_LOOP]: (x) => x > 2, // more like > 3, but oh well\n  [WGL.TRIANGLES]: (x) => 0 == x % 3, // divisible by 3\n  [WGL.TRIANGLE_STRIP]: (x) => x > 3,\n  [WGL.TRIANGLE_FAN]: (x) => x > 3,\n}\n\nexport const SHADER_VAR_TYPES = [\n  \"FLOAT\",\n  \"FLOAT_MAT2\",\n  \"FLOAT_MAT3\",\n  \"FLOAT_MAT4\",\n  \"FLOAT_VEC2\",\n  \"FLOAT_VEC3\",\n  \"FLOAT_VEC4\",\n  \"INT\",\n  \"INT_VEC2\",\n  \"INT_VEC3\",\n  \"INT_VEC4\",\n  \"UNSIGNED_INT\",\n]\n\nexport function isArray<T>(obj: any): obj is T[] {\n  return (\n    Array == obj.constructor ||\n    Float32Array == obj.constructor ||\n    Float64Array == obj.constructor\n  )\n}\n\nexport interface UniformTypesMap {\n  FLOAT_VEC4: GL_COLOR | V3\n  FLOAT_VEC3: [number, number, number] | V3\n  FLOAT_VEC2: [number, number] | V3\n  FLOAT: number\n  INT: int\n  FLOAT_MAT4: M4 | number[]\n  FLOAT_MAT3: M4 | number[]\n  SAMPLER_2D: int\n  BOOL: boolean\n}\nexport type UniformTypes = keyof UniformTypesMap\n\nfunction isFloatArray(obj: any): obj is number[] | Float64Array | Float32Array {\n  return (\n    Float32Array == obj.constructor ||\n    Float64Array == obj.constructor ||\n    (Array.isArray(obj) && obj.every((x) => \"number\" == typeof x))\n  )\n}\n\nfunction isIntArray(x: any) {\n  if (\n    [\n      Int8Array,\n      Uint8Array,\n      Uint8ClampedArray,\n      Int16Array,\n      Uint16Array,\n      Int32Array,\n      Uint32Array,\n    ].some((y) => x instanceof y)\n  ) {\n    return true\n  }\n  return (\n    (x instanceof Float32Array ||\n      x instanceof Float64Array ||\n      Array.isArray(x)) &&\n    (x as number[]).every((x) => Number.isInteger(x))\n  )\n}\n\nexport type ShaderType<UniformTypes, AttributeTypes = {}> = string & {\n  T?: UniformTypes\n  A?: AttributeTypes\n}\nexport type VarTypeMap = { [name: string]: UniformTypes }\nexport type ShaderSource<\n  U extends VarTypeMap,\n  IN extends VarTypeMap,\n  OUT extends VarTypeMap,\n  kind extends \"vertex\" | \"fragment\"\n> = string & { U: U; IN: IN; OUT: OUT; kind: kind }\n\n//const x:UniformTypes = undefined as 'FLOAT_VEC4' | 'FLOAT_VEC3'\nexport class Shader<\n  UniformTypes extends VarTypeMap = any,\n  AttributeTypes extends VarTypeMap = any\n> {\n  program: WebGLProgram\n  activeMatrices: { [matrixName: string]: boolean }\n  attributeLocations: { [attributeName: string]: number }\n  constantAttributes: { [attributeName: string]: boolean }\n  uniformLocations: { [uniformName: string]: WebGLUniformLocation }\n  uniformInfos: { [uniformName: string]: GL.WebGLActiveInfo<GL.UniformType> }\n  projectionMatrixVersion = -1\n  modelViewMatrixVersion = -1\n  gl: TSGLContext\n\n  /**\n   * Create shader drom typed vertex and fragment source. Weird generic arguments are because\n   * the vertex shader is required to have the OUT types the fragment shader needs as IN,\n   * but not vice-versa.\n   */\n  static create<\n    FragSrc extends ShaderSource<{}, {}, {}, \"fragment\">,\n    VertSrc extends ShaderSource<{}, {}, FragSrc[\"IN\"], \"vertex\">\n  >(\n    vertexSource: VertSrc,\n    fragmentSource: FragSrc,\n    gl?: TSGLContext,\n  ): Shader<VertSrc[\"U\"] & FragSrc[\"U\"], VertSrc[\"IN\"]>\n  /**\n   * Create shader from typed vertex and untyped fragment source. Uniform of the fragment shader\n   * can optionally be manually specified.\n   */\n  static create<\n    FU extends VarTypeMap,\n    VertSrc extends ShaderSource<{}, {}, {}, \"vertex\">\n  >(\n    vertexSource: VertSrc,\n    fragmentSource: string & { IN?: undefined },\n    gl?: TSGLContext,\n  ): Shader<FU & VertSrc[\"U\"], VertSrc[\"IN\"]>\n  /**\n   * Create shader from untyped vertex and typed fragment source. Uniform and attribute types of the shader\n   * can optionally be manually specified.\n   */\n  static create<\n    VU extends VarTypeMap,\n    VA extends VarTypeMap,\n    FragSrc extends ShaderSource<{}, {}, {}, \"vertex\">\n  >(\n    vertexSource: string & { IN?: undefined },\n    fragmentSource: FragSrc,\n    gl?: TSGLContext,\n  ): Shader<VU & FragSrc[\"U\"], VA>\n  /**\n   * Create shader from untyped vertex and fragment source. Uniform and attribute types of the shader\n   * can optionally be manually specified.\n   */\n  static create<U extends VarTypeMap = {}, A extends VarTypeMap = {}>(\n    vertexSource: string & { IN?: undefined },\n    fragmentSource: string & { IN?: undefined },\n    gl?: TSGLContext,\n  ): Shader<U, A>\n  static create(\n    vertexSource: string,\n    fragmentSource: string,\n    gl?: TSGLContext,\n  ) {\n    return new Shader(vertexSource, fragmentSource, gl) as any\n  }\n\n  /**\n\t * Provides a convenient wrapper for WebGL shaders. A few uniforms and attributes,\n\t * prefixed with `gl_`, are automatically added to all shader sources to make\n\t * simple shaders easier to write.\n\t * Headers for the following variables are automatically prepended to the passed source. The correct variables\n\t * are also automatically passed to the shader when drawing.\n\t *\n\t * For vertex and fragment shaders:\n\t uniform mat3 ts_NormalMatrix;\n\t uniform mat4 ts_ModelViewMatrix;\n\t uniform mat4 ts_ProjectionMatrix;\n\t uniform mat4 ts_ModelViewProjectionMatrix;\n\t uniform mat4 ts_ModelViewMatrixInverse;\n\t uniform mat4 ts_ProjectionMatrixInverse;\n\t uniform mat4 ts_ModelViewProjectionMatrixInverse;\n\t *\n\t *\n\t * Example usage:\n\t *\n\t *  const shader = new GL.Shader(\n\t *      `void main() { gl_Position = ts_ModelViewProjectionMatrix * ts_Vertex; }`,\n\t *      `uniform vec4 color; void main() { gl_FragColor = color; }`)\n\t *\n\t *  shader.uniforms({ color: [1, 0, 0, 1] }).draw(mesh)\n\t *\n\t * Compiles a shader program using the provided vertex and fragment shaders.\n\t */\n  protected constructor(\n    vertexSource: string,\n    fragmentSource: string,\n    gl = currentGL(),\n  ) {\n    // const versionRegex = /^(?:\\s+|\\/\\/[\\s\\S]*?[\\r\\n]+|\\/\\*[\\s\\S]*?\\*\\/)+(#version\\s+(\\d+)\\s+es)/\n    // Headers are prepended to the sources to provide some automatic functionality.\n    const header = `\n\t\tuniform mat3 ts_NormalMatrix;\n\t\tuniform mat4 ts_ModelViewMatrix;\n\t\tuniform mat4 ts_ProjectionMatrix;\n\t\tuniform mat4 ts_ModelViewProjectionMatrix;\n\t\tuniform mat4 ts_ModelViewMatrixInverse;\n\t\tuniform mat4 ts_ProjectionMatrixInverse;\n\t\tuniform mat4 ts_ModelViewProjectionMatrixInverse;\n\t`\n    const matrixNames = header.match(/\\bts_\\w+/g)\n\n    // Compile and link errors are thrown as strings.\n    function compileSource(type: GL.ShaderType, source: string) {\n      const shader = gl.createShader(type)!\n      gl.shaderSource(shader, source)\n      gl.compileShader(shader)\n      if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n        throw new Error(\"compile error: \" + gl.getShaderInfoLog(shader))\n      }\n      return shader\n    }\n\n    this.gl = gl\n    this.program = gl.createProgram()!\n    gl.attachShader(this.program, compileSource(gl.VERTEX_SHADER, vertexSource))\n    gl.attachShader(\n      this.program,\n      compileSource(gl.FRAGMENT_SHADER, fragmentSource),\n    )\n    gl.linkProgram(this.program)\n    if (!gl.getProgramParameter(this.program, gl.LINK_STATUS)) {\n      throw new Error(\"link error: \" + gl.getProgramInfoLog(this.program))\n    }\n    this.attributeLocations = {}\n    this.uniformLocations = {}\n    this.constantAttributes = {}\n\n    // Check for the use of built-in matrices that require expensive matrix\n    // multiplications to compute, and record these in `activeMatrices`.\n    this.activeMatrices = {}\n    matrixNames &&\n      matrixNames.forEach((name) => {\n        if (gl.getUniformLocation(this.program, name)) {\n          this.activeMatrices[name] = true\n        }\n      })\n\n    this.uniformInfos = {}\n    for (\n      let i = gl.getProgramParameter(this.program, gl.ACTIVE_UNIFORMS);\n      i-- > 0;\n\n    ) {\n      // see https://www.khronos.org/registry/OpenGL-Refpages/es2.0/xhtml/glGetActiveUniform.xml\n      // this.program has already been checked\n      // i is in bounds\n      const info = gl.getActiveUniform(this.program, i)!\n      this.uniformInfos[info.name] = info\n    }\n  }\n\n  /**\n   * Set a uniform for each property of `uniforms`. The correct `viewerGL.uniform*()` method is inferred from the\n   * value types and from the stored uniform sampler flags.\n   */\n  uniforms(\n    uniforms: Partial<\n      { [K in keyof UniformTypes]: UniformTypesMap[UniformTypes[K]] }\n    >,\n  ): this {\n    const gl = this.gl\n    gl.useProgram(this.program)\n\n    for (const name in uniforms) {\n      const location =\n        this.uniformLocations[name] || gl.getUniformLocation(this.program, name)\n      // !location && console.warn(name + ' uniform is not used in shader')\n      if (!location) continue\n      this.uniformLocations[name] = location\n      let value: any = uniforms[name] as any\n      const info = this.uniformInfos[name]\n      if (NLA_DEBUG) {\n        if (!info) {\n          throw new Error(\n            `uniform ${name} is not defined (available = ${Object.keys(\n              this.uniformInfos,\n            ).join(\",\")})`,\n          )\n        }\n        // TODO: better errors\n        if (\n          gl.SAMPLER_2D == info.type ||\n          gl.SAMPLER_CUBE == info.type ||\n          gl.INT == info.type\n        ) {\n          if (1 == info.size) {\n            assert(Number.isInteger(value))\n          } else {\n            assert(\n              isIntArray(value) && value.length == info.size,\n              \"value must be int array if info.size != 1\",\n            )\n          }\n        }\n        assert(\n          gl.FLOAT != info.type ||\n            (1 == info.size && \"number\" === typeof value) ||\n            isFloatArray(value),\n        )\n        assert(\n          gl.FLOAT_VEC3 != info.type ||\n            (1 == info.size && value instanceof V3) ||\n            (Array.isArray(value) &&\n              info.size == value.length &&\n              assertVectors(...value)),\n        )\n        assert(\n          gl.FLOAT_VEC4 != info.type ||\n            1 != info.size ||\n            (isFloatArray(value) && value.length == 4),\n        )\n        assert(gl.FLOAT_MAT4 != info.type || value instanceof M4, () =>\n          value.toSource(),\n        )\n        assert(\n          gl.FLOAT_MAT3 != info.type ||\n            value.length == 9 ||\n            value instanceof M4,\n        )\n      }\n      if (value instanceof V3) {\n        value = value.toArray()\n      }\n      if (gl.FLOAT_VEC4 == info.type && info.size != 1) {\n        if (value instanceof Float32Array || value instanceof Float64Array) {\n          gl.uniform4fv(\n            location,\n            value instanceof Float32Array ? value : Float32Array.from(value),\n          )\n        } else {\n          gl.uniform4fv(\n            location,\n            value.flatMap((x: any[]) => x),\n          )\n        }\n      } else if (gl.FLOAT == info.type && info.size != 1) {\n        gl.uniform1fv(location, value)\n      } else if (gl.FLOAT_VEC3 == info.type && info.size != 1) {\n        gl.uniform3fv(location, V3.pack(value))\n      } else if (value.length) {\n        switch (value.length) {\n          case 1:\n            gl.uniform1fv(location, value)\n            break\n          case 2:\n            gl.uniform2fv(location, value)\n            break\n          case 3:\n            gl.uniform3fv(location, value)\n            break\n          case 4:\n            gl.uniform4fv(location, value)\n            break\n          // Matrices are automatically transposed, since WebGL uses column-major\n          // indices instead of row-major indices.\n          case 9:\n            // prettier-ignore\n            gl.uniformMatrix3fv(location, false, new Float32Array([\n\t\t\t\t\t\t\tvalue[0], value[3], value[6],\n\t\t\t\t\t\t\tvalue[1], value[4], value[7],\n\t\t\t\t\t\t\tvalue[2], value[5], value[8],\n\t\t\t\t\t\t]))\n            break\n          case 16:\n            // prettier-ignore\n            gl.uniformMatrix4fv(location, false, new Float32Array([\n\t\t\t\t\t\t\tvalue[0], value[4], value[8], value[12],\n\t\t\t\t\t\t\tvalue[1], value[5], value[9], value[13],\n\t\t\t\t\t\t\tvalue[2], value[6], value[10], value[14],\n\t\t\t\t\t\t\tvalue[3], value[7], value[11], value[15],\n\t\t\t\t\t\t]))\n            break\n          default:\n            throw new Error(\n              \"don't know how to load uniform \\\"\" +\n                name +\n                '\" of length ' +\n                value.length,\n            )\n        }\n      } else if (\"number\" == typeof value) {\n        if (\n          gl.SAMPLER_2D == info.type ||\n          gl.SAMPLER_CUBE == info.type ||\n          gl.INT == info.type\n        ) {\n          gl.uniform1i(location, value)\n        } else {\n          gl.uniform1f(location, value)\n        }\n      } else if (\"boolean\" == typeof value) {\n        gl.uniform1i(location, +value)\n      } else if (value instanceof M4) {\n        const m = value.m\n        if (gl.FLOAT_MAT4 == info.type) {\n          // prettier-ignore\n          gl.uniformMatrix4fv(location, false, [\n\t\t\t\t\t\tm[0], m[4], m[8], m[12],\n\t\t\t\t\t\tm[1], m[5], m[9], m[13],\n\t\t\t\t\t\tm[2], m[6], m[10], m[14],\n\t\t\t\t\t\tm[3], m[7], m[11], m[15]])\n        } else if (gl.FLOAT_MAT3 == info.type) {\n          // prettier-ignore\n          gl.uniformMatrix3fv(location, false, [\n\t\t\t\t\t\tm[0], m[4], m[8],\n\t\t\t\t\t\tm[1], m[5], m[9],\n\t\t\t\t\t\tm[2], m[6], m[10]])\n        } else if (gl.FLOAT_MAT2 == info.type) {\n          // prettier-ignore\n          gl.uniformMatrix2fv(location, false, new Float32Array([\n\t\t\t\t\t\tm[0], m[4],\n\t\t\t\t\t\tm[1], m[5]]))\n        } else {\n          throw new Error(`Can't assign M4 to ${info.type}`)\n        }\n      } else {\n        throw new Error(\n          'attempted to set uniform \"' + name + '\" to invalid value ' + value,\n        )\n      }\n    }\n\n    return this\n  }\n\n  attributes(\n    attributes: Partial<\n      { [K in keyof AttributeTypes]: UniformTypesMap[AttributeTypes[K]] }\n    >,\n  ): this {\n    const gl = this.gl\n    gl.useProgram(this.program)\n\n    for (const name in attributes) {\n      const location =\n        this.attributeLocations[name] ||\n        gl.getAttribLocation(this.program, name)\n      if (location == -1) {\n        if (!name.startsWith(\"ts_\")) {\n          console.warn(\n            `Vertex buffer ${name} was not bound because the attribute is not active.`,\n          )\n        }\n        continue\n      }\n      this.attributeLocations[name] = location\n      gl.disableVertexAttribArray(location)\n      let value = attributes[name]\n      if (value instanceof V3) {\n        // TODO: figure out the types here...\n        value = value.toArray() as any\n      }\n      if (\"number\" === typeof value) {\n        gl.vertexAttrib1f(location, value)\n      } else {\n        gl.vertexAttrib4fv(location, value as number[])\n        // switch ((value as number[]).length) {\n        // \tcase 1:\n        // \t\tgl.vertexAttrib1fv(location, value as number[])\n        // \t\tbreak\n        // \tcase 2:\n        // \t\tgl.vertexAttrib2fv(location, value as number[])\n        // \t\tbreak\n        // \tcase 3:\n        // \t\tgl.vertexAttrib3fv(location, value as number[])\n        // \t\tbreak\n        // \tcase 4:\n        // \t\tbreak\n        // }\n      }\n      this.constantAttributes[name] = true\n    }\n    return this\n  }\n\n  /**\n   * Sets all uniform matrix attributes, binds all relevant buffers, and draws the mesh geometry as indexed\n   * triangles or indexed LINES. Set `mode` to `gl.LINES` (and either add indices to `LINES` or call\n   * `computeWireframe()`) to draw the mesh in wireframe.\n   *\n   * @param mesh\n   * @param mode Defaults to 'TRIANGLES'. Must be passed as string so the correct index buffer can be\n   *     automatically drawn.\n   * @param start int\n   * @param count int\n   */\n  draw(\n    mesh: Mesh,\n    mode: GL.DrawMode = WGL.TRIANGLES,\n    start?: int,\n    count?: int,\n  ): this {\n    assert(mesh.hasBeenCompiled, \"mesh.hasBeenCompiled\")\n    assert(undefined != DRAW_MODE_NAMES[mode])\n    const modeName: string = DRAW_MODE_NAMES[mode]\n    // assert(mesh.indexBuffers[modeStr], `mesh.indexBuffers[${modeStr}] undefined`)\n    return this.drawBuffers(\n      mesh.vertexBuffers,\n      mesh.indexBuffers[modeName],\n      mode,\n      start,\n      count,\n    )\n  }\n\n  private outputWarnings: { [key: string]: boolean } = {}\n\n  /**\n   * Sets all uniform matrix attributes, binds all relevant buffers, and draws the\n   * indexed mesh geometry. The `vertexBuffers` argument is a map from attribute\n   * names to `Buffer` objects of type `WGL.ARRAY_BUFFER`, `indexBuffer` is a `Buffer`\n   * object of type `WGL.ELEMENT_ARRAY_BUFFER`, and `mode` is a WebGL primitive mode\n   * like `WGL.TRIANGLES` or `WGL.LINES`. This method automatically creates and caches\n   * vertex attribute pointers for attributes as needed.\n   */\n  drawBuffers(\n    vertexBuffers: { [attributeName: string]: Buffer },\n    indexBuffer: Buffer | undefined,\n    mode: GL.DrawMode = WGL.TRIANGLES,\n    start: int = 0,\n    count?: int,\n  ): this {\n    const gl = this.gl\n    assert(undefined != DRAW_MODE_NAMES[mode])\n    assertf(() => 1 <= Object.keys(vertexBuffers).length)\n    Object.keys(vertexBuffers).forEach((key) =>\n      assertInst(Buffer, vertexBuffers[key]),\n    )\n\n    // Only varruct up the built-in matrices that are active in the shader\n    const on = this.activeMatrices\n    const modelViewMatrixInverse =\n      (on[\"ts_ModelViewMatrixInverse\"] || on[\"ts_NormalMatrix\"]) &&\n      //&& this.modelViewMatrixVersion != gl.modelViewMatrixVersion\n      gl.modelViewMatrix.inversed()\n    const projectionMatrixInverse =\n      on[\"ts_ProjectionMatrixInverse\"] &&\n      //&& this.projectionMatrixVersion != gl.projectionMatrixVersion\n      gl.projectionMatrix.inversed()\n    const modelViewProjectionMatrix =\n      (on[\"ts_ModelViewProjectionMatrix\"] ||\n        on[\"ts_ModelViewProjectionMatrixInverse\"]) &&\n      //&& (this.projectionMatrixVersion != gl.projectionMatrixVersion || this.modelViewMatrixVersion !=\n      // gl.modelViewMatrixVersion)\n      gl.projectionMatrix.times(gl.modelViewMatrix)\n\n    const uni: { [matrixName: string]: M4 } = {} // Uniform Matrices\n    on[\"ts_ModelViewMatrix\"] &&\n      this.modelViewMatrixVersion != gl.modelViewMatrixVersion &&\n      (uni[\"ts_ModelViewMatrix\"] = gl.modelViewMatrix)\n    on[\"ts_ModelViewMatrixInverse\"] &&\n      (uni[\"ts_ModelViewMatrixInverse\"] = modelViewMatrixInverse as M4)\n    on[\"ts_ProjectionMatrix\"] &&\n      this.projectionMatrixVersion != gl.projectionMatrixVersion &&\n      (uni[\"ts_ProjectionMatrix\"] = gl.projectionMatrix)\n    projectionMatrixInverse &&\n      (uni[\"ts_ProjectionMatrixInverse\"] = projectionMatrixInverse)\n    modelViewProjectionMatrix &&\n      (uni[\"ts_ModelViewProjectionMatrix\"] = modelViewProjectionMatrix)\n    modelViewProjectionMatrix &&\n      on[\"ts_ModelViewProjectionMatrixInverse\"] &&\n      (uni[\n        \"ts_ModelViewProjectionMatrixInverse\"\n      ] = modelViewProjectionMatrix.inversed())\n    on[\"ts_NormalMatrix\"] &&\n      this.modelViewMatrixVersion != gl.modelViewMatrixVersion &&\n      (uni[\"ts_NormalMatrix\"] = (modelViewMatrixInverse as M4).transposed())\n    this.uniforms(uni as any)\n    this.projectionMatrixVersion = gl.projectionMatrixVersion\n    this.modelViewMatrixVersion = gl.modelViewMatrixVersion\n\n    // Create and enable attribute pointers as necessary.\n    let minVertexBufferLength = Infinity\n    for (const attribute in vertexBuffers) {\n      const buffer = vertexBuffers[attribute]\n      assert(buffer.hasBeenCompiled)\n      const location =\n        this.attributeLocations[attribute] ||\n        gl.getAttribLocation(this.program, attribute)\n      if (location == -1 || !buffer.buffer) {\n        if (!attribute.startsWith(\"ts_\")) {\n          console.warn(\n            `Vertex buffer ${attribute} was not bound because the attribute is not active.`,\n          )\n        }\n        continue\n      }\n      this.attributeLocations[attribute] = location\n      gl.bindBuffer(WGL.ARRAY_BUFFER, buffer.buffer)\n\n      gl.enableVertexAttribArray(location)\n\n      gl.vertexAttribPointer(location, buffer.spacing, WGL.FLOAT, false, 0, 0)\n\n      minVertexBufferLength = Math.min(minVertexBufferLength, buffer.count)\n    }\n\n    // Disable unused attribute pointers.\n    for (const attribute in this.attributeLocations) {\n      if (!(attribute in vertexBuffers)) {\n        gl.disableVertexAttribArray(this.attributeLocations[attribute])\n      }\n    }\n\n    if (NLA_DEBUG) {\n      const numAttribs = gl.getProgramParameter(\n        this.program,\n        gl.ACTIVE_ATTRIBUTES,\n      )\n      for (let i = 0; i < numAttribs; ++i) {\n        const buffer = gl.getVertexAttrib(\n          i,\n          gl.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING,\n        )\n        if (!buffer) {\n          const info = gl.getActiveAttrib(this.program, i)!\n          if (\n            !this.constantAttributes[info.name] &&\n            !this.outputWarnings[info.name]\n          ) {\n            this.outputWarnings[info.name] = true\n            console.warn(\n              \"No buffer is bound to attribute \" +\n                info.name +\n                \" and it was not set with .attributes()\",\n            )\n          }\n        }\n        // console.log('name:', info.name, 'type:', info.type, 'size:', info.size)\n      }\n    }\n\n    // Draw the geometry.\n    if (minVertexBufferLength) {\n      if (undefined === count) {\n        count = indexBuffer ? indexBuffer.count : minVertexBufferLength\n      }\n      assert(\n        DRAW_MODE_CHECKS[mode](count),\n        \"count \" +\n          count +\n          \"doesn't fulfill requirement +\" +\n          DRAW_MODE_CHECKS[mode].toString() +\n          \" for mode \" +\n          DRAW_MODE_NAMES[mode],\n      )\n\n      if (indexBuffer) {\n        assert(indexBuffer.hasBeenCompiled)\n        assert(minVertexBufferLength > indexBuffer.maxValue!)\n        assert(count % indexBuffer.spacing == 0)\n        assert(start % indexBuffer.spacing == 0)\n        if (start + count > indexBuffer.count) {\n          throw new Error(\n            \"Buffer not long enough for passed parameters start/length/buffer length \" +\n              start +\n              \" \" +\n              count +\n              \" \" +\n              indexBuffer.count,\n          )\n        }\n        gl.bindBuffer(WGL.ELEMENT_ARRAY_BUFFER, indexBuffer.buffer!)\n        // start parameter has to be multiple of sizeof(WGL.UNSIGNED_SHORT)\n        gl.drawElements(\n          mode,\n          count,\n          indexBuffer.bindSize as GL[\"UNSIGNED_SHORT\"],\n          indexBuffer.type.BYTES_PER_ELEMENT * start,\n        )\n      } else {\n        if (start + count > minVertexBufferLength) {\n          throw new Error(\"invalid\")\n        }\n        gl.drawArrays(mode, start, count)\n      }\n      gl.drawCallCount++\n    }\n\n    return this\n  }\n}\n","/// <reference types=\"webgl-strict-types\" />\nimport { assert, int } from \"ts3dutils\"\n\nimport { currentGL, TSGLContext } from \"./index\"\nimport GL = WebGLRenderingContextStrict\nimport GL2 = WebGL2RenderingContextStrict\n\nexport interface TextureOptions {\n  wrap?: GL.TextureWrap // defaults to WGL.CLAMP_TO_EDGE, or set wrapS and wrapT individually.\n  wrapS?: GL.TextureWrap\n  wrapT?: GL.TextureWrap\n  filter?: GL.TextureMagFilter // defaults to WGL.LINEAR, or set minFilter and magFilter individually.\n  minFilter?: GL.TextureMinFilter\n  magFilter?: GL.TextureMagFilter\n  format?: GL2.TextureFormat // defaults to WGL.RGBA.\n  internalFormat?: GL2.TextureInternalFormat\n  type?: GL.ReadPixelsType // defaults to WGL.UNSIGNED_BYTE.\n  data?: any\n}\n\nexport class Texture {\n  height: int\n  width: int\n  texture: WebGLTexture\n  // e.g. viewerGL.UNSIGNED_BYTE, viewerGL.FLOAT\n  internalFormat: GL2.TextureInternalFormat\n  format: GL2.TextureFormat\n  // e.g. viewerGL.RGBA\n  type: GL.ReadPixelsType\n\n  /**\n   * Provides a simple wrapper around WebGL textures that supports render-to-texture.\n   *\n   * The arguments `width` and `height` give the size of the texture in texels.\n   * WebGL texture dimensions must be powers of two unless `filter` is set to\n   * either `WGL.NEAREST` or `WGL.LINEAR` and `wrap` is set to `WGL.CLAMP_TO_EDGE`\n   * (which they are by default).\n   *\n   * Texture parameters can be passed in via the `options` argument.\n   * Example usage:\n   *\n   *      let tex = new GL.Texture(256, 256, {\n   *       magFilter: WGL.NEAREST,\n   *       minFilter: WGL.LINEAR,\n   *\n   *       wrapS: WGL.REPEAT,\n   *       wrapT: WGL.REPEAT,\n   *\n   *       format: WGL.RGB, // Defaults to WGL.RGBA\n   *       type: WGL.FLOAT // Defaults to WGL.UNSIGNED_BYTE\n   *     })\n   *\n   */\n  constructor(\n    width: int,\n    height: int,\n    options: TextureOptions = {},\n    readonly gl = currentGL(),\n  ) {\n    this.width = width\n    this.height = height\n    this.format = options.format || gl.RGBA\n    this.internalFormat = options.internalFormat || gl.RGBA\n    this.type = options.type || gl.UNSIGNED_BYTE\n    const magFilter = options.filter || options.magFilter || gl.LINEAR\n    const minFilter = options.filter || options.minFilter || gl.LINEAR\n    if (this.type === gl.FLOAT) {\n      if (gl.version != 2 && !gl.getExtension(\"OES_texture_float\")) {\n        throw new Error(\"OES_texture_float is required but not supported\")\n      }\n      if (\n        (minFilter !== gl.NEAREST || magFilter !== gl.NEAREST) &&\n        !gl.getExtension(\"OES_texture_float_linear\")\n      ) {\n        throw new Error(\n          \"OES_texture_float_linear is required but not supported\",\n        )\n      }\n    } else if (this.type === gl.HALF_FLOAT_OES) {\n      if (!gl.getExtension(\"OES_texture_half_float\")) {\n        throw new Error(\"OES_texture_half_float is required but not supported\")\n      }\n      if (\n        (minFilter !== gl.NEAREST || magFilter !== gl.NEAREST) &&\n        !gl.getExtension(\"OES_texture_half_float_linear\")\n      ) {\n        throw new Error(\n          \"OES_texture_half_float_linear is required but not supported\",\n        )\n      }\n    }\n\n    this.texture = gl.createTexture()!\n    gl.bindTexture(gl.TEXTURE_2D, this.texture)\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, magFilter)\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, minFilter)\n    gl.texParameteri(\n      gl.TEXTURE_2D,\n      gl.TEXTURE_WRAP_S,\n      options.wrap || options.wrapS || gl.CLAMP_TO_EDGE,\n    )\n    gl.texParameteri(\n      gl.TEXTURE_2D,\n      gl.TEXTURE_WRAP_T,\n      options.wrap || options.wrapT || gl.CLAMP_TO_EDGE,\n    )\n    gl.texImage2D(\n      gl.TEXTURE_2D,\n      0,\n      this.internalFormat as any,\n      width,\n      height,\n      0,\n      this.format as any,\n      this.type as any,\n      options.data,\n    )\n  }\n\n  setData(data: ArrayBufferView) {\n    this.gl.bindTexture(this.gl.TEXTURE_2D, this.texture)\n    this.gl.texImage2D(\n      this.gl.TEXTURE_2D,\n      0,\n      this.internalFormat as any,\n      this.width,\n      this.height,\n      0,\n      this.format as any,\n      this.type as any,\n      data as any,\n    )\n  }\n\n  downloadData(data: ArrayBufferView) {\n    if (!this.framebuffer) {\n      throw new Error(\n        \"No framebuffer. You need to draw to this texture before it makes sense to read from it.\",\n      )\n    }\n    const gl = this.gl\n    const prevFramebuffer = gl.getParameter(gl.FRAMEBUFFER_BINDING)\n    this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this.framebuffer)\n    this.gl.readPixels(\n      0,\n      0,\n      this.width,\n      this.height,\n      this.format as any,\n      this.type as any,\n      data as any,\n    )\n    prevFramebuffer !== this.framebuffer &&\n      gl.bindFramebuffer(gl.FRAMEBUFFER, prevFramebuffer)\n  }\n\n  bind(unit: int) {\n    this.gl.activeTexture((this.gl.TEXTURE0 + unit) as GL.TextureUnit)\n    this.gl.bindTexture(this.gl.TEXTURE_2D, this.texture)\n  }\n\n  unbind(unit: int) {\n    this.gl.activeTexture((this.gl.TEXTURE0 + unit) as GL.TextureUnit)\n    this.gl.bindTexture(this.gl.TEXTURE_2D, null)\n  }\n\n  private framebuffer: WebGLFramebuffer | undefined\n  static checkerBoardCanvas: HTMLCanvasElement\n\n  drawTo(render: (gl: TSGLContext) => void): void {\n    const gl = this.gl\n    const prevFramebuffer = gl.getParameter(gl.FRAMEBUFFER_BINDING)\n    if (!this.framebuffer) {\n      // create a renderbuffer for the depth component\n      const prevRenderbuffer = gl.getParameter(gl.RENDERBUFFER_BINDING)\n      const depthRenderbuffer = gl.createRenderbuffer()\n      gl.bindRenderbuffer(gl.RENDERBUFFER, depthRenderbuffer)\n      // DEPTH_COMPONENT16 is the only depth format\n      gl.renderbufferStorage(\n        gl.RENDERBUFFER,\n        gl.DEPTH_COMPONENT16,\n        this.width,\n        this.height,\n      )\n      gl.bindRenderbuffer(gl.RENDERBUFFER, prevRenderbuffer)\n\n      // create a framebuffer to render to\n      this.framebuffer = gl.createFramebuffer()!\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer)\n      gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        gl.COLOR_ATTACHMENT0,\n        gl.TEXTURE_2D,\n        this.texture,\n        0,\n      )\n      gl.framebufferRenderbuffer(\n        gl.FRAMEBUFFER,\n        gl.DEPTH_ATTACHMENT,\n        gl.RENDERBUFFER,\n        depthRenderbuffer,\n      )\n      if (\n        gl.checkFramebufferStatus(gl.FRAMEBUFFER) !== gl.FRAMEBUFFER_COMPLETE\n      ) {\n        throw new Error(\n          \"Rendering to this texture is not supported (incomplete this.framebuffer)\",\n        )\n      }\n    } else if (prevFramebuffer !== this.framebuffer) {\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer)\n    }\n\n    const prevViewport = gl.getParameter(gl.VIEWPORT)\n\n    gl.viewport(0, 0, this.width, this.height)\n    render(gl)\n\n    // restore previous state\n    prevFramebuffer !== this.framebuffer &&\n      gl.bindFramebuffer(gl.FRAMEBUFFER, prevFramebuffer)\n    gl.viewport(\n      prevViewport[0],\n      prevViewport[1],\n      prevViewport[2],\n      prevViewport[3],\n    )\n  }\n\n  swapWith(other: Texture): void {\n    assert(this.gl == other.gl)\n    let temp\n    temp = other.texture\n    other.texture = this.texture\n    this.texture = temp\n\n    temp = other.width\n    other.width = this.width\n    this.width = temp\n\n    temp = other.height\n    other.height = this.height\n    this.height = temp\n\n    temp = other.framebuffer\n    other.framebuffer = this.framebuffer\n    this.framebuffer = temp\n  }\n\n  /**\n   * Return a new texture created from `imgElement`, an `<img>` tag.\n   */\n  static fromImage(\n    imgElement: HTMLImageElement | HTMLCanvasElement,\n    options: TextureOptions = {},\n    gl: TSGLContext = currentGL(),\n  ): Texture {\n    const texture = new Texture(\n      imgElement.width,\n      imgElement.height,\n      options,\n      gl,\n    )\n    try {\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        0,\n        texture.format as any,\n        texture.format as any,\n        texture.type as any,\n        imgElement,\n      )\n    } catch (e) {\n      if (location.protocol == \"file:\") {\n        throw new Error(\n          'imgElement not loaded for security reasons (serve this page over \"http://\" instead)',\n        )\n      } else {\n        throw new Error(\n          \"imgElement not loaded for security reasons (imgElement must originate from the same \" +\n            \"domain as this page or use Cross-Origin Resource Sharing)\",\n        )\n      }\n    }\n    if (\n      options.minFilter &&\n      options.minFilter != gl.NEAREST &&\n      options.minFilter != gl.LINEAR\n    ) {\n      gl.generateMipmap(gl.TEXTURE_2D)\n    }\n    return texture\n  }\n\n  /**\n   * Returns a checkerboard texture that will switch to the correct texture when it loads.\n   */\n  static fromURLSwitch(\n    url: string,\n    options?: TextureOptions,\n    gl = currentGL(),\n  ): Texture {\n    Texture.checkerBoardCanvas =\n      Texture.checkerBoardCanvas ||\n      (function () {\n        const c = document.createElement(\"canvas\").getContext(\"2d\")\n        if (!c) throw new Error(\"Could not create 2d canvas.\")\n        c.canvas.width = c.canvas.height = 128\n        for (let y = 0; y < c.canvas.height; y += 16) {\n          for (let x = 0; x < c.canvas.width; x += 16) {\n            //noinspection JSBitwiseOperatorUsage\n            c.fillStyle = (x ^ y) & 16 ? \"#FFF\" : \"#DDD\"\n            c.fillRect(x, y, 16, 16)\n          }\n        }\n        return c.canvas\n      })()\n    const texture = Texture.fromImage(Texture.checkerBoardCanvas, options)\n    const image = new Image()\n    image.onload = () => Texture.fromImage(image, options, gl).swapWith(texture)\n    // error event doesn't return a reason. Most likely a 404.\n    image.onerror = () => {\n      throw new Error(\"Could not load image \" + image.src + \". 404?\")\n    }\n    image.src = url\n    return texture\n  }\n\n  static fromURL(\n    url: string,\n    options?: TextureOptions,\n    gl = currentGL(),\n  ): Promise<Texture> {\n    return new Promise((resolve, reject) => {\n      const image = new Image()\n      image.onload = () => resolve(Texture.fromImage(image, options, gl))\n      image.onerror = (ev) =>\n        reject(\"Could not load image \" + image.src + \". 404?\" + ev)\n      image.src = url\n    })\n  }\n}\n","\r\nattribute vec2 ts_TexCoord;\r\nattribute vec4 ts_Vertex;\r\nuniform mat4 ts_ModelViewProjectionMatrix;\r\nvarying vec2 coord;\r\nvoid main() {\r\n    coord = ts_TexCoord.xy;\r\n    gl_Position = ts_ModelViewProjectionMatrix * ts_Vertex;\r\n}","// A fragment shader for rendering signed distance fields. Main use case: text.\r\n\r\nprecision mediump float;\r\n\r\n// the atlas texture\r\nuniform sampler2D u_texture;\r\n\r\n// the color the text should be rendered\r\nuniform vec4 u_color;\r\n\r\n// the zero distance value in the texture\r\nuniform float u_buffer;\r\n\r\n// control the bluriness of the output 0.05 is a good value\r\nuniform float u_gamma;\r\n\r\n// set to > 1.0 to just output the texture \r\nuniform float u_debug;\r\n\r\nvarying vec2 coord;\r\n\r\nvoid main() {\r\n    float dist = texture2D(u_texture, coord).r;\r\n    if (u_debug > 0.0) {\r\n        gl_FragColor = vec4(dist, dist, dist, 1);\r\n    } else {\r\n        float alpha = smoothstep(u_buffer - u_gamma, u_buffer + u_gamma, dist);\r\n        gl_FragColor = vec4(u_color.rgb, alpha * u_color.a);\r\n        if (gl_FragColor.a == 0.0) {\r\n            discard;\r\n        }\r\n    }\r\n}","/*\n ** Copyright (c) 2012 The Khronos Group Inc.\n **\n ** Permission is hereby granted, free of charge, to any person obtaining a\n ** copy of this software and/or associated documentation files (the\n ** 'Materials'), to deal in the Materials without restriction, including\n ** without limitation the rights to use, copy, modify, merge, publish,\n ** distribute, sublicense, and/or sell copies of the Materials, and to\n ** permit persons to whom the Materials are furnished to do so, subject to\n ** the following conditions:\n **\n ** The above copyright notice and this permission notice shall be included\n ** in all copies or substantial portions of the Materials.\n **\n ** THE MATERIALS ARE PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\n ** EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n ** MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n ** IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n ** CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n ** TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n ** MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.\n */\n\n// tslint:disable\nimport GL = WebGLRenderingContextStrict\nconst GL = (WebGLRenderingContext as any) as new () => WebGLRenderingContextStrict\n\n// Various functions for helping debug WebGL apps.\n\n/**\n * Wrapped logging function.\n * @param msg Message to log.\n */\nfunction log(msg: string) {\n  if (window.console && window.console.log) {\n    window.console.log(msg)\n  }\n}\n\n/**\n * Wrapped error logging function.\n * @param msg Message to log.\n */\nfunction error(msg: string) {\n  if (window.console && window.console.error) {\n    window.console.error(msg)\n  } else {\n    log(msg)\n  }\n}\n\n/**\n * Which arguments are enums based on the number of arguments to the function.\n * So\n *    'texImage2D': {\n *       9: { 0:true, 2:true, 6:true, 7:true },\n *       6: { 0:true, 2:true, 3:true, 4:true },\n *    },\n *\n * means if there are 9 arguments then 6 and 7 are enums, if there are 6\n * arguments 3 and 4 are enums\n *\n * @type {!Object.<number, !Object.<number, string>}\n */\nconst glValidEnumContexts: {\n  [funcName: string]: {\n    [argCount: number]: {\n      [argIndex: number]: boolean | { enumBitwiseOr: string[] }\n    }\n  }\n} = {\n  // Generic setters and getters\n\n  enable: { 1: { 0: true } },\n  disable: { 1: { 0: true } },\n  getParameter: { 1: { 0: true } },\n\n  // Rendering\n\n  drawArrays: { 3: { 0: true } },\n  drawElements: { 4: { 0: true, 2: true } },\n\n  // Shaders\n\n  createShader: { 1: { 0: true } },\n  getShaderParameter: { 2: { 1: true } },\n  getProgramParameter: { 2: { 1: true } },\n  getShaderPrecisionFormat: { 2: { 0: true, 1: true } },\n\n  // Vertex attributes\n\n  getVertexAttrib: { 2: { 1: true } },\n  vertexAttribPointer: { 6: { 2: true } },\n\n  // Textures\n\n  bindTexture: { 2: { 0: true } },\n  activeTexture: { 1: { 0: true } },\n  getTexParameter: { 2: { 0: true, 1: true } },\n  texParameterf: { 3: { 0: true, 1: true } },\n  texParameteri: { 3: { 0: true, 1: true, 2: true } },\n  // texImage2D and texSubImage2D are defined below with WebGL 2 entrypoints\n  copyTexImage2D: { 8: { 0: true, 2: true } },\n  copyTexSubImage2D: { 8: { 0: true } },\n  generateMipmap: { 1: { 0: true } },\n  // compressedTexImage2D and compressedTexSubImage2D are defined below with WebGL 2 entrypoints\n\n  // Buffer objects\n\n  bindBuffer: { 2: { 0: true } },\n  // bufferData and bufferSubData are defined below with WebGL 2 entrypoints\n  getBufferParameter: { 2: { 0: true, 1: true } },\n\n  // Renderbuffers and framebuffers\n\n  pixelStorei: { 2: { 0: true, 1: true } },\n  // readPixels is defined below with WebGL 2 entrypoints\n  bindRenderbuffer: { 2: { 0: true } },\n  bindFramebuffer: { 2: { 0: true } },\n  checkFramebufferStatus: { 1: { 0: true } },\n  framebufferRenderbuffer: { 4: { 0: true, 1: true, 2: true } },\n  framebufferTexture2D: { 5: { 0: true, 1: true, 2: true } },\n  getFramebufferAttachmentParameter: { 3: { 0: true, 1: true, 2: true } },\n  getRenderbufferParameter: { 2: { 0: true, 1: true } },\n  renderbufferStorage: { 4: { 0: true, 1: true } },\n\n  // Frame buffer operations (clear, blend, depth test, stencil)\n\n  clear: {\n    1: {\n      0: {\n        enumBitwiseOr: [\n          \"COLOR_BUFFER_BIT\",\n          \"DEPTH_BUFFER_BIT\",\n          \"STENCIL_BUFFER_BIT\",\n        ],\n      },\n    },\n  },\n  depthFunc: { 1: { 0: true } },\n  blendFunc: { 2: { 0: true, 1: true } },\n  blendFuncSeparate: { 4: { 0: true, 1: true, 2: true, 3: true } },\n  blendEquation: { 1: { 0: true } },\n  blendEquationSeparate: { 2: { 0: true, 1: true } },\n  stencilFunc: { 3: { 0: true } },\n  stencilFuncSeparate: { 4: { 0: true, 1: true } },\n  stencilMaskSeparate: { 2: { 0: true } },\n  stencilOp: { 3: { 0: true, 1: true, 2: true } },\n  stencilOpSeparate: { 4: { 0: true, 1: true, 2: true, 3: true } },\n\n  // Culling\n\n  cullFace: { 1: { 0: true } },\n  frontFace: { 1: { 0: true } },\n\n  // ANGLE_instanced_arrays extension\n\n  drawArraysInstancedANGLE: { 4: { 0: true } },\n  drawElementsInstancedANGLE: { 5: { 0: true, 2: true } },\n\n  // EXT_blend_minmax extension\n\n  blendEquationEXT: { 1: { 0: true } },\n\n  // WebGL 2 Buffer objects\n\n  bufferData: {\n    3: { 0: true, 2: true }, // WebGL 1\n    4: { 0: true, 2: true }, // WebGL 2\n    5: { 0: true, 2: true }, // WebGL 2\n  },\n  bufferSubData: {\n    3: { 0: true }, // WebGL 1\n    4: { 0: true }, // WebGL 2\n    5: { 0: true }, // WebGL 2\n  },\n  copyBufferSubData: { 5: { 0: true, 1: true } },\n  getBufferSubData: { 3: { 0: true }, 4: { 0: true }, 5: { 0: true } },\n\n  // WebGL 2 Framebuffer objects\n\n  blitFramebuffer: {\n    10: {\n      8: {\n        enumBitwiseOr: [\n          \"COLOR_BUFFER_BIT\",\n          \"DEPTH_BUFFER_BIT\",\n          \"STENCIL_BUFFER_BIT\",\n        ],\n      },\n      9: true,\n    },\n  },\n  framebufferTextureLayer: { 5: { 0: true, 1: true } },\n  invalidateFramebuffer: { 2: { 0: true } },\n  invalidateSubFramebuffer: { 6: { 0: true } },\n  readBuffer: { 1: { 0: true } },\n\n  // WebGL 2 Renderbuffer objects\n\n  getInternalformatParameter: { 3: { 0: true, 1: true, 2: true } },\n  renderbufferStorageMultisample: { 5: { 0: true, 2: true } },\n\n  // WebGL 2 Texture objects\n\n  texStorage2D: { 5: { 0: true, 2: true } },\n  texStorage3D: { 6: { 0: true, 2: true } },\n  texImage2D: {\n    9: { 0: true, 2: true, 6: true, 7: true }, // WebGL 1 & 2\n    6: { 0: true, 2: true, 3: true, 4: true }, // WebGL 1\n    10: { 0: true, 2: true, 6: true, 7: true }, // WebGL 2\n  },\n  texImage3D: {\n    10: { 0: true, 2: true, 7: true, 8: true },\n    11: { 0: true, 2: true, 7: true, 8: true },\n  },\n  texSubImage2D: {\n    9: { 0: true, 6: true, 7: true }, // WebGL 1 & 2\n    7: { 0: true, 4: true, 5: true }, // WebGL 1\n    10: { 0: true, 6: true, 7: true }, // WebGL 2\n  },\n  texSubImage3D: {\n    11: { 0: true, 8: true, 9: true },\n    12: { 0: true, 8: true, 9: true },\n  },\n  copyTexSubImage3D: { 9: { 0: true } },\n  compressedTexImage2D: {\n    7: { 0: true, 2: true }, // WebGL 1 & 2\n    8: { 0: true, 2: true }, // WebGL 2\n    9: { 0: true, 2: true }, // WebGL 2\n  },\n  compressedTexImage3D: {\n    8: { 0: true, 2: true },\n    9: { 0: true, 2: true },\n    10: { 0: true, 2: true },\n  },\n  compressedTexSubImage2D: {\n    8: { 0: true, 6: true }, // WebGL 1 & 2\n    9: { 0: true, 6: true }, // WebGL 2\n    10: { 0: true, 6: true }, // WebGL 2\n  },\n  compressedTexSubImage3D: {\n    10: { 0: true, 8: true },\n    11: { 0: true, 8: true },\n    12: { 0: true, 8: true },\n  },\n\n  // WebGL 2 Vertex attribs\n\n  vertexAttribIPointer: { 5: { 2: true } },\n\n  // WebGL 2 Writing to the drawing buffer\n\n  drawArraysInstanced: { 4: { 0: true } },\n  drawElementsInstanced: { 5: { 0: true, 2: true } },\n  drawRangeElements: { 6: { 0: true, 4: true } },\n\n  // WebGL 2 Reading back pixels\n\n  readPixels: {\n    7: { 4: true, 5: true }, // WebGL 1 & 2\n    8: { 4: true, 5: true }, // WebGL 2\n  },\n\n  // WebGL 2 Multiple Render Targets\n\n  clearBufferfv: { 3: { 0: true }, 4: { 0: true } },\n  clearBufferiv: { 3: { 0: true }, 4: { 0: true } },\n  clearBufferuiv: { 3: { 0: true }, 4: { 0: true } },\n  clearBufferfi: { 4: { 0: true } },\n\n  // WebGL 2 Query objects\n\n  beginQuery: { 2: { 0: true } },\n  endQuery: { 1: { 0: true } },\n  getQuery: { 2: { 0: true, 1: true } },\n  getQueryParameter: { 2: { 1: true } },\n\n  // WebGL 2 Sampler objects\n\n  samplerParameteri: { 3: { 1: true, 2: true } },\n  samplerParameterf: { 3: { 1: true } },\n  getSamplerParameter: { 2: { 1: true } },\n\n  // WebGL 2 Sync objects\n\n  fenceSync: { 2: { 0: true, 1: { enumBitwiseOr: [] } } },\n  clientWaitSync: {\n    3: { 1: { enumBitwiseOr: [\"SYNC_FLUSH_COMMANDS_BIT\"] } },\n  },\n  waitSync: { 3: { 1: { enumBitwiseOr: [] } } },\n  getSyncParameter: { 2: { 1: true } },\n\n  // WebGL 2 Transform Feedback\n\n  bindTransformFeedback: { 2: { 0: true } },\n  beginTransformFeedback: { 1: { 0: true } },\n  transformFeedbackVaryings: { 3: { 2: true } },\n\n  // WebGL2 Uniform Buffer Objects and Transform Feedback Buffers\n\n  bindBufferBase: { 3: { 0: true } },\n  bindBufferRange: { 5: { 0: true } },\n  getIndexedParameter: { 2: { 0: true } },\n  getActiveUniforms: { 3: { 2: true } },\n  getActiveUniformBlockParameter: { 3: { 2: true } },\n}\n\n/**\n * Map of numbers to names.\n * @type {Object}\n */\nlet glEnums: { [k: number]: string } = null as any\n\n/**\n * Map of names to numbers.\n * @type {Object}\n */\nlet enumStringToValue: { [k: string]: GL.GLenum<string> } = null as any\n\n/**\n * Initializes this module. Safe to call more than once.\n * @param ctx A WebGL context. If\n *    you have more than one context it doesn't matter which one\n *    you pass in, it is only used to pull out constants.\n */\nexport function init() {\n  if (null === glEnums) {\n    glEnums = {}\n    enumStringToValue = {}\n    const c =\n      (window as any).WebGL2RenderingContext ||\n      (window as any).WebGLRenderingContext\n    if (!c)\n      throw new Error(\n        \"Neither WebGL2RenderingContext nor WebGLRenderingContext exists on window.\",\n      )\n    for (const propertyName in c) {\n      const prop = c[propertyName]\n      if (\"number\" === typeof prop) {\n        glEnums[prop] = propertyName\n        enumStringToValue[propertyName] = prop as any\n      }\n    }\n  }\n}\n\n/**\n * Returns true or false if value matches any WebGL enum\n * @param value Value to check if it might be an enum.\n * @return True if value matches one of the WebGL defined enums\n */\nexport function mightBeEnum(value: number): boolean {\n  init()\n  return glEnums[value] !== undefined\n}\n\n/**\n * Gets an string version of an WebGL enum.\n *\n * Example:\n *   var str = WebGLDebugUtil.glEnumToString(ctx.getError())\n *\n * @param value Value to return an enum for\n * @return The string version of the enum.\n */\nexport function glEnumToString(value: GL.GLenum<string>): string {\n  init()\n  var name = glEnums[value as any]\n  return name !== undefined\n    ? \"gl.\" + name\n    : \"/*UNKNOWN WebGL ENUM*/ 0x\" + (value as any).toString(16) + \"\"\n}\n\n/**\n * Converts the argument of a WebGL function to a string.\n * Attempts to convert enum arguments to strings.\n *\n * Example:\n *   WebGLDebugUtil.init(ctx)\n *   var str = WebGLDebugUtil.glFunctionArgToString('bindTexture', 2, 0, gl.TEXTURE_2D)\n *\n * would return 'TEXTURE_2D'\n *\n * @param functionName the name of the WebGL function.\n * @param numArgs the number of arguments passed to the function.\n * @param argumentIndex the index of the argument.\n * @param value The value of the argument.\n * @return The value as a string.\n */\nexport function glFunctionArgToString(\n  functionName: string,\n  numArgs: number,\n  argumentIndex: number,\n  value: any,\n): string {\n  const funcInfo = glValidEnumContexts[functionName]\n  if (funcInfo !== undefined) {\n    const funcOverloadInfo = funcInfo[numArgs]\n    if (funcOverloadInfo !== undefined) {\n      const argInfo = funcOverloadInfo[argumentIndex]\n      if (argInfo) {\n        if (typeof argInfo === \"object\") {\n          const enums = argInfo.enumBitwiseOr\n          const orEnums = []\n          let orResult = 0\n          for (let i = 0; i < enums.length; ++i) {\n            const enumValue = enumStringToValue[enums[i]]\n            if ((value & enumValue) !== 0) {\n              orResult |= enumValue\n              orEnums.push(glEnumToString(enumValue))\n            }\n          }\n          if (orResult === value) {\n            return orEnums.join(\" | \")\n          } else {\n            return glEnumToString(value)\n          }\n        } else {\n          return glEnumToString(value)\n        }\n      }\n    }\n  }\n  if (value === null) {\n    return \"null\"\n  } else if (value === undefined) {\n    return \"undefined\"\n  } else {\n    return value.toString()\n  }\n}\n\n/**\n * Converts the arguments of a WebGL function to a string.\n * Attempts to convert enum arguments to strings.\n *\n * @param functionName the name of the WebGL function.\n * @param args The arguments.\n * @return The arguments as a string.\n */\nexport function glFunctionArgsToString(\n  functionName: string,\n  args: number[],\n): string {\n  // apparently we can't do args.join(',')\n  var argStr = \"\"\n  var numArgs = args.length\n  for (var ii = 0; ii < numArgs; ++ii) {\n    argStr +=\n      (ii == 0 ? \"\" : \", \") +\n      glFunctionArgToString(functionName, numArgs, ii, args[ii])\n  }\n  return argStr\n}\n\nfunction makePropertyWrapper(\n  wrapper: any,\n  original: any,\n  propertyName: string,\n) {\n  //log('wrap prop: ' + propertyName)\n  wrapper.__defineGetter__(propertyName, function () {\n    return original[propertyName]\n  })\n  // TODO(gmane): this needs to handle properties that take more than\n  // one value?\n  wrapper.__defineSetter__(propertyName, function (value: any) {\n    //log('set: ' + propertyName)\n    original[propertyName] = value\n  })\n}\n\n/**\n * Given a WebGL context returns a wrapped context that calls\n * gl.getError after every command and calls a function if the\n * result is not NO_ERROR.\n *\n * You can supply your own function if you want. For example, if you'd like\n * an exception thrown on any GL error you could do this\n *\n *    function throwOnGLError(err, funcName, args) {\n *      throw new Error(WebGLDebugUtils.glEnumToString(err) +\n *            ' was caused by call to ' + funcName)\n *    }\n *\n *    ctx = WebGLDebugUtils.makeDebugContext(\n *        canvas.getContext('webgl'), throwOnGLError)\n *\n * @param ctx The webgl context to wrap.\n * @param opt_onErrorFunc The function\n *     to call when gl.getError returns an error. If not specified the default\n *     function calls console.log with a message.\n * @param opt_onFunc The\n *     function to call when each webgl function is called. You\n *     can use this to log all calls for example.\n * @param opt_err_ctx The webgl context\n *        to call getError on if different than ctx.\n */\nexport function makeDebugContext(\n  ctx: WebGLRenderingContextStrict,\n  opt_onErrorFunc?: (err: GL.Error, funcName: string, args: any[]) => void,\n  opt_onFunc?: (funcName: string, args: any[]) => void,\n  opt_err_ctx: WebGLRenderingContextStrict = ctx,\n): WebGLRenderingContext {\n  init()\n  opt_onErrorFunc =\n    opt_onErrorFunc ||\n    function (err, functionName, args) {\n      // apparently we can't do args.join(',')\n      var argStr = \"\"\n      var numArgs = args.length\n      for (let i = 0; i < numArgs; ++i) {\n        argStr +=\n          (i == 0 ? \"\" : \", \") +\n          glFunctionArgToString(functionName, numArgs, i, args[i])\n      }\n      error(\n        \"WebGL error \" +\n          glEnumToString(err) +\n          \" in \" +\n          functionName +\n          \"(\" +\n          argStr +\n          \")\",\n      )\n    }\n\n  // Holds booleans for each GL error so after we get the error ourselves\n  // we can still return it to the client app.\n  const glErrorShadow: { [k: number]: boolean } = {}\n\n  // Makes a function that calls a WebGL function and then calls getError.\n  function makeErrorWrapper(\n    ctx: WebGLRenderingContextStrict,\n    functionName: string,\n  ) {\n    return function (...args: any[]) {\n      if (opt_onFunc) {\n        opt_onFunc(functionName, args)\n      }\n      const result = (ctx as any)[functionName].apply(ctx, args)\n      const err = opt_err_ctx.getError()\n      if (err != 0) {\n        glErrorShadow[err] = true\n        opt_onErrorFunc!(err, functionName, args)\n      }\n      return result\n    }\n  }\n\n  // Make a an object that has a copy of every property of the WebGL context\n  // but wraps all functions.\n  const wrapper: any = {}\n  for (let propertyName in ctx) {\n    const prop = ctx[propertyName as keyof WebGLRenderingContextStrict]\n    if (\"function\" === typeof prop) {\n      if (propertyName != \"getExtension\") {\n        wrapper[propertyName] = makeErrorWrapper(ctx, propertyName)\n      } else {\n        let wrapped = makeErrorWrapper(ctx, propertyName)\n        wrapper[propertyName as any] = function () {\n          const result = wrapped.apply(ctx, arguments)\n          if (!result) {\n            return null\n          }\n          return makeDebugContext(\n            result,\n            opt_onErrorFunc,\n            opt_onFunc,\n            opt_err_ctx,\n          )\n        }\n      }\n    } else {\n      makePropertyWrapper(wrapper, ctx, propertyName)\n    }\n  }\n\n  // Override the getError function with one that returns our saved results.\n  wrapper.getError = function () {\n    for (const err in glErrorShadow) {\n      if (glErrorShadow.hasOwnProperty(err)) {\n        if (glErrorShadow[err]) {\n          glErrorShadow[err] = false\n          return parseInt(err)\n        }\n      }\n    }\n    return ctx.NO_ERROR\n  }\n\n  return wrapper\n}\nexport function isWebGL2RenderingContext(o: any): o is WebGL2RenderingContext {\n  return !!o.createTransformFeedback\n}\n/**\n * Resets a context to the initial state.\n * @param ctx The webgl context to\n *     reset.\n */\nexport function resetToInitialState(\n  ctx2: WebGL2RenderingContextStrict | WebGLRenderingContextStrict,\n) {\n  if (isWebGL2RenderingContext(ctx2)) {\n    ctx2.bindVertexArray(null)\n  }\n\n  const numAttribs = ctx2.getParameter(ctx2.MAX_VERTEX_ATTRIBS)\n  const tmp = ctx2.createBuffer()\n  ctx2.bindBuffer(ctx2.ARRAY_BUFFER, tmp)\n  for (let ii = 0; ii < numAttribs; ++ii) {\n    ctx2.disableVertexAttribArray(ii)\n    ctx2.vertexAttribPointer(ii, 4, ctx2.FLOAT, false, 0, 0)\n    ctx2.vertexAttrib1f(ii, 0)\n    if (isWebGL2RenderingContext(ctx2)) {\n      ctx2.vertexAttribDivisor(ii, 0)\n    }\n  }\n  ctx2.deleteBuffer(tmp)\n\n  const numTextureUnits = ctx2.getParameter(ctx2.MAX_TEXTURE_IMAGE_UNITS)\n  for (let ii = 0; ii < numTextureUnits; ++ii) {\n    ctx2.activeTexture((ctx2.TEXTURE0 + ii) as GL.TextureUnit)\n    ctx2.bindTexture(ctx2.TEXTURE_CUBE_MAP, null)\n    ctx2.bindTexture(ctx2.TEXTURE_2D, null)\n    if (isWebGL2RenderingContext(ctx2)) {\n      ctx2.bindTexture(ctx2.TEXTURE_2D_ARRAY, null)\n      ctx2.bindTexture(ctx2.TEXTURE_3D, null)\n      ctx2.bindSampler(ii, null)\n    }\n  }\n\n  ctx2.activeTexture(ctx2.TEXTURE0)\n  ctx2.useProgram(null)\n  ctx2.bindBuffer(ctx2.ARRAY_BUFFER, null)\n  ctx2.bindBuffer(ctx2.ELEMENT_ARRAY_BUFFER, null)\n  ctx2.bindFramebuffer(ctx2.FRAMEBUFFER, null)\n  ctx2.bindRenderbuffer(ctx2.RENDERBUFFER, null)\n  ctx2.disable(ctx2.BLEND)\n  ctx2.disable(ctx2.CULL_FACE)\n  ctx2.disable(ctx2.DEPTH_TEST)\n  ctx2.disable(ctx2.DITHER)\n  ctx2.disable(ctx2.SCISSOR_TEST)\n  ctx2.blendColor(0, 0, 0, 0)\n  ctx2.blendEquation(ctx2.FUNC_ADD)\n  ctx2.blendFunc(ctx2.ONE, ctx2.ZERO)\n  ctx2.clearColor(0, 0, 0, 0)\n  ctx2.clearDepth(1)\n  ctx2.clearStencil(-1)\n  ctx2.colorMask(true, true, true, true)\n  ctx2.cullFace(ctx2.BACK)\n  ctx2.depthFunc(ctx2.LESS)\n  ctx2.depthMask(true)\n  ctx2.depthRange(0, 1)\n  ctx2.frontFace(ctx2.CCW)\n  ctx2.hint(ctx2.GENERATE_MIPMAP_HINT, ctx2.DONT_CARE)\n  ctx2.lineWidth(1)\n  ctx2.pixelStorei(ctx2.PACK_ALIGNMENT, 4)\n  ctx2.pixelStorei(ctx2.UNPACK_ALIGNMENT, 4)\n  ctx2.pixelStorei(ctx2.UNPACK_FLIP_Y_WEBGL, false)\n  ctx2.pixelStorei(ctx2.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false)\n  ctx2.pixelStorei(\n    ctx2.UNPACK_COLORSPACE_CONVERSION_WEBGL,\n    ctx2.BROWSER_DEFAULT_WEBGL,\n  )\n  ctx2.polygonOffset(0, 0)\n  ctx2.sampleCoverage(1, false)\n  ctx2.scissor(0, 0, ctx2.canvas.width, ctx2.canvas.height)\n  ctx2.stencilFunc(ctx2.ALWAYS, 0, 0xffffffff)\n  ctx2.stencilMask(0xffffffff)\n  ctx2.stencilOp(ctx2.KEEP, ctx2.KEEP, ctx2.KEEP)\n  ctx2.viewport(0, 0, ctx2.canvas.width, ctx2.canvas.height)\n  ctx2.clear(\n    ctx2.COLOR_BUFFER_BIT | ctx2.DEPTH_BUFFER_BIT | ctx2.STENCIL_BUFFER_BIT,\n  )\n\n  if (isWebGL2RenderingContext(ctx2)) {\n    ctx2.drawBuffers([ctx2.BACK])\n    ctx2.readBuffer(ctx2.BACK)\n    ctx2.bindBuffer(ctx2.COPY_READ_BUFFER, null)\n    ctx2.bindBuffer(ctx2.COPY_WRITE_BUFFER, null)\n    ctx2.bindBuffer(ctx2.PIXEL_PACK_BUFFER, null)\n    ctx2.bindBuffer(ctx2.PIXEL_UNPACK_BUFFER, null)\n    const numTransformFeedbacks = ctx2.getParameter(\n      ctx2.MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS,\n    )\n    for (let ii = 0; ii < numTransformFeedbacks; ++ii) {\n      ctx2.bindBufferBase(ctx2.TRANSFORM_FEEDBACK_BUFFER, ii, null)\n    }\n    const numUBOs = ctx2.getParameter(ctx2.MAX_UNIFORM_BUFFER_BINDINGS)\n    for (let ii = 0; ii < numUBOs; ++ii) {\n      ctx2.bindBufferBase(ctx2.UNIFORM_BUFFER, ii, null)\n    }\n    ctx2.disable(ctx2.RASTERIZER_DISCARD)\n    ctx2.pixelStorei(ctx2.UNPACK_IMAGE_HEIGHT, 0)\n    ctx2.pixelStorei(ctx2.UNPACK_SKIP_IMAGES, 0)\n    ctx2.pixelStorei(ctx2.UNPACK_ROW_LENGTH, 0)\n    ctx2.pixelStorei(ctx2.UNPACK_SKIP_ROWS, 0)\n    ctx2.pixelStorei(ctx2.UNPACK_SKIP_PIXELS, 0)\n    ctx2.pixelStorei(ctx2.PACK_ROW_LENGTH, 0)\n    ctx2.pixelStorei(ctx2.PACK_SKIP_ROWS, 0)\n    ctx2.pixelStorei(ctx2.PACK_SKIP_PIXELS, 0)\n    ctx2.hint(ctx2.FRAGMENT_SHADER_DERIVATIVE_HINT, ctx2.DONT_CARE)\n  }\n\n  // TODO: This should NOT be needed but Firefox fails with 'hint'\n  while (ctx2.getError()) {}\n}\n\n/**\n * Given a canvas element returns a wrapped canvas element that will\n * simulate lost context. The canvas returned adds the following functions.\n *\n * loseContext:\n *   simulates a lost context event.\n *\n * restoreContext:\n *   simulates the context being restored.\n *\n * lostContextInNCalls:\n *   loses the context after N gl calls.\n *\n * getNumCalls:\n *   tells you how many gl calls there have been so far.\n *\n * setRestoreTimeout:\n *   sets the number of milliseconds until the context is restored\n *   after it has been lost. Defaults to 0. Pass -1 to prevent\n *   automatic restoring.\n *\n * @param canvas The canvas element to wrap.\n */\nexport function makeLostContextSimulatingCanvas(canvas: HTMLCanvasElement) {\n  const canvas2 = canvas as any\n  let unwrappedContext_:\n    | WebGLRenderingContextStrict\n    | WebGL2RenderingContextStrict\n  const onLost_: WebGLContextEventListener[] = []\n  const onRestored_: WebGLContextEventListener[] = []\n  let wrappedContext_: any = {}\n  let contextId_ = 1\n  let contextLost_ = false\n  // const resourceId_ = 0\n  const resourceDb_: WebGLObject[] = []\n  let numCallsToLoseContext_ = 0\n  let numCalls_ = 0\n  let canRestore_ = false\n  let restoreTimeout_ = 0\n\n  // Holds booleans for each GL error so can simulate errors.\n  const glErrorShadow_: { [e: number]: boolean } = {}\n\n  canvas2.getContext = (function (f) {\n    return function () {\n      const ctx = f.apply(canvas2, arguments) as WebGLRenderingContextStrict\n      // Did we get a context and is it a WebGL context?\n      // @ts-ignore\n      if (\n        ctx instanceof GL ||\n        ((window as any).WebGL2RenderingContext &&\n          ctx instanceof WebGL2RenderingContext)\n      ) {\n        if (ctx != unwrappedContext_) {\n          if (unwrappedContext_) {\n            throw new Error(\"got different context\")\n          }\n          unwrappedContext_ = ctx\n          wrappedContext_ = makeLostContextSimulatingContext(unwrappedContext_)\n        }\n        return wrappedContext_\n      }\n      return ctx\n    }\n  })(canvas2.getContext)\n\n  function wrapEvent(\n    listener:\n      | WebGLContextEventListener\n      | { handleEvent: WebGLContextEventListener },\n  ) {\n    if (typeof listener == \"function\") {\n      return listener\n    } else {\n      return function (e: CustomWebGLContextEvent) {\n        listener.handleEvent(e)\n      }\n    }\n  }\n\n  function addOnContextLostListener(\n    listener:\n      | WebGLContextEventListener\n      | { handleEvent: WebGLContextEventListener },\n  ) {\n    onLost_.push(wrapEvent(listener))\n  }\n\n  function addOnContextRestoredListener(\n    listener:\n      | WebGLContextEventListener\n      | { handleEvent: WebGLContextEventListener },\n  ) {\n    onRestored_.push(wrapEvent(listener))\n  }\n\n  function wrapAddEventListener(canvas: HTMLCanvasElement) {\n    const f = canvas.addEventListener\n    canvas.addEventListener = function (type: string, listener: any) {\n      switch (type) {\n        case \"webglcontextlost\":\n          addOnContextLostListener(listener)\n          break\n        case \"webglcontextrestored\":\n          addOnContextRestoredListener(listener)\n          break\n        default:\n          f.apply(canvas, arguments)\n      }\n    }\n  }\n\n  wrapAddEventListener(canvas2)\n\n  canvas2.loseContext = function () {\n    if (!contextLost_) {\n      contextLost_ = true\n      numCallsToLoseContext_ = 0\n      ++contextId_\n      while (unwrappedContext_.getError()) clearErrors()\n      glErrorShadow_[unwrappedContext_.CONTEXT_LOST_WEBGL] = true\n      const event = makeWebGLContextEvent(\"context lost\")\n      const callbacks = onLost_.slice()\n      setTimeout(function () {\n        //log('numCallbacks:' + callbacks.length)\n        for (let ii = 0; ii < callbacks.length; ++ii) {\n          //log('calling callback:' + ii)\n          callbacks[ii](event)\n        }\n        if (restoreTimeout_ >= 0) {\n          setTimeout(function () {\n            canvas2.restoreContext()\n          }, restoreTimeout_)\n        }\n      }, 0)\n    }\n  }\n\n  canvas2.restoreContext = function () {\n    if (contextLost_) {\n      if (onRestored_.length) {\n        setTimeout(function () {\n          if (!canRestore_) {\n            throw new Error(\n              \"can not restore. webglcontestlost listener did not call event.preventDefault\",\n            )\n          }\n          freeResources()\n          resetToInitialState(unwrappedContext_)\n          contextLost_ = false\n          numCalls_ = 0\n          canRestore_ = false\n          const callbacks = onRestored_.slice()\n          const event = makeWebGLContextEvent(\"context restored\")\n          for (let ii = 0; ii < callbacks.length; ++ii) {\n            callbacks[ii](event)\n          }\n        }, 0)\n      }\n    }\n  }\n\n  canvas2.loseContextInNCalls = function (numCalls: number) {\n    if (contextLost_) {\n      throw new Error(\"You can not ask a lost context to be lost\")\n    }\n    numCallsToLoseContext_ = numCalls_ + numCalls\n  }\n\n  canvas2.getNumCalls = function () {\n    return numCalls_\n  }\n\n  canvas2.setRestoreTimeout = function (timeout: number) {\n    restoreTimeout_ = timeout\n  }\n\n  // function isWebGLObject(obj: any): obj is WebGLObject {\n  // \t//return false\n  // \treturn (\n  // \t\tobj instanceof WebGLBuffer ||\n  // \t\tobj instanceof WebGLFramebuffer ||\n  // \t\tobj instanceof WebGLProgram ||\n  // \t\tobj instanceof WebGLRenderbuffer ||\n  // \t\tobj instanceof WebGLShader ||\n  // \t\tobj instanceof WebGLTexture\n  // \t)\n  // }\n\n  // function checkResources(args: any[]) {\n  // \tfor (let i = 0; i < args.length; ++i) {\n  // \t\tconst arg = args[i]\n  // \t\tif (isWebGLObject(arg)) {\n  // \t\t\treturn (arg as any).__webglDebugContextLostId__ == contextId_\n  // \t\t}\n  // \t}\n  // \treturn true\n  // }\n\n  function clearErrors() {\n    const k = (Object.keys(glErrorShadow_) as any) as number[]\n    for (let i = 0; i < k.length; ++i) {\n      delete glErrorShadow_[k[i]]\n    }\n  }\n\n  function loseContextIfTime() {\n    ++numCalls_\n    if (!contextLost_) {\n      if (numCallsToLoseContext_ == numCalls_) {\n        canvas2.loseContext()\n      }\n    }\n  }\n\n  // Makes a function that simulates WebGL when out of context.\n  function makeLostContextFunctionWrapper(\n    ctx: WebGLRenderingContextStrict,\n    functionName: string,\n  ) {\n    const f = (ctx as any)[functionName]\n    return function () {\n      // log('calling:' + functionName)\n      // Only call the functions if the context is not lost.\n      loseContextIfTime()\n      if (!contextLost_) {\n        //if (!checkResources(arguments)) {\n        //  glErrorShadow_[wrappedContext_.INVALID_OPERATION] = true\n        //  return\n        //}\n        const result = f.apply(ctx, arguments)\n        return result\n      }\n    }\n  }\n\n  function freeResources() {\n    for (let ii = 0; ii < resourceDb_.length; ++ii) {\n      const resource = resourceDb_[ii]\n      if (resource instanceof WebGLBuffer) {\n        unwrappedContext_.deleteBuffer(resource)\n      } else if (resource instanceof WebGLFramebuffer) {\n        unwrappedContext_.deleteFramebuffer(resource)\n      } else if (resource instanceof WebGLProgram) {\n        unwrappedContext_.deleteProgram(resource)\n      } else if (resource instanceof WebGLRenderbuffer) {\n        unwrappedContext_.deleteRenderbuffer(resource)\n      } else if (resource instanceof WebGLShader) {\n        unwrappedContext_.deleteShader(resource)\n      } else if (resource instanceof WebGLTexture) {\n        unwrappedContext_.deleteTexture(resource)\n      } else if (isWebGL2RenderingContext(unwrappedContext_)) {\n        if (resource instanceof WebGLQuery) {\n          unwrappedContext_.deleteQuery(resource)\n        } else if (resource instanceof WebGLSampler) {\n          unwrappedContext_.deleteSampler(resource)\n        } else if (resource instanceof WebGLSync) {\n          unwrappedContext_.deleteSync(resource)\n        } else if (resource instanceof WebGLTransformFeedback) {\n          unwrappedContext_.deleteTransformFeedback(resource)\n        } else if (resource instanceof WebGLVertexArrayObject) {\n          unwrappedContext_.deleteVertexArray(resource)\n        }\n      }\n    }\n  }\n  interface CustomWebGLContextEvent {\n    statusMessage: string\n    preventDefault: () => void\n  }\n  type WebGLContextEventListener = (e: CustomWebGLContextEvent) => void\n  function makeWebGLContextEvent(\n    statusMessage: string,\n  ): CustomWebGLContextEvent {\n    return {\n      statusMessage: statusMessage,\n      preventDefault: function () {\n        canRestore_ = true\n      },\n    }\n  }\n\n  return canvas2\n\n  function makeLostContextSimulatingContext(ctx: WebGLRenderingContextStrict) {\n    // copy all functions and properties to wrapper\n    for (const propertyName in ctx) {\n      if (typeof (ctx as any)[propertyName] == \"function\") {\n        wrappedContext_[propertyName] = makeLostContextFunctionWrapper(\n          ctx,\n          propertyName,\n        )\n      } else {\n        makePropertyWrapper(wrappedContext_, ctx, propertyName)\n      }\n    }\n\n    // Wrap a few functions specially.\n    wrappedContext_.getError = function () {\n      loseContextIfTime()\n      if (!contextLost_) {\n        let err\n        while ((err = unwrappedContext_.getError())) {\n          glErrorShadow_[err] = true\n        }\n      }\n      for (const err in glErrorShadow_) {\n        if (glErrorShadow_[err]) {\n          delete glErrorShadow_[err]\n          return err\n        }\n      }\n      return wrappedContext_.NO_ERROR\n    }\n\n    const creationFunctions = [\n      \"createBuffer\",\n      \"createFramebuffer\",\n      \"createProgram\",\n      \"createRenderbuffer\",\n      \"createShader\",\n      \"createTexture\",\n    ]\n    if (isWebGL2RenderingContext(ctx)) {\n      creationFunctions.push(\n        \"createQuery\",\n        \"createSampler\",\n        \"fenceSync\",\n        \"createTransformFeedback\",\n        \"createVertexArray\",\n      )\n    }\n    for (let i = 0; i < creationFunctions.length; ++i) {\n      const functionName = creationFunctions[i]\n      wrappedContext_[functionName] = (function (f) {\n        return function () {\n          loseContextIfTime()\n          if (contextLost_) {\n            return null\n          }\n          const obj = f.apply(ctx, arguments)\n          obj.__webglDebugContextLostId__ = contextId_\n          resourceDb_.push(obj)\n          return obj\n        }\n      })((ctx as any)[functionName])\n    }\n\n    const functionsThatShouldReturnNull = [\n      \"getActiveAttrib\",\n      \"getActiveUniform\",\n      \"getBufferParameter\",\n      \"getContextAttributes\",\n      \"getAttachedShaders\",\n      \"getFramebufferAttachmentParameter\",\n      \"getParameter\",\n      \"getProgramParameter\",\n      \"getProgramInfoLog\",\n      \"getRenderbufferParameter\",\n      \"getShaderParameter\",\n      \"getShaderInfoLog\",\n      \"getShaderSource\",\n      \"getTexParameter\",\n      \"getUniform\",\n      \"getUniformLocation\",\n      \"getVertexAttrib\",\n    ]\n    if (isWebGL2RenderingContext(ctx)) {\n      functionsThatShouldReturnNull.push(\n        \"getInternalformatParameter\",\n        \"getQuery\",\n        \"getQueryParameter\",\n        \"getSamplerParameter\",\n        \"getSyncParameter\",\n        \"getTransformFeedbackVarying\",\n        \"getIndexedParameter\",\n        \"getUniformIndices\",\n        \"getActiveUniforms\",\n        \"getActiveUniformBlockParameter\",\n        \"getActiveUniformBlockName\",\n      )\n    }\n    for (let ii = 0; ii < functionsThatShouldReturnNull.length; ++ii) {\n      const functionName = functionsThatShouldReturnNull[ii]\n      wrappedContext_[functionName] = (function (f) {\n        return function () {\n          loseContextIfTime()\n          if (contextLost_) {\n            return null\n          }\n          return f.apply(ctx, arguments)\n        }\n      })(wrappedContext_[functionName])\n    }\n\n    const isFunctions = [\n      \"isBuffer\",\n      \"isEnabled\",\n      \"isFramebuffer\",\n      \"isProgram\",\n      \"isRenderbuffer\",\n      \"isShader\",\n      \"isTexture\",\n    ]\n    if (isWebGL2RenderingContext(ctx)) {\n      isFunctions.push(\n        \"isQuery\",\n        \"isSampler\",\n        \"isSync\",\n        \"isTransformFeedback\",\n        \"isVertexArray\",\n      )\n    }\n    for (let ii = 0; ii < isFunctions.length; ++ii) {\n      const functionName = isFunctions[ii]\n      wrappedContext_[functionName] = (function (f) {\n        return function () {\n          loseContextIfTime()\n          if (contextLost_) {\n            return false\n          }\n          return f.apply(ctx, arguments)\n        }\n      })(wrappedContext_[functionName])\n    }\n\n    wrappedContext_.checkFramebufferStatus = (function (f) {\n      return function () {\n        loseContextIfTime()\n        if (contextLost_) {\n          return wrappedContext_.FRAMEBUFFER_UNSUPPORTED\n        }\n        return f.apply(ctx, arguments)\n      }\n    })(wrappedContext_.checkFramebufferStatus)\n\n    wrappedContext_.getAttribLocation = (function (f) {\n      return function () {\n        loseContextIfTime()\n        if (contextLost_) {\n          return -1\n        }\n        return f.apply(ctx, arguments)\n      }\n    })(wrappedContext_.getAttribLocation)\n\n    wrappedContext_.getVertexAttribOffset = (function (f) {\n      return function () {\n        loseContextIfTime()\n        if (contextLost_) {\n          return 0\n        }\n        return f.apply(ctx, arguments)\n      }\n    })(wrappedContext_.getVertexAttribOffset)\n\n    wrappedContext_.isContextLost = function () {\n      return contextLost_\n    }\n\n    if (isWebGL2RenderingContext(ctx)) {\n      wrappedContext_.getFragDataLocation = (function (f) {\n        return function () {\n          loseContextIfTime()\n          if (contextLost_) {\n            return -1\n          }\n          return f.apply(ctx, arguments)\n        }\n      })(wrappedContext_.getFragDataLocation)\n\n      wrappedContext_.clientWaitSync = (function (f) {\n        return function () {\n          loseContextIfTime()\n          if (contextLost_) {\n            return wrappedContext_.WAIT_FAILED\n          }\n          return f.apply(ctx, arguments)\n        }\n      })(wrappedContext_.clientWaitSync)\n\n      wrappedContext_.getUniformBlockIndex = (function (f) {\n        return function () {\n          loseContextIfTime()\n          if (contextLost_) {\n            return wrappedContext_.INVALID_INDEX\n          }\n          return f.apply(ctx, arguments)\n        }\n      })(wrappedContext_.getUniformBlockIndex)\n    }\n\n    return wrappedContext_\n  }\n}\n","/// <reference types=\"webgl-strict-types\" />\nimport * as chroma from \"chroma.ts\"\nimport { addOwnProperties, assert, DEG, int, M4, P3ZX, V, V3 } from \"ts3dutils\"\n\nimport posCoordVS from \"../src/shaders/posCoordVS.glslx\"\nimport sdfRenderFS from \"../src/shaders/sdfRenderFS.glslx\"\nimport { makeDebugContext, Mesh, Shader, Texture } from \"./index\"\nimport { glEnumToString } from \"./KhronosGroupWebGLDebug\"\n\nimport GL = WebGLRenderingContextStrict\nexport type GL_COLOR = [number, number, number, number]\n/**\n * There's only one constant, use it for default values. Use chroma-js or similar for actual colors.\n */\nexport const GL_COLOR_BLACK: GL_COLOR = [0, 0, 0, 1]\n\nexport function currentGL(): TSGLContext {\n  return TSGLContextBase.gl\n}\n\nexport function isNumber(obj: any) {\n  const str = Object.prototype.toString.call(obj)\n  return str == \"[object Number]\" || str == \"[object Boolean]\"\n}\n\nexport type UniformType = V3 | M4 | number[] | boolean | number\nexport type TSGLContext = TSGLContextBase &\n  (WebGLRenderingContextStrict | WebGL2RenderingContextStrict)\nexport interface TSGLContextBase extends WebGLRenderingContextStrict {}\nexport class TSGLContextBase {\n  modelViewMatrix: M4 = M4.identity()\n  projectionMatrix: M4 = M4.identity()\n  static readonly MODELVIEW: { __MATRIX_MODE_CONSTANT: any } = 0 as any\n  static readonly PROJECTION: { __MATRIX_MODE_CONSTANT: any } = 1 as any\n  MODELVIEW: typeof TSGLContextBase.MODELVIEW\n  PROJECTION: typeof TSGLContextBase.PROJECTION\n\n  readonly version: 1 | 2\n\n  static HALF_FLOAT_OES: int = 0x8d61\n  HALF_FLOAT_OES: int\n\n  private tempMatrix = new M4()\n  private resultMatrix = new M4()\n  private modelViewStack: M4[] = []\n  private projectionStack: M4[] = []\n  private currentMatrixName: \"modelViewMatrix\" | \"projectionMatrix\"\n  private stack: M4[]\n\n  meshes: { [name: string]: Mesh }\n  shaders: { [name: string]: Shader }\n  public drawCallCount: int = 0\n  public projectionMatrixVersion: int = 0\n  public modelViewMatrixVersion: int = 0\n  textCtx!: CanvasRenderingContext2D\n  TEXT_TEXTURE_HEIGHT: string\n  TEXT_TEXTURE_FONT: string\n  textMetrics: FontJsonMetrics\n  textAtlas: Texture\n  textRenderShader: Shader<any, any>\n\n  protected constructor(\n    gl: TSGLContextBase,\n    private immediate = {\n      mesh: new Mesh()\n        .addVertexBuffer(\"coords\", \"ts_TexCoord\")\n        .addVertexBuffer(\"colors\", \"ts_Color\"),\n      mode: -1 as GL.DrawMode | -1,\n      coord: [0, 0] as [number, number],\n      color: [1, 1, 1, 1] as GL_COLOR,\n      pointSize: 1,\n      shader: Shader.create(\n        `\n\t\t\tattribute vec4 ts_Color;\n\t\t\tattribute vec4 ts_Vertex;\n\t\t\tuniform mat4 ts_ModelViewProjectionMatrix;\n\t\t\tattribute vec2 ts_TexCoord;\n            uniform float pointSize;\n            varying vec4 color;\n            varying vec2 coord;\n            void main() {\n                color = ts_Color;\n                coord = ts_TexCoord;\n                gl_Position = ts_ModelViewProjectionMatrix * ts_Vertex;\n                gl_PointSize = pointSize;\n            }\n\t\t`,\n        `\n\t\t\tprecision highp float;\n            uniform sampler2D texture;\n            uniform float pointSize;\n            // uniform bool useTexture;\n            varying vec4 color;\n            varying vec2 coord;\n            void main() {\n                gl_FragColor = color;\n                // if (useTexture) gl_FragColor *= texture2D(texture, coord.xy);\n            }\n        `,\n        gl,\n      ),\n    },\n  ) {\n    this.matrixMode(TSGLContextBase.MODELVIEW)\n  }\n\n  /// Implement the OpenGL modelview and projection matrix stacks, along with some other useful GLU matrix functions.\n  matrixMode(mode: { __MATRIX_MODE_CONSTANT: any }): void {\n    switch (mode) {\n      case this.MODELVIEW:\n        this.currentMatrixName = \"modelViewMatrix\"\n        this.stack = this.modelViewStack\n        break\n      case this.PROJECTION:\n        this.currentMatrixName = \"projectionMatrix\"\n        this.stack = this.projectionStack\n        break\n      default:\n        throw new Error(\"invalid matrix mode \" + mode)\n    }\n  }\n\n  loadIdentity(): void {\n    M4.identity(this[this.currentMatrixName])\n    this.currentMatrixName == \"projectionMatrix\"\n      ? this.projectionMatrixVersion++\n      : this.modelViewMatrixVersion++\n  }\n\n  loadMatrix(m4: M4) {\n    M4.copy(m4, this[this.currentMatrixName])\n    this.currentMatrixName == \"projectionMatrix\"\n      ? this.projectionMatrixVersion++\n      : this.modelViewMatrixVersion++\n  }\n\n  multMatrix(m4: M4) {\n    M4.multiply(this[this.currentMatrixName], m4, this.resultMatrix)\n    const temp = this.resultMatrix\n    this.resultMatrix = this[this.currentMatrixName]\n    this[this.currentMatrixName] = temp\n    this.currentMatrixName == \"projectionMatrix\"\n      ? this.projectionMatrixVersion++\n      : this.modelViewMatrixVersion++\n  }\n\n  mirror(plane: { normal1: V3; w: number }) {\n    this.multMatrix(M4.mirror(plane))\n  }\n\n  perspective(fovDegrees: number, aspect: number, near: number, far: number) {\n    this.multMatrix(\n      M4.perspectiveRad(fovDegrees * DEG, aspect, near, far, this.tempMatrix),\n    )\n  }\n\n  frustum(\n    left: number,\n    right: number,\n    bottom: number,\n    top: number,\n    near: number,\n    far: number,\n  ) {\n    this.multMatrix(\n      M4.frustum(left, right, bottom, top, near, far, this.tempMatrix),\n    )\n  }\n\n  ortho(\n    left: number,\n    right: number,\n    bottom: number,\n    top: number,\n    near: number,\n    far: number,\n  ) {\n    this.multMatrix(\n      M4.ortho(left, right, bottom, top, near, far, this.tempMatrix),\n    )\n  }\n\n  scale(x: number, y: number, z?: number): void\n  scale(scale: number): void\n  scale(v: V3): void\n  scale(...args: any[]) {\n    this.multMatrix((M4.scale as any)(...args, this.tempMatrix))\n  }\n\n  mirroredX() {\n    this.multMatrix(M4.mirror(P3ZX))\n  }\n\n  translate(x: number, y?: number, z?: number): void\n  translate(v: V3): void\n  translate(x: any, y?: any, z?: any) {\n    if (undefined !== y) {\n      this.multMatrix(M4.translate(x, y, z, this.tempMatrix))\n    } else {\n      this.multMatrix(M4.translate(x, this.tempMatrix))\n    }\n  }\n\n  rotate(angleDegrees: number, x: number, y: number, z: number) {\n    this.multMatrix(M4.rotate(angleDegrees * DEG, { x, y, z }, this.tempMatrix))\n  }\n\n  lookAt(eye: V3, center: V3, up: V3) {\n    this.multMatrix(M4.lookAt(eye, center, up, this.tempMatrix))\n  }\n\n  pushMatrix() {\n    this.stack.push(M4.copy(this[this.currentMatrixName]))\n  }\n\n  popMatrix() {\n    const pop = this.stack.pop()\n    assert(undefined !== pop)\n    this[this.currentMatrixName] = pop as M4\n    this.currentMatrixName == \"projectionMatrix\"\n      ? this.projectionMatrixVersion++\n      : this.modelViewMatrixVersion++\n  }\n\n  /**\n   * World coordinates (WC) to screen/window coordinates matrix\n   */\n  wcToWindowMatrix() {\n    const viewport = this.getParameter(this.VIEWPORT)\n    const [x, y, w, h] = viewport\n    // prettier-ignore\n    const viewportToScreenMatrix = new M4([\n\t\t\tw / 2, 0, 0, x + w / 2,\n\t\t\th / 2, 0, 0, y + h / 2,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1,\n\t\t])\n    return M4.product(\n      viewportToScreenMatrix,\n      this.projectionMatrix,\n      this.modelViewMatrix,\n    )\n  }\n\n  /////////// IMMEDIATE MODE\n  // ### Immediate mode\n  //\n  // Provide an implementation of OpenGL's deprecated immediate mode. This is\n  // deprecated for a reason: constantly re-specifying the geometry is a bad\n  // idea for performance. You should use a `GL.Mesh` instead, which specifies\n  // the geometry once and caches it on the graphics card. Still, nothing\n  // beats a quick `viewerGL.begin(WGL.POINTS); viewerGL.vertex(1, 2, 3); viewerGL.end();` for\n  // debugging. This intentionally doesn't implement fixed-function lighting\n  // because it's only meant for quick debugging tasks.\n\n  pointSize(pointSize: number): void {\n    this.immediate.shader.uniforms({ pointSize: pointSize })\n  }\n\n  begin(mode: GL.DrawMode) {\n    if (this.immediate.mode != -1)\n      throw new Error(\"mismatched viewerGL.begin() and viewerGL.end() calls\")\n    this.immediate.mode = mode\n    this.immediate.mesh.colors = []\n    this.immediate.mesh.coords = []\n    this.immediate.mesh.vertices = []\n  }\n\n  color(cssColor: string): void\n  color(r: number, g: number, b: number, a?: number): void\n  color(hexInt: int): void\n  color(glColor: GL_COLOR): void\n  color(...args: any[]) {\n    this.immediate.color =\n      1 == args.length && Array.isArray(args[0])\n        ? (args[0] as GL_COLOR)\n        : 1 == args.length && \"number\" == typeof args[0]\n        ? hexIntToGLColor(args[0])\n        : 1 == args.length && \"string\" == typeof args[0]\n        ? chroma.color(args[0]).gl()\n        : [args[0], args[1], args[2], args[3] || 1]\n  }\n\n  texCoord(s: number, t: number): void\n  texCoord(coords: [number, number]): void\n  texCoord(coords: { x: number; y: number }): void\n  texCoord(...args: any[]) {\n    this.immediate.coord = V.apply(undefined, args).toArray(2)\n  }\n\n  vertex(v: V3): void\n  vertex(x: number, y: number, z: number): void\n  vertex(...args: any[]) {\n    this.immediate.mesh.colors.push(this.immediate.color)\n    this.immediate.mesh.coords.push(this.immediate.coord)\n    this.immediate.mesh.vertices.push(V.apply(undefined, args))\n  }\n\n  end(): void {\n    if (this.immediate.mode == -1)\n      throw new Error(\"mismatched viewerGL.begin() and viewerGL.end() calls\")\n    this.immediate.mesh.compile()\n    this.immediate.shader\n      .uniforms({\n        useTexture: !!TSGLContextBase.gl.getParameter(this.TEXTURE_BINDING_2D),\n      })\n      .drawBuffers(\n        this.immediate.mesh.vertexBuffers,\n        undefined,\n        this.immediate.mode,\n      )\n    this.immediate.mode = -1\n  }\n\n  ////////// MISCELLANEOUS METHODS\n  static gl: TSGLContextBase\n\n  makeCurrent() {\n    TSGLContextBase.gl = this\n  }\n\n  /**\n   * Starts an animation loop.\n   */\n  animate(\n    callback: (\n      this: TSGLContextBase,\n      domHighResTimeStamp: number,\n      timeSinceLast: number,\n    ) => void,\n  ): () => void {\n    const requestAnimationFrame: typeof window.requestAnimationFrame =\n      window.requestAnimationFrame ||\n      (window as any).mozRequestAnimationFrame ||\n      window.webkitRequestAnimationFrame ||\n      function (callback: FrameRequestCallback) {\n        setTimeout(() => callback(performance.now()), 1000 / 60)\n      }\n    let time = performance.now(),\n      keepUpdating = true\n    const update = (now: number) => {\n      if (keepUpdating) {\n        callback.call(this, now, now - time)\n        time = now\n        requestAnimationFrame(update)\n      }\n    }\n    requestAnimationFrame(update)\n    return () => {\n      keepUpdating = false\n    }\n  }\n\n  /**\n   * Provide an easy way to get a fullscreen app running, including an\n   * automatic 3D perspective projection matrix by default. This should be\n   * called once.\n   *\n   * Just fullscreen, no automatic camera:\n   *\n   *     viewerGL.fullscreen({ camera: false })\n   *\n   * Adjusting field of view, near plane distance, and far plane distance:\n   *\n   *     viewerGL.fullscreen({ fov: 45, near: 0.1, far: 1000 })\n   *\n   * Adding padding from the edge of the window:\n   *\n   *     viewerGL.fullscreen({ paddingLeft: 250, paddingBottom: 60 })\n   */\n  fullscreen(\n    options: {\n      paddingTop?: number\n      paddingLeft?: number\n      paddingRight?: number\n      paddingBottom?: number\n      camera?: boolean\n      fov?: number\n      near?: number\n      far?: number\n    } = {},\n  ) {\n    const top = options.paddingTop || 0\n    const left = options.paddingLeft || 0\n    const right = options.paddingRight || 0\n    const bottom = options.paddingBottom || 0\n    if (!document.body) {\n      throw new Error(\n        \"document.body doesn't exist yet (call viewerGL.fullscreen() from \" +\n          \"window.onload() or from inside the <body> tag)\",\n      )\n    }\n    document.body.appendChild(this.canvas)\n    document.body.style.overflow = \"hidden\"\n    this.canvas.style.position = \"absolute\"\n    this.canvas.style.left = left + \"px\"\n    this.canvas.style.top = top + \"px\"\n    this.canvas.style.width = window.innerWidth - left - right + \"px\"\n    this.canvas.style.bottom = window.innerHeight - top - bottom + \"px\"\n\n    this.addResizeListener()\n\n    return this\n  }\n\n  addResizeListener(\n    options: {\n      camera?: boolean\n      fov?: number\n      near?: number\n      far?: number\n    } = {},\n  ): TSGLContext {\n    const gl = this\n\n    function windowOnResize() {\n      const bb = gl.canvas.getBoundingClientRect()\n      gl.canvas.width = bb.width * window.devicePixelRatio\n      gl.canvas.height = bb.height * window.devicePixelRatio\n      gl.viewport(0, 0, gl.canvas.width, gl.canvas.height)\n      if (options.camera) {\n        gl.matrixMode(TSGLContextBase.PROJECTION)\n        gl.loadIdentity()\n        gl.perspective(\n          options.fov || 45,\n          gl.canvas.width / gl.canvas.height,\n          options.near || 0.1,\n          options.far || 1000,\n        )\n        gl.matrixMode(TSGLContextBase.MODELVIEW)\n      }\n    }\n\n    window.addEventListener(\"resize\", windowOnResize)\n    windowOnResize()\n    return this\n  }\n\n  getMouseLine(e: MouseEvent): { anchor: V3; dir: V3 }\n  getMouseLine(canvasPosX: number, canvasPosY: number): { anchor: V3; dir: V3 }\n  getMouseLine(\n    canvasPosXOrE: number | MouseEvent,\n    canvasPosY?: number,\n  ): { anchor: V3; dir: V3 } {\n    if (canvasPosXOrE instanceof MouseEvent) {\n      return this.getMouseLine(canvasPosXOrE.offsetX, canvasPosXOrE.offsetY)\n    }\n    const ndc1 = V(\n      (canvasPosXOrE * 2) / this.canvas.offsetWidth - 1,\n      (-canvasPosY! * 2) / this.canvas.offsetHeight + 1,\n      0,\n    )\n    const ndc2 = V(\n      (canvasPosXOrE * 2) / this.canvas.offsetWidth - 1,\n      (-canvasPosY! * 2) / this.canvas.offsetHeight + 1,\n      1,\n    )\n    const inverseProjectionMatrix = this.projectionMatrix.inversed()\n    const anchor = inverseProjectionMatrix.transformPoint(ndc1)\n    const dir = inverseProjectionMatrix.transformPoint(ndc2).minus(anchor)\n    return { anchor, dir }\n  }\n\n  viewportFill() {\n    this.viewport(0, 0, this.canvas.width, this.canvas.height)\n  }\n\n  async setupTextRendering(pngURL: string, jsonURL: string) {\n    this.textRenderShader = Shader.create(posCoordVS, sdfRenderFS)\n    ;[this.textAtlas, this.textMetrics] = await Promise.all([\n      Texture.fromURL(pngURL, {\n        format: this.LUMINANCE,\n        internalFormat: this.LUMINANCE,\n        type: this.UNSIGNED_BYTE,\n      }),\n      fetch(jsonURL).then((r) => r.json()),\n    ])\n    // const cs = this.textMetrics.chars\n    // const maxY = Object.keys(cs).reduce((a, b) => Math.max(a, cs[b][3]), 0)\n    // const minY = Object.keys(cs).reduce((a, b) => Math.min(a, cs[b][3] - cs[b][1]), 0)\n    // console.log(maxY, minY)\n  }\n\n  cachedSDFMeshes: {\n    [str: string]: Mesh & {\n      TRIANGLES: int[]\n      coords: number[]\n      width: number\n      lineCount: int\n    }\n  } = {}\n\n  getSDFMeshForString(str: string) {\n    assert(this.textMetrics)\n    return (\n      this.cachedSDFMeshes[str] ||\n      (this.cachedSDFMeshes[str] = createTextMesh(\n        this.textMetrics,\n        this.textAtlas,\n        str,\n      ))\n    )\n  }\n\n  renderText(\n    string: string,\n    color: GL_COLOR,\n    size = 1,\n    xAlign: \"left\" | \"center\" | \"right\" = \"left\",\n    baseline: \"top\" | \"middle\" | \"alphabetic\" | \"bottom\" = \"bottom\",\n    gamma = 0.05,\n    lineHeight = 1.2,\n  ) {\n    const strMesh = this.getSDFMeshForString(string)\n    this.pushMatrix()\n    this.scale(size)\n    const xTranslate = { left: 0, center: -0.5, right: -1 }\n    const yTranslate = {\n      top: -this.textMetrics.ascender / this.textMetrics.size,\n      middle:\n        (-this.textMetrics.ascender - this.textMetrics.descender) /\n        2 /\n        this.textMetrics.size,\n      alphabetic: 0,\n      bottom: -this.textMetrics.descender / this.textMetrics.size,\n    }\n    // console.log('yTranslate[baseline]', yTranslate[baseline])\n    this.translate(xTranslate[xAlign] * strMesh.width, yTranslate[baseline], 0)\n    this.multMatrix(M4.forSys(V3.X, V3.Y, new V3(0, -lineHeight, 0)))\n    this.textAtlas.bind(0)\n    this.textRenderShader\n      .uniforms({\n        texture: 0,\n        u_color: color,\n        u_debug: 0,\n        u_gamma: gamma,\n        u_buffer: 192 / 256,\n      })\n      .draw(strMesh)\n    this.popMatrix()\n\n    // gl.uniform1f(shader.u_debug, debug ? 1 : 0)\n\n    // gl.uniform4fv(shader.u_color, [1, 1, 1, 1])\n    // gl.uniform1f(shader.u_buffer, buffer)\n    // gl.drawArrays(gl.TRIANGLES, 0, vertexBuffer.numItems)\n\n    // gl.uniform4fv(shader.u_color, [0, 0, 0, 1])\n    // gl.uniform1f(shader.u_buffer, 192 / 256)\n    // gl.uniform1f(shader.u_gamma, (gamma * 1.4142) / scale)\n    // gl.drawArrays(gl.TRIANGLES, 0, vertexBuffer.numItems)\n  }\n\n  static create(\n    options: Partial<\n      GL.WebGLContextAttributes & {\n        canvas: HTMLCanvasElement\n        throwOnError: boolean\n      }\n    > = {},\n  ): TSGLContext {\n    const canvas = options.canvas || document.createElement(\"canvas\")\n    if (!options.canvas) {\n      canvas.width = 800\n      canvas.height = 600\n    }\n    if (!(\"alpha\" in options)) options.alpha = false\n    let newGL: any = undefined\n    try {\n      newGL = canvas.getContext(\"webgl2\", options)\n      newGL && (newGL.version = 2)\n      if (!newGL) {\n        newGL =\n          canvas.getContext(\"webgl\", options) ||\n          canvas.getContext(\"experimental-webgl\", options)\n        newGL && (newGL.version = 1)\n      }\n      console.log(\"getting context\")\n    } catch (e) {\n      console.log(e, \"Failed to get context\")\n    }\n    if (!newGL) throw new Error(\"WebGL not supported\")\n    if (options.throwOnError) {\n      newGL = makeDebugContext(newGL, (err, funcName) => {\n        throw new Error(glEnumToString(err) + \" was caused by \" + funcName)\n      })\n    }\n\n    TSGLContextBase.gl = newGL\n    addOwnProperties(newGL, TSGLContextBase.prototype)\n    addOwnProperties(newGL, new TSGLContextBase(newGL))\n    //addEventListeners(newGL)\n    return newGL\n  }\n\n  /**\n   * Sets the canvas render resolution (canvas.width and canvas.height) to match the display. I.e. it takes into\n   * account window.devicePixelRatio.\n   * @param maxPixelRatio A limit for the pixelRatio. Useful for very high DPI devices such as mobile devices.\n   */\n  fixCanvasRes(maxPixelRatio = Infinity) {\n    this.canvas.width =\n      this.canvas.clientWidth * Math.min(window.devicePixelRatio, maxPixelRatio)\n    this.canvas.height =\n      this.canvas.clientHeight *\n      Math.min(window.devicePixelRatio, maxPixelRatio)\n    this.viewport(0, 0, this.canvas.width, this.canvas.height)\n  }\n\n  drawVector(\n    vector: V3,\n    anchor: V3,\n    color: GL_COLOR = GL_COLOR_BLACK,\n    size = 1,\n  ) {\n    if (vector.likeO()) return\n    this.pushMatrix()\n\n    const headLength = size * 4\n    if (headLength > vector.length()) return\n\n    const vT = vector.getPerpendicular().unit()\n    this.multMatrix(\n      M4.forSys(vector.unit(), vT, vector.cross(vT).unit(), anchor),\n    )\n    this.scale(vector.length() - headLength, size / 2, size / 2)\n\n    this.shaders.singleColor\n      .uniforms({\n        color: color,\n      })\n      .draw(this.meshes.vectorShaft)\n\n    this.scale(1 / (vector.length() - headLength), 1, 1)\n    this.translate(vector.length() - headLength, 0, 0)\n    this.scale(headLength / 2, 1, 1)\n\n    this.shaders.singleColor.draw(this.meshes.vectorHead)\n    this.popMatrix()\n  }\n}\nexport namespace TSGLContext {\n  /**\n   * `create()` creates a new WebGL context and augments it with more methods. The alpha channel is disabled\n   * by default because it usually causes unintended transparencies in the canvas.\n   */\n  export const create = TSGLContextBase.create\n}\n\n// enum WGL_ERROR {\n// \tNO_ERROR = WGL.NO_ERROR,\n// \tINVALID_ENUM = WGL.INVALID_ENUM,\n// \tINVALID_VALUE = WGL.INVALID_VALUE,\n// \tINVALID_OPERATION = WGL.INVALID_OPERATION,\n// \tINVALID_FRAMEBUFFER_OPERATION = WGL.INVALID_FRAMEBUFFER_OPERATION,\n// \tOUT_OF_MEMORY = WGL.OUT_OF_MEMORY,\n// \tCONTEXT_LOST_WEBGL = WGL.CONTEXT_LOST_WEBGL,\n// }\n\nTSGLContextBase.prototype.MODELVIEW = TSGLContextBase.MODELVIEW\nTSGLContextBase.prototype.PROJECTION = TSGLContextBase.PROJECTION\nTSGLContextBase.prototype.HALF_FLOAT_OES = TSGLContextBase.HALF_FLOAT_OES\n\n/**\n *\n * Push two triangles:\n * ```\n c - d\n | \\ |\n a - b\n ```\n */\nexport function pushQuad(\n  triangles: int[],\n  flipped: boolean,\n  a: int,\n  b: int,\n  c: int,\n  d: int,\n) {\n  // prettier-ignore\n  if (flipped) {\n\t\ttriangles.push(\n\t\t\ta, c, b,\n\t\t\tb, c, d)\n\t} else {\n\t\ttriangles.push(\n\t\t\ta, b, c,\n\t\t\tb, d, c)\n\t}\n}\n\nfunction hexIntToGLColor(color: int): GL_COLOR {\n  return [\n    (color >> 16) / 255.0,\n    ((color >> 8) & 0xff) / 255.0,\n    (color & 0xff) / 255.0,\n    1.0,\n  ]\n}\n\nexport interface FontJsonMetrics {\n  family: string\n  style: string\n\n  // buffer refers to the width of the margin around glyph bounding boxes with distance values\n  buffer: int\n  size: number\n\n  // [width, height, horiBearingX, horiBearingY, horiAdvance, posX, posY]\n  // see https://www.freetype.org/freetype2/docs/tutorial/step2.html\n  chars: {\n    [char: string]: [number, number, number, number, number, number, number]\n  }\n\n  descender: number\n  ascender: number\n}\n// function measureText(metrics: FontJsonMetrics, text: string, size: number) {\n// \tconst dimensions = {\n// \t\tadvance: 0,\n// \t}\n\n// \tconst scale = size / metrics.size\n// \tfor (let i = 0; i < text.length; i++) {\n// \t\tconst horiAdvance = metrics.chars[text[i]][4]\n// \t\tdimensions.advance += horiAdvance * scale\n// \t}\n\n// \treturn dimensions\n// }\n\n// gl.getExtension('OES_standard_derivatives')\n\n// gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE)\n\n// gl.enable(gl.BLEND)\n\n// const texture = gl.createTexture()\n\n// const vertexBuffer = gl.createBuffer()\n// const textureBuffer = gl.createBuffer()\n\nfunction createTextMesh(\n  fontMetrics: FontJsonMetrics,\n  fontTextureAtlas: Texture,\n  str: string,\n  lineHeight = 1,\n) {\n  const mesh = new Mesh()\n    .addIndexBuffer(\"TRIANGLES\")\n    .addVertexBuffer(\"coords\", \"ts_TexCoord\")\n\n  let cursorX = 0\n  let cursorY = 0\n\n  function drawGlyph(chr: string) {\n    const metric = fontMetrics.chars[chr]\n    if (!metric) return\n\n    const [\n      width,\n      height,\n      horiBearingX,\n      horiBearingY,\n      horiAdvance,\n      posX,\n      posY,\n    ] = metric\n    const { size, buffer } = fontMetrics\n    const quadStartIndex = mesh.vertices.length\n\n    // buffer = margin on texture\n    if (width > 0 && height > 0) {\n      // Add a quad (= two triangles) per glyph.\n      const left = (cursorX + horiBearingX - buffer) / size\n      const right = (cursorX + horiBearingX + width + buffer) / size\n      const bottom = (horiBearingY - height - buffer) / size\n      const top = (horiBearingY + buffer) / size\n      mesh.vertices.push(\n        new V3(left, bottom, cursorY / size),\n        new V3(right, bottom, cursorY / size),\n        new V3(left, top, cursorY / size),\n        new V3(right, top, cursorY / size),\n      )\n\n      const coordsLeft = posX / fontTextureAtlas.width\n      const coordsRight = (posX + width + 2 * buffer) / fontTextureAtlas.width\n      const coordsBottom =\n        (posY + height + 2 * buffer) / fontTextureAtlas.height\n      const coordsTop = posY / fontTextureAtlas.height\n      mesh.coords.push(\n        [coordsLeft, coordsBottom],\n        [coordsRight, coordsBottom],\n        [coordsLeft, coordsTop],\n        [coordsRight, coordsTop],\n      )\n      // mesh.coords.push([0, 0], [0, 1], [1, 0], [1, 1])\n\n      pushQuad(\n        mesh.TRIANGLES,\n        false,\n        quadStartIndex,\n        quadStartIndex + 1,\n        quadStartIndex + 2,\n        quadStartIndex + 3,\n      )\n    }\n\n    // pen.x += Math.ceil(horiAdvance * scale);\n    cursorX += horiAdvance\n  }\n\n  for (let i = 0; i < str.length; i++) {\n    const chr = str[i]\n    if (\"\\n\" == chr) {\n      cursorX = 0\n      cursorY += lineHeight * fontMetrics.size\n    } else {\n      drawGlyph(chr)\n    }\n  }\n\n  return Object.assign(mesh.compile(), {\n    width: cursorX / fontMetrics.size,\n    lineCount: cursorY + 1,\n  })\n}\n"],"names":["WGL","chroma.color"],"mappings":"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"}