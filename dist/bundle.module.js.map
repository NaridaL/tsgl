{"version":3,"file":"bundle.module.js","sources":["../src/Buffer.ts","../src/Mesh.ts","../src/Shader.ts","../src/Texture.ts","../src/KhronosGroupWebGLDebug.ts","../src/TSGLContext.ts"],"sourcesContent":["import {assert, int, NLA_DEBUG, V3} from 'ts3dutils'\nimport {currentGL, TSGLContext} from './index'\n\nimport GL = WebGLRenderingContextStrict\nconst WGL = WebGLRenderingContext as any as WebGLRenderingContextStrict.Constants\n\nexport class Buffer {\n\tbuffer: WebGLBuffer | undefined\n\tdata: any[]\n\n\t/** Number of elements in buffer. 2 V3s is still 2, not 6. */\n\tcount: int\n\n\t/** Space between elements in buffer. 3 for V3s. */\n\tspacing: 1 | 2 | 3 | 4\n\n\thasBeenCompiled: boolean\n\n\tname?: string\n\n\tmaxValue?: number\n\n\t/**\n\t * Provides a simple method of uploading data to a GPU buffer. Example usage:\n\t *\n\t *     const vertices = new Buffer(WGL.ARRAY_BUFFER, Float32Array)\n\t *     vertices.data = [[0, 0, 0], [1, 0, 0], [0, 1, 0], [1, 1, 0]]\n\t *     vertices.compile()\n\t *\n\t *     const indices = new Buffer(WGL.ELEMENT_ARRAY_BUFFER, Uint16Array)\n\t *     indices.data = [[0, 1, 2], [2, 1, 3]]\n\t *     indices.compile()\n\t *\n\t * Specifies the target to which the buffer object is bound.\n\t * The symbolic constant must be GL_ARRAY_BUFFER or GL_ELEMENT_ARRAY_BUFFER.\n\t */\n\tconstructor(readonly target: GL.BufferTarget, readonly type: typeof Float32Array | typeof Uint16Array) {\n\t\tassert(target == WGL.ARRAY_BUFFER || target == WGL.ELEMENT_ARRAY_BUFFER, 'target == WGL.ARRAY_BUFFER || target == WGL.ELEMENT_ARRAY_BUFFER')\n\t\tassert(type == Float32Array || type == Uint16Array, 'type == Float32Array || type == Uint16Array')\n\t\tthis.buffer = undefined\n\t\tthis.type = type\n\t\tthis.data = []\n\t\tthis.count = 0\n\t\tthis.spacing = 1\n\t\tthis.hasBeenCompiled = false\n\t}\n\n\t/**\n\t * Upload the contents of `data` to the GPU in preparation for rendering. The data must be a list of lists\n\t * where each inner list has the same length. For example, each element of data for vertex normals would be a\n\t * list of length three. This will remember the data length and element length for later use by shaders.\n\t *\n\t * This could have used `[].concat.apply([], this.data)` to flatten the array but Google\n\t * Chrome has a maximum number of arguments so the concatenations are chunked to avoid that limit.\n\t *\n\t * @param usage Either `WGL.STATIC_DRAW` or `WGL.DYNAMIC_DRAW`. Defaults to `WGL.STATIC_DRAW`\n\t */\n\tcompile(usage: GL.BufferDataUsage = WGL.STATIC_DRAW, gl: TSGLContext = currentGL()): void {\n\t\tassert(WGL.STATIC_DRAW == usage || WGL.DYNAMIC_DRAW == usage, 'WGL.STATIC_DRAW == type || WGL.DYNAMIC_DRAW == type')\n\t\tthis.buffer = this.buffer || gl.createBuffer()!\n\t\tlet buffer: Float32Array | Uint16Array\n\t\tif (this.data.length == 0) {\n\t\t\tconsole.warn('empty buffer ' + this.name)\n\t\t\t//console.trace()\n\t\t}\n\t\tif (this.data.length == 0 || this.data[0] instanceof V3) {\n\t\t\tassert(!(this.data[0] instanceof V3) || this.type == Float32Array)\n\t\t\tV3.pack(this.data, buffer = new this.type(this.data.length * 3) as Float32Array) // asserts that all\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t // elements are V3s\n\t\t\tthis.spacing = 3\n\t\t\tthis.count = this.data.length\n\t\t\tthis.maxValue = 0\n\t\t} else {\n\t\t\t//assert(Array != this.data[0].constructor, this.name + this.data[0])\n\t\t\tif (Array.isArray(this.data[0])) {\n\t\t\t\tconst bufferLength = this.data.length * this.data[0].length\n\t\t\t\tbuffer = new this.type(bufferLength)\n\t\t\t\tlet i = this.data.length, destPtr = bufferLength\n\t\t\t\twhile (i--) {\n\t\t\t\t\tconst subArray = this.data[i]\n\t\t\t\t\tlet j = subArray.length\n\t\t\t\t\twhile (j--) {\n\t\t\t\t\t\tbuffer[--destPtr] = subArray[j]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tassert(0 == destPtr)\n\t\t\t} else {\n\t\t\t\tbuffer = new this.type(this.data)\n\t\t\t}\n\n\t\t\tconst spacing = this.data.length ? buffer.length / this.data.length : 0\n\t\t\tassert(spacing % 1 == 0, `buffer ${this.name} elements not of consistent size, average size is ` + spacing)\n\t\t\tif (NLA_DEBUG) {\n\t\t\t\tif (10000 <= buffer.length) {\n\t\t\t\t\tthis.maxValue = 0\n\t\t\t\t} else {\n\t\t\t\t\tthis.maxValue = Math.max.apply(undefined, buffer)\n\t\t\t\t}\n\t\t\t}\n\t\t\tassert([1, 2, 3, 4].includes(spacing))\n\t\t\tthis.spacing = spacing as 1 | 2 | 3 | 4\n\t\t\tthis.count = this.data.length\n\t\t}\n\t\tgl.bindBuffer(this.target, this.buffer)\n\t\tgl.bufferData(this.target, buffer, usage)\n\t\tthis.hasBeenCompiled = true\n\t}\n}","import {\n\tAABB, arrayFromFunction, assert, assertVectors, int, lerp, M4, NLA_PRECISION, raddd, Transformable, Tuple3, V, V3,\n} from 'ts3dutils'\n\nimport {currentGL, GL_COLOR, pushQuad, TSGLContext, Buffer} from './index'\n\nconst {cos, sin, PI, min, max} = Math\n\nconst WGL = WebGLRenderingContext as any as WebGLRenderingContextStrict.Constants\n\n/**\n * @example new Mesh()\n *        .addIndexBuffer('TRIANGLES')\n *        .addIndexBuffer('LINES')\n *        .addVertexBuffer('normals', 'ts_Normal')\n */\nexport class Mesh extends Transformable {\n\thasBeenCompiled: boolean = false\n\tvertexBuffers: { [name: string]: Buffer } = {}\n\tindexBuffers: { [name: string]: Buffer } = {}\n\n\n\tvertices: V3[]\n\tnormals?: V3[]\n\tcoords?: [number, number][]\n\tcolors?: GL_COLOR[]\n\tTRIANGLES?: int[]\n\tLINES?: int[]\n\n\tconstructor() {\n\t\tsuper()\n\t\tthis.addVertexBuffer('vertices', 'ts_Vertex')\n\t}\n\n\tcalcVolume(this: Mesh & { TRIANGLES: int[] }): { volume: number, centroid: V3, area: number } {\n\t\tlet totalVolume = 0, totalCentroid = V3.O, totalAreaX2 = 0\n\t\tconst triangles = this.TRIANGLES\n\t\tconst vertices = this.vertices\n\t\tfor (let i = 0; i < triangles.length; i += 3) {\n\t\t\tconst i0 = triangles[i + 0], i1 = triangles[i + 1], i2 = triangles[i + 2]\n\t\t\tconst v0 = vertices[i0], v1 = vertices[i1], v2 = vertices[i2]\n\t\t\tconst v01 = v1.minus(v0), v02 = v2.minus(v0)\n\t\t\tconst normal = v01.cross(v02)\n\t\t\t//const centroidZ = (v0.z + v1.z + v2.z) / 3\n\t\t\t//totalVolume += centroidZ * (area === v01.cross(v02).length() / 2) * v01.cross(v02).unit().z\n\t\t\tconst faceCentroid = v0.plus(v1.plus(v2)).div(3)\n\t\t\ttotalVolume += faceCentroid.z * normal.z / 2\n\t\t\tconst faceAreaX2 = normal.length()\n\t\t\ttotalAreaX2 += faceAreaX2\n\t\t\ttotalCentroid = totalCentroid.plus(new V3(faceCentroid.x, faceCentroid.y, faceCentroid.z / 2).times(faceCentroid.z * normal.z / 2))\n\t\t}\n\t\t// sumInPlaceTree adds negligible additional accuracy for XY sphere\n\t\treturn {volume: totalVolume, centroid: totalCentroid.div(triangles.length / 3), area: totalAreaX2 / 2}\n\t}\n\n\t/**\n\t * Add a new vertex buffer with a list as a property called `name` on this object and map it to\n\t * the attribute called `attribute` in all shaders that draw this mesh.\n\t * @example new Mesh().addVertexBuffer('coords', 'ts_TexCoord')\n\t */\n\n\taddVertexBuffer<K extends string>(name: K, attribute: string): this & { [k in K]: any[] } {\n\t\tassert(!this.vertexBuffers[attribute], 'Buffer ' + attribute + ' already exists.')\n\t\t//assert(!this[name])\n\t\tthis.hasBeenCompiled = false\n\t\tassert('string' == typeof name)\n\t\tassert('string' == typeof attribute)\n\t\tconst buffer = this.vertexBuffers[attribute] = new Buffer(WGL.ARRAY_BUFFER, Float32Array)\n\t\tbuffer.name = name\n\t\t;(this as any)[name] = []\n\t\treturn this as any\n\t}\n\n\t/**\n\t * Add a new index buffer.\n\t * @example new Mesh().addIndexBuffer('TRIANGLES')\n\t * @example new Mesh().addIndexBuffer('LINES')\n\t */\n\taddIndexBuffer<K extends string>(name: K): this & { [k in K]: int[] } {\n\t\tthis.hasBeenCompiled = false\n\t\tconst buffer = this.indexBuffers[name] = new Buffer(WGL.ELEMENT_ARRAY_BUFFER, Uint16Array)\n\t\tbuffer.name = name\n\t\t;(this as any)[name] = []\n\t\treturn this as any\n\t}\n\n\tconcat<T extends Mesh>(...others: T[]): T {\n\t\tconst mesh = new Mesh() as any\n\t\t;[this as Mesh].concat(others).forEach((oldMesh: any) => {\n\t\t\tconst startIndex = mesh.vertices ? mesh.vertices.length : 0\n\t\t\tObject.getOwnPropertyNames(oldMesh.vertexBuffers).forEach(attribute => {\n\t\t\t\tconst bufferName = this.vertexBuffers[attribute].name!\n\t\t\t\tif (!mesh.vertexBuffers[attribute]) {\n\t\t\t\t\tmesh.addVertexBuffer(bufferName, attribute)\n\t\t\t\t}\n\t\t\t\tmesh[bufferName].push(...oldMesh[bufferName])\n\t\t\t})\n\t\t\tObject.getOwnPropertyNames(oldMesh.indexBuffers).forEach(name => {\n\t\t\t\tif (!mesh.indexBuffers[name]) {\n\t\t\t\t\tmesh.addIndexBuffer(name)\n\t\t\t\t}\n\t\t\t\tmesh[name].push(...(oldMesh[name] as int[]).map(index => index + startIndex))\n\t\t\t})\n\t\t})\n\t\treturn mesh\n\t}\n\n\t/**\n\t * Upload all attached buffers to the GPU in preparation for rendering. This doesn't need to be called every\n\t * frame, only needs to be done when the data changes.\n\t *\n\t * Sets `this.hasBeenCompiled` to true.\n\t */\n\tcompile(gl: TSGLContext = currentGL()) {\n\t\t// figure out shortest vertex buffer to make sure indexBuffers are in bounds\n\t\tlet minVertexBufferLength = Infinity// TODO, _minBufferName\n\t\tObject.getOwnPropertyNames(this.vertexBuffers).forEach(attribute => {\n\t\t\tconst buffer = this.vertexBuffers[attribute]\n\t\t\tbuffer.data = (this as any)[buffer.name!]\n\t\t\tbuffer.compile(undefined, gl)\n\t\t\tif ((this as any)[buffer.name!].length < minVertexBufferLength) {\n\t\t\t\t// _minBufferName = attribute\n\t\t\t\tminVertexBufferLength = (this as any)[buffer.name!].length\n\t\t\t}\n\t\t})\n\n\t\tfor (const name in this.indexBuffers) {\n\t\t\tconst buffer = this.indexBuffers[name]\n\t\t\tbuffer.data = (this as any)[buffer.name!]\n\t\t\tbuffer.compile(undefined, gl)\n\t\t\t// if (NLA_DEBUG && buffer.maxValue >= minVertexBufferLength) {\n\t\t\t// \tthrow new Error(`max index value for buffer ${name}\n\t\t\t// \tis too large ${buffer.maxValue} min Vbuffer size: ${minVertexBufferLength} ${minBufferName}`)\n\t\t\t// }\n\t\t}\n\t\tthis.hasBeenCompiled = true\n\t\treturn this\n\t}\n\n\tstatic async fromBinarySTL(stl: Blob) {\n\t\treturn new Promise<Mesh & { normals: V3[] }>((resolve, reject) => {\n\t\t\tconst mesh = new Mesh()\n\t\t\t\t.addVertexBuffer('normals', 'ts_Normal')\n\t\t\tconst fileReader = new FileReader()\n\t\t\tfileReader.onerror = reject\n\t\t\tfileReader.onload = function (_progressEvent) {\n\t\t\t\tconst dataView = new DataView(this.result)\n\t\t\t\tconst HEADER_BYTE_SIZE = 80\n\t\t\t\tconst triangleCount = dataView.getUint32(HEADER_BYTE_SIZE, true)\n\t\t\t\tmesh.normals.length = triangleCount * 3\n\t\t\t\tmesh.vertices.length = triangleCount * 3\n\t\t\t\tlet i = triangleCount * 3, bufferPtr = HEADER_BYTE_SIZE + 4\n\n\t\t\t\tfunction readV3() {\n\t\t\t\t\tconst x = dataView.getFloat32(bufferPtr, true)\n\t\t\t\t\tbufferPtr += 4\n\t\t\t\t\tconst y = dataView.getFloat32(bufferPtr, true)\n\t\t\t\t\tbufferPtr += 4\n\t\t\t\t\tconst z = dataView.getFloat32(bufferPtr, true)\n\t\t\t\t\tbufferPtr += 4\n\t\t\t\t\treturn new V3(x, y, z)\n\t\t\t\t}\n\n\t\t\t\twhile (i) {\n\t\t\t\t\ti -= 3\n\t\t\t\t\tconst normal = readV3()\n\t\t\t\t\tmesh.normals[i + 0] = normal\n\t\t\t\t\tmesh.normals[i + 1] = normal\n\t\t\t\t\tmesh.normals[i + 2] = normal\n\t\t\t\t\tmesh.vertices[i + 0] = readV3()\n\t\t\t\t\tmesh.vertices[i + 1] = readV3()\n\t\t\t\t\tmesh.vertices[i + 2] = readV3()\n\n\t\t\t\t\tbufferPtr += 2\n\t\t\t\t}\n\t\t\t\tresolve(mesh)\n\t\t\t}\n\t\t\tfileReader.readAsArrayBuffer(stl)\n\t\t})\n\t}\n\n\ttoBinarySTL(this: Mesh & { TRIANGLES: number[] }): Blob {\n\t\tif (!this.TRIANGLES) throw new Error('TRIANGLES must be defined.')\n\t\tconst HEADER_BYTE_SIZE = 80, FLOAT_BYTE_SIZE = 4\n\t\tconst triangles = this.TRIANGLES\n\t\tconst triangleCount = triangles.length / 3\n\t\tconst buffer = new ArrayBuffer(HEADER_BYTE_SIZE + 4 + triangleCount * (4 * 3 * FLOAT_BYTE_SIZE + 2))\n\t\tconst dataView = new DataView(buffer)\n\t\tdataView.setUint32(HEADER_BYTE_SIZE, triangleCount, true)\n\t\tlet bufferPtr = HEADER_BYTE_SIZE + 4\n\t\tlet i = triangles.length\n\t\twhile (i) {\n\t\t\ti -= 3\n\t\t\tconst a = this.vertices[triangles[i]], b = this.vertices[triangles[i + 1]],\n\t\t\t\tc = this.vertices[triangles[i + 2]]\n\t\t\tconst normal = V3.normalOnPoints(a, b, c)\n\n\t\t\t;[normal, a, b, c].forEach(v => {\n\t\t\t\tdataView.setFloat32(bufferPtr, v.x, true)\n\t\t\t\tbufferPtr += 4\n\t\t\t\tdataView.setFloat32(bufferPtr, v.y, true)\n\t\t\t\tbufferPtr += 4\n\t\t\t\tdataView.setFloat32(bufferPtr, v.z, true)\n\t\t\t\tbufferPtr += 4\n\t\t\t})\n\t\t\t// skip 2 bytes, already initalized to zero\n\t\t\tbufferPtr += 2\n\t\t}\n\t\tassert(bufferPtr == buffer.byteLength, bufferPtr + ' ' + buffer.byteLength)\n\t\treturn new Blob([buffer], {type: 'application/octet-stream'})\n\n\t}\n\n\t/**\n\t * Transform all vertices by `matrix` and all normals by the inverse transpose of `matrix`.\n\t *\n\t * Index buffer data is referenced.\n\t */\n\ttransform(m4: M4): this {\n\t\tconst mesh = new Mesh()\n\t\tmesh.vertices = m4.transformedPoints(this.vertices)\n\t\tif (this.normals) {\n\t\t\tmesh.addVertexBuffer('normals', 'ts_Normal')\n\t\t\tconst invTrans = m4.as3x3().inversed().transposed().normalized()\n\t\t\tmesh.normals = this.normals.map(n => invTrans.transformVector(n).unit())\n\t\t\t// mesh.normals.forEach(n => assert(n.hasLength(1)))\n\t\t}\n\t\tfor (const name in this.indexBuffers) {\n\t\t\tmesh.addIndexBuffer(name)\n\t\t\t;(mesh as any)[name] = (this as any)[name]\n\t\t}\n\t\tfor (const attribute in this.vertexBuffers) {\n\t\t\tif ('ts_Vertex' !== attribute && 'ts_Normal' !== attribute) {\n\t\t\t\tconst name = this.vertexBuffers[attribute].name!\n\t\t\t\tmesh.addVertexBuffer(name, attribute)\n\t\t\t\t;(mesh as any)[name] = (this as any)[name]\n\t\t\t}\n\t\t}\n\t\tmesh.compile()\n\t\treturn mesh as this\n\t}\n\n\t/**\n\t * Computes a new normal1 for each vertex from the average normal1 of the neighboring triangles. This means\n\t * adjacent triangles must share vertices for the resulting normals to be smooth.\n\t */\n\tcomputeNormalsFromFlatTriangles(this: Mesh & { TRIANGLES: int[] }): this & { normals: V3[] } {\n\t\tif (!this.normals) this.addVertexBuffer('normals', 'ts_Normal')\n\t\t// tslint:disable:no-string-literal\n\t\t//this.vertexBuffers['ts_Normal'].data = arrayFromFunction(this.vertices.length, i => V3.O)\n\n\t\tconst TRIANGLES = this.TRIANGLES, vertices = this.vertices, normals = this.normals!\n\t\tnormals.length = vertices.length\n\t\tfor (let i = 0; i < TRIANGLES.length; i += 3) {\n\t\t\tconst ai = TRIANGLES[i], bi = TRIANGLES[i + 1], ci = TRIANGLES[i + 2]\n\t\t\tconst a = vertices[ai]\n\t\t\tconst b = vertices[bi]\n\t\t\tconst c = vertices[ci]\n\t\t\tconst normal = b.minus(a).cross(c.minus(a)).unit()\n\t\t\tnormals[ai] = normals[ai].plus(normal)\n\t\t\tnormals[bi] = normals[bi].plus(normal)\n\t\t\tnormals[ci] = normals[ci].plus(normal)\n\t\t}\n\t\tfor (let i = 0; i < vertices.length; i++) {\n\t\t\tnormals[i] = normals[i].unit()\n\t\t}\n\t\tthis.hasBeenCompiled = false\n\t\treturn this as any\n\t}\n\n\n\t/**\n\t * Populate the `LINES` index buffer from the `triangles` index buffer.\n\t */\n\tcomputeWireframeFromFlatTriangles(this: Mesh & { TRIANGLES: int[] }): this & { LINES: int[] }\n\tcomputeWireframeFromFlatTriangles<T extends string>(this: Mesh & { TRIANGLES: int[] },\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tindexBufferName: T): this & { [k in T]: int[] }\n\tcomputeWireframeFromFlatTriangles(this: any, indexBufferName: string = 'LINES'): this {\n\t\tif (!this.TRIANGLES) throw new Error('TRIANGLES must be defined.')\n\t\tconst canonEdges = new Set()\n\n\t\tfunction canonEdge(i0: int, i1: int) {\n\t\t\tconst iMin = min(i0, i1), iMax = max(i0, i1)\n\t\t\treturn (iMin << 16) | iMax\n\t\t}\n\n\t\t// function uncanonEdge(key) {\n\t\t// \treturn [key >> 16, key & 0xffff]\n\t\t// }\n\t\tconst t = this.TRIANGLES\n\t\tfor (let i = 0; i < t.length; i += 3) {\n\t\t\tcanonEdges.add(canonEdge(t[i + 0], t[i + 1]))\n\t\t\tcanonEdges.add(canonEdge(t[i + 1], t[i + 2]))\n\t\t\tcanonEdges.add(canonEdge(t[i + 2], t[i + 0]))\n\t\t}\n\t\tconst data = indexBufferName\n\t\tif (!this[data]) this.addIndexBuffer(indexBufferName)\n\t\t//this.LINES = new Array(canonEdges.size)\n\t\tcanonEdges.forEach(val => this[data].push(val >> 16, val & 0xffff))\n\t\tthis.hasBeenCompiled = false\n\t\treturn this\n\t}\n\n\tcomputeWireframeFromFlatTrianglesClosedMesh(this: Mesh & { TRIANGLES: int[] }): this & { LINES: int[] }\n\tcomputeWireframeFromFlatTrianglesClosedMesh<T extends string>(this: Mesh & { TRIANGLES: int[] },\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  indexBufferName: T): this & { [k in T]: int[] }\n\tcomputeWireframeFromFlatTrianglesClosedMesh(this: any, indexBufferName: string = 'LINES'): this {\n\t\tif (!this.TRIANGLES) throw new Error('TRIANGLES must be defined.')\n\t\tif (!this.LINES) this.addIndexBuffer('LINES')\n\t\tconst tris = this.TRIANGLES\n\t\tif (!this[indexBufferName]) this.addIndexBuffer(indexBufferName)\n\t\tconst lines = this[indexBufferName]\n\t\tfor (let i = 0; i < tris.length; i += 3) {\n\t\t\tif (tris[i + 0] < tris[i + 1]) lines.push(tris[i + 0], tris[i + 1])\n\t\t\tif (tris[i + 1] < tris[i + 2]) lines.push(tris[i + 1], tris[i + 2])\n\t\t\tif (tris[i + 2] < tris[i + 0]) lines.push(tris[i + 2], tris[i + 0])\n\t\t}\n\t\tthis.hasBeenCompiled = false\n\t\treturn this\n\t}\n\n\tcomputeNormalLines(this: Mesh & { normals: V3[] }, length: number): this & { LINES: int[] }\n\tcomputeNormalLines<T extends string>(this: Mesh & { normals: V3[] },\n\t\t\t\t\t\t\t\t\t\t length: number, indexBufferName: T): this & { [k in T]: int[] }\n\tcomputeNormalLines(this: any, length: number = 1, indexBufferName: string = 'LINES') {\n\t\tif (!this.normals) {\n\t\t\tthrow new Error('normals must be defined.')\n\t\t}\n\t\tconst vs = this.vertices, si = this.vertices.length\n\t\tif (!this[indexBufferName]) this.addIndexBuffer(indexBufferName)\n\n\t\tfor (let i = 0; i < this.normals.length; i++) {\n\t\t\tvs[si + i] = vs[i].plus(this.normals[i].toLength(length))\n\t\t\tthis[indexBufferName].push(si + i, i)\n\t\t}\n\t\tthis.hasBeenCompiled = false\n\t\treturn this\n\t}\n\n\tgetAABB(): AABB {\n\t\treturn new AABB().addPoints(this.vertices)\n\t}\n\n\tgetBoundingSphere(): { center: V3, radius: number } {\n\t\tconst sphere = {center: this.getAABB().getCenter(), radius: 0}\n\t\tfor (let i = 0; i < this.vertices.length; i++) {\n\t\t\tsphere.radius = Math.max(sphere.radius, this.vertices[i].minus(sphere.center).length())\n\t\t}\n\t\treturn sphere\n\t}\n\n\n\t// ### Mesh.plane([options])\n\t//\n\t// Generates a square 2x2 mesh the xy plane centered at the origin. The\n\t// `options` argument specifies options to pass to the mesh constructor.\n\t// Additional options include `detailX` and `detailY`, which set the tesselation\n\t// in x and y, and `detail`, which sets both `detailX` and `detailY` at once.\n\t// Two triangles are generated by default.\n\t// Example usage:\n\t//\n\t//     var mesh1 = Mesh.plane();\n\t//     var mesh2 = Mesh.plane({ detail: 5 });\n\t//     var mesh3 = Mesh.plane({ detailX: 20, detailY: 40 });\n\t//\n\t/**\n\t * Generates a square mesh in the XY plane.\n\t * Texture coordinates (buffer \"coords\") are set to go from 0 to 1 in either direction.\n\t *\n\t *\n\t * @param {Object=} options\n\t * @param {number=} options.detail Defaults to 1\n\t * @param {number=} options.detailX Defaults to options.detail. Number of subdivisions in X direction.\n\t * @param {number=} options.detailY Defaults to options.detail. Number of subdivisions in Y direction.j\n\t * @param {number=} options.width defaults to 1\n\t * @param {number=} options.height defaults to 1\n\t * @param {number=} options.startX defaults to 0\n\t * @param {number=} options.startY defaults to 0\n\t */\n\tstatic plane(options: {\n\t\tdetail?: int,\n\t\tdetailX?: int,\n\t\tdetailY?: int,\n\t\twidth?: number,\n\t\theight?: number,\n\t\tstartX?: number,\n\t\tstartY?: number\n\t} = {}) {\n\t\tconst detailX = options.detailX || options.detail || 1\n\t\tconst detailY = options.detailY || options.detail || 1\n\t\tconst startX = options.startX || 0\n\t\tconst startY = options.startY || 0\n\t\tconst width = options.width || 1\n\t\tconst height = options.height || 1\n\t\tconst mesh = new Mesh()\n\t\t\t.addIndexBuffer('LINES')\n\t\t\t.addIndexBuffer('TRIANGLES')\n\t\t\t.addVertexBuffer('normals', 'ts_Normal')\n\t\t\t.addVertexBuffer('coords', 'ts_TexCoord')\n\n\t\tfor (let j = 0; j <= detailY; j++) {\n\t\t\tconst t = j / detailY\n\t\t\tfor (let i = 0; i <= detailX; i++) {\n\t\t\t\tconst s = i / detailX\n\t\t\t\tmesh.vertices.push(new V3(startX + s * width, startY + t * height, 0))\n\t\t\t\tmesh.coords.push([s, t])\n\t\t\t\tmesh.normals.push(V3.Z)\n\t\t\t\tif (i < detailX && j < detailY) {\n\t\t\t\t\tconst offset = i + j * (detailX + 1)\n\t\t\t\t\tmesh.TRIANGLES.push(\n\t\t\t\t\t\toffset, offset + detailX + 1, offset + 1,\n\t\t\t\t\t\toffset + detailX + 1, offset + detailX + 2, offset + 1)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 0; i < detailX; i++) {\n\t\t\tmesh.LINES.push(i, i + 1)\n\t\t\tmesh.LINES.push((detailX + 1) * detailY + i, (detailX + 1) * detailY + i + 1)\n\t\t}\n\t\tfor (let j = 0; j < detailY; j++) {\n\t\t\tmesh.LINES.push(detailX * j, detailX * (j + 1) + 1)\n\t\t\tmesh.LINES.push(detailX * (j + 1), detailX * (j + 2) + 1)\n\t\t}\n\n\t\tmesh.compile()\n\t\treturn mesh\n\t}\n\n\t// unique corners of a unit cube. Used by Mesh.cube to generate a cube mesh.\n\tstatic UNIT_CUBE_CORNERS = [\n\t\tV3.O,\n\t\tnew V3(0, 0, 1),\n\t\tnew V3(0, 1, 0),\n\t\tnew V3(0, 1, 1),\n\n\t\tnew V3(1, 0, 0),\n\t\tnew V3(1, 0, 1),\n\t\tnew V3(1, 1, 0),\n\t\tV3.XYZ,\n\t]\n\n\t/**\n\t * Generates a unit cube (1x1x1) starting at the origin and extending into the (+ + +) octant.\n\t * I.e. box from V3.O to V3(1,1,1)\n\t * Creates line, triangle, vertex and normal1 buffers.\n\t */\n\tstatic cube() {\n\t\tconst mesh = new Mesh()\n\t\t\t.addVertexBuffer('normals', 'ts_Normal')\n\t\t\t.addIndexBuffer('TRIANGLES')\n\t\t\t.addIndexBuffer('LINES')\n\n\t\t// basically indexes for faces of the cube. vertices each need to be added 3 times,\n\t\t// as they have different normals depending on the face being rendered\n\t\tconst VERTEX_CORNERS = [\n\t\t\t0, 1, 2, 3, // X = 0\n\t\t\t4, 5, 6, 7, // X = 1\n\n\t\t\t0, 4, 1, 5, // Y = 0\n\t\t\t2, 6, 3, 7, // Y = 1\n\n\t\t\t2, 6, 0, 4, // Z = 0\n\t\t\t3, 7, 1, 5, // Z = 1\n\t\t]\n\t\tmesh.vertices = VERTEX_CORNERS.map(i => Mesh.UNIT_CUBE_CORNERS[i])\n\t\tmesh.normals = [V3.X.negated(), V3.X, V3.Y.negated(), V3.Y, V3.Z.negated(), V3.Z].map(v => [v, v, v, v]).concatenated()\n\t\tfor (let i = 0; i < 6 * 4; i += 4) {\n\t\t\tpushQuad(mesh.TRIANGLES, 0 != i % 8,\n\t\t\t\tVERTEX_CORNERS[i], VERTEX_CORNERS[i + 1], VERTEX_CORNERS[i + 2], VERTEX_CORNERS[i + 3])\n\t\t}\n\t\t// indexes of LINES relative to UNIT_CUBE_CORNERS. Mapped to VERTEX_CORNERS.indexOf\n\t\t// so they make sense in the context of the mesh\n\t\tmesh.LINES = [\n\t\t\t0, 1,\n\t\t\t0, 2,\n\t\t\t1, 3,\n\t\t\t2, 3,\n\n\t\t\t0, 4,\n\t\t\t1, 5,\n\t\t\t2, 6,\n\t\t\t3, 7,\n\n\t\t\t4, 5,\n\t\t\t4, 6,\n\t\t\t5, 7,\n\t\t\t6, 7,\n\t\t].map(i => VERTEX_CORNERS.indexOf(i))\n\n\t\tmesh.compile()\n\t\treturn mesh\n\t}\n\n\tstatic isocahedron() {\n\t\treturn Mesh.sphere(0)\n\t}\n\n\tstatic sphere2(las: int, longs: int) {\n\t\tconst baseVertices = arrayFromFunction(las, i => {\n\t\t\tconst angle = i / (las - 1) * PI - PI / 2\n\t\t\treturn new V3(0, cos(angle), sin(angle))\n\t\t})\n\t\treturn Mesh.rotation(baseVertices, {anchor: V3.O, dir1: V3.Z}, 2 * PI, longs, true, baseVertices)\n\t}\n\n\t/**\n\t * Returns a sphere mesh with radius 1 created by subdividing the faces of a isocahedron (20-sided) recursively\n\t * The sphere is positioned at the origin\n\t * @param subdivisions\n\t *      How many recursive divisions to do. A subdivision divides a triangle into 4,\n\t *      so the total number of triangles is 20 * 4^subdivisions\n\t * @returns\n\t *      Contains vertex and normal1 buffers and index buffers for triangles and LINES\n\t */\n\tstatic sphere(subdivisions: int = 3) {\n\t\tconst golden = (1 + Math.sqrt(5)) / 2, u = new V3(1, golden, 0).unit(), s = u.x, t = u.y\n\t\t// base vertices of isocahedron\n\t\tconst vertices = [\n\t\t\tnew V3(-s, t, 0),\n\t\t\tnew V3(s, t, 0),\n\t\t\tnew V3(-s, -t, 0),\n\t\t\tnew V3(s, -t, 0),\n\n\t\t\tnew V3(0, -s, t),\n\t\t\tnew V3(0, s, t),\n\t\t\tnew V3(0, -s, -t),\n\t\t\tnew V3(0, s, -t),\n\n\t\t\tnew V3(t, 0, -s),\n\t\t\tnew V3(t, 0, s),\n\t\t\tnew V3(-t, 0, -s),\n\t\t\tnew V3(-t, 0, s)]\n\t\t// base triangles of isocahedron\n\t\tconst triangles = [\n\t\t\t// 5 faces around point 0\n\t\t\t0, 11, 5,\n\t\t\t0, 5, 1,\n\t\t\t0, 1, 7,\n\t\t\t0, 7, 10,\n\t\t\t0, 10, 11,\n\n\t\t\t// 5 adjacent faces\n\t\t\t1, 5, 9,\n\t\t\t5, 11, 4,\n\t\t\t11, 10, 2,\n\t\t\t10, 7, 6,\n\t\t\t7, 1, 8,\n\n\t\t\t// 5 faces around point 3\n\t\t\t3, 9, 4,\n\t\t\t3, 4, 2,\n\t\t\t3, 2, 6,\n\t\t\t3, 6, 8,\n\t\t\t3, 8, 9,\n\n\t\t\t// 5 adjacent faces\n\t\t\t4, 9, 5,\n\t\t\t2, 4, 11,\n\t\t\t6, 2, 10,\n\t\t\t8, 6, 7,\n\t\t\t9, 8, 1,\n\t\t]\n\n\t\t/**\n\t\t * Tesselates triangle a b c\n\t\t * a b c must already be in vertices with the indexes ia ib ic\n\t\t * res is the number of subdivisions to do. 0 just results in triangle and line indexes being added to the\n\t\t * respective buffers.\n\t\t */\n\t\tfunction tesselateRecursively(a: V3, b: V3, c: V3, res: int, vertices: V3[], triangles: int[],\n\t\t\t\t\t\t\t\t\t  ia: int, ib: int, ic: int, lines: int[]) {\n\t\t\tif (0 == res) {\n\t\t\t\ttriangles.push(ia, ib, ic)\n\t\t\t\tif (ia < ib) lines.push(ia, ib)\n\t\t\t\tif (ib < ic) lines.push(ib, ic)\n\t\t\t\tif (ic < ia) lines.push(ic, ia)\n\t\t\t} else {\n\t\t\t\t// subdivide the triangle abc into 4 by adding a vertex (with the correct distance from the origin)\n\t\t\t\t// between each segment ab, bc and cd, then calling the function recursively\n\t\t\t\tconst abMid1 = a.plus(b).toLength(1), bcMid1 = b.plus(c).toLength(1), caMid1 = c.plus(a).toLength(1)\n\t\t\t\t// indexes of new vertices:\n\t\t\t\tconst iabm = vertices.length, ibcm = iabm + 1, icam = iabm + 2\n\t\t\t\tvertices.push(abMid1, bcMid1, caMid1)\n\t\t\t\ttesselateRecursively(abMid1, bcMid1, caMid1, res - 1, vertices, triangles, iabm, ibcm, icam, lines)\n\t\t\t\ttesselateRecursively(a, abMid1, caMid1, res - 1, vertices, triangles, ia, iabm, icam, lines)\n\t\t\t\ttesselateRecursively(b, bcMid1, abMid1, res - 1, vertices, triangles, ib, ibcm, iabm, lines)\n\t\t\t\ttesselateRecursively(c, caMid1, bcMid1, res - 1, vertices, triangles, ic, icam, ibcm, lines)\n\t\t\t}\n\t\t}\n\n\t\tconst mesh = new Mesh()\n\t\t\t.addVertexBuffer('normals', 'ts_Normal')\n\t\t\t.addIndexBuffer('TRIANGLES')\n\t\t\t.addIndexBuffer('LINES')\n\t\tmesh.vertices.push(...vertices)\n\t\tsubdivisions = undefined == subdivisions ? 4 : subdivisions\n\t\tfor (let i = 0; i < 20; i++) {\n\t\t\tconst [ia, ic, ib] = triangles.slice(i * 3, i * 3 + 3)\n\t\t\ttesselateRecursively(vertices[ia], vertices[ic], vertices[ib], subdivisions, mesh.vertices, mesh.TRIANGLES, ia, ic, ib, mesh.LINES)\n\t\t}\n\n\t\tmesh.normals = mesh.vertices\n\t\tmesh.compile()\n\t\treturn mesh\n\t}\n\n\tstatic aabb(aabb: AABB) {\n\t\tconst matrix = M4.multiplyMultiple(\n\t\t\tM4.translate(aabb.min),\n\t\t\tM4.scale(aabb.size().max(new V3(NLA_PRECISION, NLA_PRECISION, NLA_PRECISION))))\n\t\tconst mesh = Mesh.cube().transform(matrix)\n\t\t// mesh.vertices = aabb.corners()\n\t\tmesh.computeNormalLines(20)\n\t\tmesh.compile()\n\n\t\treturn mesh\n\t}\n\n\n\tstatic offsetVertices(vertices: V3[], offset: V3, close: boolean): Mesh & { TRIANGLES: int[], coords: [number, number][] }\n\tstatic offsetVertices(vertices: V3[], offset: V3, close: boolean, normals: V3[]): Mesh & { TRIANGLES: int[], coords: [number, number][], normals: V3[] }\n\tstatic offsetVertices(vertices: V3[], offset: V3, close: boolean, normals?: V3[]) {\n\t\tassertVectors.apply(undefined, vertices)\n\t\tassertVectors(offset)\n\n\t\tconst mesh = new Mesh()\n\t\t\t.addIndexBuffer('TRIANGLES')\n\t\t\t.addVertexBuffer('coords', 'ts_TexCoord')\n\t\tnormals && mesh.addVertexBuffer('normals', 'ts_Normal')\n\t\tmesh.vertices = vertices.concat(vertices.map(v => v.plus(offset)))\n\t\tconst vl = vertices.length\n\t\tmesh.coords = arrayFromFunction(vl * 2, (i): [number, number] => [(i % vl) / vl, (i / vl) | 0])\n\n\t\tconst triangles = mesh.TRIANGLES\n\t\tfor (let i = 0; i < vertices.length - 1; i++) {\n\t\t\tpushQuad(triangles, false,\n\t\t\t\ti, i + 1,\n\t\t\t\tvertices.length + i, vertices.length + i + 1)\n\t\t}\n\t\tif (close) {\n\t\t\tpushQuad(triangles, false, 0, vertices.length - 1, vertices.length, vertices.length * 2 - 1)\n\t\t}\n\t\tif (normals) {\n\t\t\tmesh.normals = normals.concat(normals)\n\t\t}\n\t\tmesh.compile()\n\t\treturn mesh\n\t}\n\n\t// Creates a new $Mesh by rotating $vertices by $totalRads around $lineAxis (according to the right-hand\n\t// rule). $steps is the number of steps to take. $close is whether the vertices of the first and last step\n\t// should be connected by triangles. If $normals is set (pass an array of V3s of the same length as $vertices),\n\t// these will also be rotated and correctly added to the mesh.\n\t// @example const precious = Mesh.rotation([V(10, 0, -2), V(10, 0, 2), V(11, 0, 2), V(11, 0, -2)], , L3.Z, 512)\n\tstatic rotation(vertices: V3[], lineAxis: { anchor: V3, dir1: V3 }, totalRads: raddd, steps: int, close = true, normals?: V3[]) {\n\t\tconst mesh = new Mesh().addIndexBuffer('TRIANGLES')\n\t\tnormals && mesh.addVertexBuffer('normals', 'ts_Normal')\n\t\tconst vc = vertices.length, vTotal = vc * steps\n\n\t\tconst rotMat = new M4()\n\t\tconst triangles = mesh.TRIANGLES\n\t\tfor (let i = 0; i < steps; i++) {\n\t\t\t// add triangles\n\t\t\tconst rads = totalRads / steps * i\n\t\t\tM4.rotateLine(lineAxis.anchor, lineAxis.dir1, rads, rotMat)\n\t\t\tmesh.vertices.push(...rotMat.transformedPoints(vertices))\n\n\t\t\tnormals && mesh.normals!.push(...rotMat.transformedVectors(normals))\n\t\t\tif (close || i !== steps - 1) {\n\t\t\t\tfor (let j = 0; j < vc - 1; j++) {\n\t\t\t\t\tpushQuad(triangles, false,\n\t\t\t\t\t\ti * vc + j + 1, i * vc + j,\n\t\t\t\t\t\t((i + 1) * vc + j + 1) % vTotal, ((i + 1) * vc + j) % vTotal)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tmesh.compile()\n\t\treturn mesh\n\t}\n\n\tstatic parametric(pF: (d: number, z: number) => V3, pN: (d: number, z: number) => V3,\n\t\t\t\t\t  sMin: number, sMax: number, tMin: number, tMax: number, sRes: number, tRes: number) {\n\t\tconst mesh = new Mesh()\n\t\t\t.addVertexBuffer('normals', 'ts_Normal')\n\t\t\t.addIndexBuffer('TRIANGLES')\n\t\tfor (let si = 0; si <= sRes; si++) {\n\t\t\tconst s = lerp(sMin, sMax, si / sRes)\n\t\t\tfor (let ti = 0; ti <= tRes; ti++) {\n\t\t\t\tconst t = lerp(tMin, tMax, ti / tRes)\n\t\t\t\tmesh.vertices.push(pF(s, t))\n\t\t\t\tmesh.normals.push(pN(s, t))\n\t\t\t\tif (ti < tRes && si < sRes) {\n\t\t\t\t\tconst offset = ti + si * (tRes + 1)\n\t\t\t\t\tpushQuad(mesh.TRIANGLES, false,\n\t\t\t\t\t\toffset, offset + tRes + 1, offset + 1, offset + tRes + 2)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tmesh.compile()\n\t\treturn mesh\n\t}\n\n\tstatic load(json: { vertices: Tuple3<number>[], triangles?: Tuple3<number>[], normals?: Tuple3<number>[] }) {\n\t\tconst mesh = new Mesh()\n\t\tif (Array.isArray(json.vertices[0])) {\n\t\t\tmesh.vertices = json.vertices.map(x => V(x))\n\t\t} else {\n\t\t\tthrow new Error()\n\t\t}\n\t\tif (json.triangles) {\n\t\t\tmesh.addIndexBuffer('TRIANGLES')\n\t\t\t;(mesh as any).TRIANGLES = json.triangles\n\t\t}\n\t\tif (json.normals) {\n\t\t\tmesh.addVertexBuffer('normals', 'ts_Normal')\n\t\t\t;(mesh as any).normals = json.normals\n\t\t}\n\t\tmesh.compile()\n\t\treturn mesh\n\t}\n}","/* tslint:disable:no-string-literal */\nimport {assert, assertf, assertInst, assertVectors, int, M4, NLA_DEBUG, V3} from 'ts3dutils'\n\nimport {currentGL, GL_COLOR, TSGLContext, Buffer, Mesh} from './index'\n\nimport GL = WebGLRenderingContextStrict\nconst WGL = WebGLRenderingContext as any as WebGLRenderingContextStrict.Constants\n\n/**\n * These are all the draw modes usable in OpenGL ES\n */\nconst DRAW_MODE_NAMES = {\n\t[WGL.POINTS]: 'POINTS',\n\t[WGL.LINES]: 'LINES',\n\t[WGL.LINE_STRIP]: 'LINE_STRIP',\n\t[WGL.LINE_LOOP]: 'LINE_LOOP',\n\t[WGL.TRIANGLES]: 'TRIANGLES',\n\t[WGL.TRIANGLE_STRIP]: 'TRIANGLE_STRIP',\n\t[WGL.TRIANGLE_FAN]: 'TRIANGLE_FAN',\n}\nconst DRAW_MODE_CHECKS: { [type: string]: (x: int) => boolean } = {\n\t[WGL.POINTS]: _ => true,\n\t[WGL.LINES]: x => 0 == x % 2, // divisible by 2\n\t[WGL.LINE_STRIP]: x => x > 2, // need at least 2\n\t[WGL.LINE_LOOP]: x => x > 2, // more like > 3, but oh well\n\t[WGL.TRIANGLES]: x => 0 == x % 3, // divisible by 3\n\t[WGL.TRIANGLE_STRIP]: x => x > 3,\n\t[WGL.TRIANGLE_FAN]: x => x > 3,\n}\n\nexport const SHADER_VAR_TYPES = ['FLOAT', 'FLOAT_MAT2', 'FLOAT_MAT3', 'FLOAT_MAT4', 'FLOAT_VEC2', 'FLOAT_VEC3', 'FLOAT_VEC4', 'INT', 'INT_VEC2', 'INT_VEC3', 'INT_VEC4', 'UNSIGNED_INT']\n\n\nexport function isArray<T>(obj: any): obj is T[] {\n\treturn Array == obj.constructor || Float32Array == obj.constructor || Float64Array == obj.constructor\n}\n\nexport interface UniformTypesMap {\n\tFLOAT_VEC4: GL_COLOR | V3\n\tFLOAT_VEC3: [number, number, number] | V3\n\tFLOAT_VEC2: [number, number] | V3\n\tFLOAT: number\n\tINT: int\n\tFLOAT_MAT4: M4 | number[]\n\tFLOAT_MAT3: M4 | number[]\n\tSAMPLER_2D: int\n\tBOOL: boolean\n}\nexport type UniformTypes = keyof UniformTypesMap\n\nfunction isFloatArray(obj: any): obj is number[] | Float64Array | Float32Array {\n\treturn Float32Array == obj.constructor || Float64Array == obj.constructor ||\n\t\tArray.isArray(obj) && obj.every(x => 'number' == typeof x)\n}\n\nfunction isIntArray(x: any) {\n\tif ([Int8Array, Uint8Array, Uint8ClampedArray, Int16Array, Uint16Array, Int32Array, Uint32Array]\n\t\t\t.some(y => x instanceof y)) {\n\t\treturn true\n\t}\n\treturn (x instanceof Float32Array || x instanceof Float64Array || Array.isArray(x)) &&\n\t\t(x as number[]).every(x => Number.isInteger(x))\n}\n\nexport type ShaderType<UniformTypes, AttributeTypes = {}> = string & { T?: UniformTypes, A?: AttributeTypes }\nexport type VarTypeMap = { [name: string]: UniformTypes }\nexport type ShaderSource<U extends VarTypeMap, IN extends VarTypeMap, OUT extends VarTypeMap, kind extends 'vertex' | 'fragment'> = string & { U: U, IN: IN, OUT: OUT, kind: kind }\n\n//const x:UniformTypes = undefined as 'FLOAT_VEC4' | 'FLOAT_VEC3'\nexport class Shader<UniformTypes extends VarTypeMap = any, AttributeTypes extends VarTypeMap = any> {\n\tprogram: WebGLProgram\n\tactiveMatrices: { [matrixName: string ]: boolean }\n\tattributeLocations: { [attributeName: string ]: number }\n\tconstantAttributes: { [attributeName: string ]: boolean }\n\tuniformLocations: { [uniformName: string ]: WebGLUniformLocation }\n\tuniformInfos: { [uniformName: string ]: GL.WebGLActiveInfo<GL.UniformType> }\n\tprojectionMatrixVersion = -1\n\tmodelViewMatrixVersion = -1\n\tgl: TSGLContext\n\n\t/**\n\t * Create shader drom typed vertex and fragment source. Weird generic arguments are because\n\t * the vertex shader is required to have the OUT types the fragment shader needs as IN,\n\t * but not vice-versa.\n\t */\n\tstatic create<\n\tFragSrc extends ShaderSource<{}, {}, {}, 'fragment'>,\n\tVertSrc extends ShaderSource<{}, {}, FragSrc['IN'], 'vertex'>>(\n\t\tvertexSource: VertSrc, fragmentSource: FragSrc, gl?: TSGLContext\n\t): Shader<VertSrc['U'] & FragSrc['U'], VertSrc['IN']>\n\t/**\n\t * Create shader from typed vertex and untyped fragment source. Uniform of the fragment shader\n\t * can optionally be manually specified.\n\t */\n\tstatic create<FU extends VarTypeMap, VertSrc extends ShaderSource<{}, {}, {}, 'vertex'>>(vertexSource: VertSrc, fragmentSource: string & { IN?: undefined }, gl?: TSGLContext): Shader<FU & VertSrc['U'], VertSrc['IN']>\n\t/**\n\t * Create shader from untyped vertex and typed fragment source. Uniform and attribute types of the shader\n\t * can optionally be manually specified.\n\t */\n\tstatic create<VU extends VarTypeMap, VA extends VarTypeMap, FragSrc extends ShaderSource<{}, {}, {}, 'vertex'>>(vertexSource: string & { IN?: undefined }, fragmentSource: FragSrc, gl?: TSGLContext): Shader<VU & FragSrc['U'], VA>\n\t/**\n\t * Create shader from untyped vertex and fragment source. Uniform and attribute types of the shader\n\t * can optionally be manually specified.\n\t */\n\tstatic create<U extends VarTypeMap = {}, A extends VarTypeMap = {}>(vertexSource: string & { IN?: undefined }, fragmentSource: string & { IN?: undefined }, gl?: TSGLContext): Shader<U, A>\n\tstatic create(vertexSource: string, fragmentSource: string, gl?: TSGLContext) {\n\t\treturn new Shader(vertexSource, fragmentSource, gl) as any\n\t}\n\n\t/**\n\t * Provides a convenient wrapper for WebGL shaders. A few uniforms and attributes,\n\t * prefixed with `gl_`, are automatically added to all shader sources to make\n\t * simple shaders easier to write.\n\t * Headers for the following variables are automatically prepended to the passed source. The correct variables\n\t * are also automatically passed to the shader when drawing.\n\t *\n\t * For vertex and fragment shaders:\n\t uniform mat3 ts_NormalMatrix;\n\t uniform mat4 ts_ModelViewMatrix;\n\t uniform mat4 ts_ProjectionMatrix;\n\t uniform mat4 ts_ModelViewProjectionMatrix;\n\t uniform mat4 ts_ModelViewMatrixInverse;\n\t uniform mat4 ts_ProjectionMatrixInverse;\n\t uniform mat4 ts_ModelViewProjectionMatrixInverse;\n\t *\n\t *\n\t * Example usage:\n\t *\n\t *  const shader = new GL.Shader(\n\t *      `void main() { gl_Position = ts_ModelViewProjectionMatrix * ts_Vertex; }`,\n\t *      `uniform vec4 color; void main() { gl_FragColor = color; }`)\n\t *\n\t *  shader.uniforms({ color: [1, 0, 0, 1] }).draw(mesh)\n\t *\n\t * Compiles a shader program using the provided vertex and fragment shaders.\n\t */\n\tprotected constructor(vertexSource: string, fragmentSource: string, gl = currentGL()) {\n\t\t// const versionRegex = /^(?:\\s+|\\/\\/[\\s\\S]*?[\\r\\n]+|\\/\\*[\\s\\S]*?\\*\\/)+(#version\\s+(\\d+)\\s+es)/\n\t\t// Headers are prepended to the sources to provide some automatic functionality.\n\t\tconst header = `\n\t\tuniform mat3 ts_NormalMatrix;\n\t\tuniform mat4 ts_ModelViewMatrix;\n\t\tuniform mat4 ts_ProjectionMatrix;\n\t\tuniform mat4 ts_ModelViewProjectionMatrix;\n\t\tuniform mat4 ts_ModelViewMatrixInverse;\n\t\tuniform mat4 ts_ProjectionMatrixInverse;\n\t\tuniform mat4 ts_ModelViewProjectionMatrixInverse;\n\t`\n\t\tconst matrixNames = header.match(/\\bts_\\w+/g)\n\n\t\t// Compile and link errors are thrown as strings.\n\t\tfunction compileSource(type: GL.ShaderType, source: string) {\n\t\t\tconst shader = gl.createShader(type)!\n\t\t\tgl.shaderSource(shader, source)\n\t\t\tgl.compileShader(shader)\n\t\t\tif (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n\t\t\t\tthrow new Error('compile error: ' + gl.getShaderInfoLog(shader))\n\t\t\t}\n\t\t\treturn shader\n\t\t}\n\n\n\t\tthis.gl = gl\n\t\tthis.program = gl.createProgram()!\n\t\tgl.attachShader(this.program, compileSource(gl.VERTEX_SHADER, vertexSource))\n\t\tgl.attachShader(this.program, compileSource(gl.FRAGMENT_SHADER, fragmentSource))\n\t\tgl.linkProgram(this.program)\n\t\tif (!gl.getProgramParameter(this.program, gl.LINK_STATUS)) {\n\t\t\tthrow new Error('link error: ' + gl.getProgramInfoLog(this.program))\n\t\t}\n\t\tthis.attributeLocations = {}\n\t\tthis.uniformLocations = {}\n\t\tthis.constantAttributes = {}\n\n\t\t// Check for the use of built-in matrices that require expensive matrix\n\t\t// multiplications to compute, and record these in `activeMatrices`.\n\t\tthis.activeMatrices = {}\n\t\tmatrixNames && matrixNames.forEach(name => {\n\t\t\tif (gl.getUniformLocation(this.program, name)) {\n\t\t\t\tthis.activeMatrices[name] = true\n\t\t\t}\n\t\t})\n\n\t\tthis.uniformInfos = {}\n\t\tfor (let i = gl.getProgramParameter(this.program, gl.ACTIVE_UNIFORMS); i-- > 0;) {\n\t\t\t// see https://www.khronos.org/registry/OpenGL-Refpages/es2.0/xhtml/glGetActiveUniform.xml\n\t\t\t// this.program has already been checked\n\t\t\t// i is in bounds\n\t\t\tconst info = gl.getActiveUniform(this.program, i)!\n\t\t\tthis.uniformInfos[info.name] = info\n\t\t}\n\t}\n\n\n\t/**\n\t * Set a uniform for each property of `uniforms`. The correct `viewerGL.uniform*()` method is inferred from the\n\t * value types and from the stored uniform sampler flags.\n\t */\n\tuniforms(uniforms: Partial<{ [K in keyof UniformTypes]: UniformTypesMap[UniformTypes[K]] }>): this {\n\t\tconst gl = this.gl\n\t\tgl.useProgram(this.program)\n\n\t\tfor (const name in uniforms) {\n\t\t\tconst location = this.uniformLocations[name] || gl.getUniformLocation(this.program, name)\n\t\t\t// !location && console.warn(name + ' uniform is not used in shader')\n\t\t\tif (!location) continue\n\t\t\tthis.uniformLocations[name] = location\n\t\t\tlet value: any = uniforms[name] as any\n\t\t\tconst info = this.uniformInfos[name]\n\t\t\tif (NLA_DEBUG) {\n\t\t\t\t// TODO: better errors\n\t\t\t\tif (gl.SAMPLER_2D == info.type || gl.SAMPLER_CUBE == info.type || gl.INT == info.type) {\n\t\t\t\t\tif (1 == info.size) {\n\t\t\t\t\t\tassert(Number.isInteger(value))\n\t\t\t\t\t} else {\n\t\t\t\t\t\tassert(isIntArray(value) && value.length == info.size, 'value must be int array if info.size != 1')\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tassert(gl.FLOAT != info.type ||\n\t\t\t\t\t(1 == info.size && 'number' === typeof value || isFloatArray(value) && info.size == value.length))\n\t\t\t\tassert(gl.FLOAT_VEC3 != info.type ||\n\t\t\t\t\t(1 == info.size && value instanceof V3 ||\n\t\t\t\t\t\tArray.isArray(value) && info.size == value.length && assertVectors(...value)))\n\t\t\t\tassert(gl.FLOAT_VEC4 != info.type || 1 != info.size || isFloatArray(value) && value.length == 4)\n\t\t\t\tassert(gl.FLOAT_MAT4 != info.type || value instanceof M4, () => value.toSource())\n\t\t\t\tassert(gl.FLOAT_MAT3 != info.type || value.length == 9 || value instanceof M4)\n\t\t\t}\n\t\t\tif (value instanceof V3) {\n\t\t\t\tvalue = value.toArray()\n\t\t\t}\n\t\t\tif (gl.FLOAT_VEC4 == info.type && info.size != 1) {\n\t\t\t\tgl.uniform4fv(location, value.concatenated())\n\t\t\t} else if (gl.FLOAT == info.type && info.size != 1) {\n\t\t\t\tgl.uniform1fv(location, value)\n\t\t\t} else if (gl.FLOAT_VEC3 == info.type && info.size != 1) {\n\t\t\t\tgl.uniform3fv(location, V3.pack(value))\n\t\t\t} else if (value.length) {\n\t\t\t\tswitch (value.length) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tgl.uniform1fv(location, value)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tgl.uniform2fv(location, value)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tgl.uniform3fv(location, value)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tgl.uniform4fv(location, value)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// Matrices are automatically transposed, since WebGL uses column-major\n\t\t\t\t\t// indices instead of row-major indices.\n\t\t\t\t\tcase 9:\n\t\t\t\t\t\tgl.uniformMatrix3fv(location, false, new Float32Array([\n\t\t\t\t\t\t\tvalue[0], value[3], value[6],\n\t\t\t\t\t\t\tvalue[1], value[4], value[7],\n\t\t\t\t\t\t\tvalue[2], value[5], value[8],\n\t\t\t\t\t\t]))\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase 16:\n\t\t\t\t\t\tgl.uniformMatrix4fv(location, false, new Float32Array([\n\t\t\t\t\t\t\tvalue[0], value[4], value[8], value[12],\n\t\t\t\t\t\t\tvalue[1], value[5], value[9], value[13],\n\t\t\t\t\t\t\tvalue[2], value[6], value[10], value[14],\n\t\t\t\t\t\t\tvalue[3], value[7], value[11], value[15],\n\t\t\t\t\t\t]))\n\t\t\t\t\t\tbreak\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error('don\\'t know how to load uniform \"' + name + '\" of length ' + value.length)\n\t\t\t\t}\n\t\t\t} else if ('number' == typeof value) {\n\t\t\t\tif (gl.SAMPLER_2D == info.type || gl.SAMPLER_CUBE == info.type || gl.INT == info.type) {\n\t\t\t\t\tgl.uniform1i(location, value)\n\t\t\t\t} else {\n\t\t\t\t\tgl.uniform1f(location, value)\n\t\t\t\t}\n\t\t\t} else if ('boolean' == typeof value) {\n\t\t\t\tgl.uniform1i(location, +value)\n\t\t\t} else if (value instanceof M4) {\n\t\t\t\tconst m = value.m\n\t\t\t\tif (gl.FLOAT_MAT4 == info.type) {\n\t\t\t\t\tgl.uniformMatrix4fv(location, false, [\n\t\t\t\t\t\tm[0], m[4], m[8], m[12],\n\t\t\t\t\t\tm[1], m[5], m[9], m[13],\n\t\t\t\t\t\tm[2], m[6], m[10], m[14],\n\t\t\t\t\t\tm[3], m[7], m[11], m[15]])\n\t\t\t\t} else if (gl.FLOAT_MAT3 == info.type) {\n\t\t\t\t\tgl.uniformMatrix3fv(location, false, [\n\t\t\t\t\t\tm[0], m[4], m[8],\n\t\t\t\t\t\tm[1], m[5], m[9],\n\t\t\t\t\t\tm[2], m[6], m[10]])\n\t\t\t\t} else if (gl.FLOAT_MAT2 == info.type) {\n\t\t\t\t\tgl.uniformMatrix2fv(location, false, new Float32Array([\n\t\t\t\t\t\tm[0], m[4],\n\t\t\t\t\t\tm[1], m[5]]))\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(`Can't assign M4 to ${info.type}`)\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthrow new Error('attempted to set uniform \"' + name + '\" to invalid value ' + value)\n\t\t\t}\n\t\t}\n\n\t\treturn this\n\t}\n\n\tattributes(attributes: Partial<{ [K in keyof AttributeTypes]: UniformTypesMap[AttributeTypes[K]] }>): this {\n\t\tconst gl = this.gl\n\t\tgl.useProgram(this.program)\n\n\t\tfor (const name in attributes) {\n\t\t\tconst location = this.attributeLocations[name] || gl.getAttribLocation(this.program, name)\n\t\t\tif (location == -1) {\n\t\t\t\tif (!name.startsWith('ts_')) {\n\t\t\t\t\tconsole.warn(`Vertex buffer ${name} was not bound because the attribute is not active.`)\n\t\t\t\t}\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tthis.attributeLocations[name] = location\n\t\t\tgl.disableVertexAttribArray(location)\n\t\t\tlet value = attributes[name]\n\t\t\tif (value instanceof V3) {\n\t\t\t\tvalue = value.toArray()\n\t\t\t}\n\t\t\tif ('number' === typeof value) {\n\t\t\t\tgl.vertexAttrib1f(location, value)\n\t\t\t} else {\n\t\t\t\tgl.vertexAttrib4fv(location, value as number[])\n\t\t\t\t// switch ((value as number[]).length) {\n\t\t\t\t// \tcase 1:\n\t\t\t\t// \t\tgl.vertexAttrib1fv(location, value as number[])\n\t\t\t\t// \t\tbreak\n\t\t\t\t// \tcase 2:\n\t\t\t\t// \t\tgl.vertexAttrib2fv(location, value as number[])\n\t\t\t\t// \t\tbreak\n\t\t\t\t// \tcase 3:\n\t\t\t\t// \t\tgl.vertexAttrib3fv(location, value as number[])\n\t\t\t\t// \t\tbreak\n\t\t\t\t// \tcase 4:\n\t\t\t\t// \t\tbreak\n\t\t\t\t// }\n\t\t\t}\n\t\t\tthis.constantAttributes[name] = true\n\t\t}\n\t\treturn this\n\t}\n\n\t/**\n\t * Sets all uniform matrix attributes, binds all relevant buffers, and draws the mesh geometry as indexed\n\t * triangles or indexed LINES. Set `mode` to `gl.LINES` (and either add indices to `LINES` or call\n\t * `computeWireframe()`) to draw the mesh in wireframe.\n\t *\n\t * @param mesh\n\t * @param mode Defaults to 'TRIANGLES'. Must be passed as string so the correct index buffer can be\n\t *     automatically drawn.\n\t * @param start int\n\t * @param count int\n\t */\n\tdraw(mesh: Mesh, mode: GL.DrawMode = WGL.TRIANGLES, start?: int, count?: int): this {\n\t\tassert(mesh.hasBeenCompiled, 'mesh.hasBeenCompiled')\n\t\tassert(undefined != DRAW_MODE_NAMES[mode])\n\t\tconst modeName: string = DRAW_MODE_NAMES[mode]\n\t\t// assert(mesh.indexBuffers[modeStr], `mesh.indexBuffers[${modeStr}] undefined`)\n\t\treturn this.drawBuffers(mesh.vertexBuffers, mesh.indexBuffers[modeName], mode, start, count)\n\t}\n\n\t/**\n\t * Sets all uniform matrix attributes, binds all relevant buffers, and draws the\n\t * indexed mesh geometry. The `vertexBuffers` argument is a map from attribute\n\t * names to `Buffer` objects of type `WGL.ARRAY_BUFFER`, `indexBuffer` is a `Buffer`\n\t * object of type `WGL.ELEMENT_ARRAY_BUFFER`, and `mode` is a WebGL primitive mode\n\t * like `WGL.TRIANGLES` or `WGL.LINES`. This method automatically creates and caches\n\t * vertex attribute pointers for attributes as needed.\n\t */\n\tdrawBuffers(vertexBuffers: { [attributeName: string]: Buffer },\n\t\t\t\tindexBuffer: Buffer | undefined,\n\t\t\t\tmode: GL.DrawMode = WGL.TRIANGLES,\n\t\t\t\tstart: int = 0, count?: int): this {\n\t\tconst gl = this.gl\n\t\tassert(undefined != DRAW_MODE_NAMES[mode])\n\t\tassertf(() => 1 <= Object.keys(vertexBuffers).length)\n\t\tObject.keys(vertexBuffers).forEach(key => assertInst(Buffer, vertexBuffers[key]))\n\n\t\t// Only varruct up the built-in matrices that are active in the shader\n\t\tconst on = this.activeMatrices\n\t\tconst modelViewMatrixInverse = (on['ts_ModelViewMatrixInverse'] || on['ts_NormalMatrix'])\n\t\t\t//&& this.modelViewMatrixVersion != gl.modelViewMatrixVersion\n\t\t\t&& gl.modelViewMatrix.inversed()\n\t\tconst projectionMatrixInverse = on['ts_ProjectionMatrixInverse']\n\t\t\t//&& this.projectionMatrixVersion != gl.projectionMatrixVersion\n\t\t\t&& gl.projectionMatrix.inversed()\n\t\tconst modelViewProjectionMatrix = (on['ts_ModelViewProjectionMatrix'] || on['ts_ModelViewProjectionMatrixInverse'])\n\t\t\t//&& (this.projectionMatrixVersion != gl.projectionMatrixVersion || this.modelViewMatrixVersion !=\n\t\t\t// gl.modelViewMatrixVersion)\n\t\t\t&& gl.projectionMatrix.times(gl.modelViewMatrix)\n\n\t\tconst uni: { [matrixName: string ]: M4 } = {} // Uniform Matrices\n\t\ton['ts_ModelViewMatrix']\n\t\t&& this.modelViewMatrixVersion != gl.modelViewMatrixVersion\n\t\t&& (uni['ts_ModelViewMatrix'] = gl.modelViewMatrix)\n\t\ton['ts_ModelViewMatrixInverse'] && (uni['ts_ModelViewMatrixInverse'] = modelViewMatrixInverse as M4)\n\t\ton['ts_ProjectionMatrix']\n\t\t&& this.projectionMatrixVersion != gl.projectionMatrixVersion\n\t\t&& (uni['ts_ProjectionMatrix'] = gl.projectionMatrix)\n\t\tprojectionMatrixInverse && (uni['ts_ProjectionMatrixInverse'] = projectionMatrixInverse)\n\t\tmodelViewProjectionMatrix && (uni['ts_ModelViewProjectionMatrix'] = modelViewProjectionMatrix)\n\t\tmodelViewProjectionMatrix && on['ts_ModelViewProjectionMatrixInverse']\n\t\t&& (uni['ts_ModelViewProjectionMatrixInverse'] = modelViewProjectionMatrix.inversed())\n\t\ton['ts_NormalMatrix']\n\t\t&& this.modelViewMatrixVersion != gl.modelViewMatrixVersion\n\t\t&& (uni['ts_NormalMatrix'] = (modelViewMatrixInverse as M4).transposed())\n\t\tthis.uniforms(uni as any)\n\t\tthis.projectionMatrixVersion = gl.projectionMatrixVersion\n\t\tthis.modelViewMatrixVersion = gl.modelViewMatrixVersion\n\n\t\t// Create and enable attribute pointers as necessary.\n\t\tlet minVertexBufferLength = Infinity\n\t\tfor (const attribute in vertexBuffers) {\n\t\t\tconst buffer = vertexBuffers[attribute]\n\t\t\tassert(buffer.hasBeenCompiled)\n\t\t\tconst location = this.attributeLocations[attribute] || gl.getAttribLocation(this.program, attribute)\n\t\t\tif (location == -1 || !buffer.buffer) {\n\t\t\t\tif (!attribute.startsWith('ts_')) {\n\t\t\t\t\tconsole.warn(`Vertex buffer ${attribute} was not bound because the attribute is not active.`)\n\t\t\t\t}\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tthis.attributeLocations[attribute] = location\n\t\t\tgl.bindBuffer(WGL.ARRAY_BUFFER, buffer.buffer)\n\n\t\t\tgl.enableVertexAttribArray(location)\n\n\t\t\tgl.vertexAttribPointer(location, buffer.spacing, WGL.FLOAT, false, 0, 0)\n\n\t\t\tminVertexBufferLength = Math.min(minVertexBufferLength, buffer.count)\n\t\t}\n\n\t\t// Disable unused attribute pointers.\n\t\tfor (const attribute in this.attributeLocations) {\n\t\t\tif (!(attribute in vertexBuffers)) {\n\t\t\t\tgl.disableVertexAttribArray(this.attributeLocations[attribute])\n\t\t\t}\n\t\t}\n\n\t\tif (NLA_DEBUG) {\n\t\t\tconst numAttribs = gl.getProgramParameter(this.program, gl.ACTIVE_ATTRIBUTES)\n\t\t\tfor (let i = 0; i < numAttribs; ++i) {\n\t\t\t\tconst buffer=gl.getVertexAttrib(i, gl.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING)\n\t\t\t\tif (!buffer) {\n\t\t\t\t\tconst info = gl.getActiveAttrib(this.program, i)!\n\t\t\t\t\tif (!this.constantAttributes[info.name]) {\n\t\t\t\t\t\tconsole.warn('No buffer is bound to attribute ' + info.name + ' and it was not set with .attributes()')\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// console.log('name:', info.name, 'type:', info.type, 'size:', info.size)\n\t\t\t}\n\t\t}\n\n\t\t// Draw the geometry.\n\t\tif (minVertexBufferLength) {\n\t\t\tcount = count || (indexBuffer ? indexBuffer.count : minVertexBufferLength)\n\t\t\tassert(DRAW_MODE_CHECKS[mode](count), 'count ' + count + ' doesn\\'t fulfill requirement '\n\t\t\t\t+ DRAW_MODE_CHECKS[mode].toString() + ' for mode ' + DRAW_MODE_NAMES[mode])\n\n\t\t\tif (indexBuffer) {\n\t\t\t\tassert(indexBuffer.hasBeenCompiled)\n\t\t\t\tassert(minVertexBufferLength > indexBuffer.maxValue!)\n\t\t\t\tassert(count % indexBuffer.spacing == 0)\n\t\t\t\tassert(start % indexBuffer.spacing == 0)\n\t\t\t\tif (start + count > indexBuffer.count) {\n\t\t\t\t\tthrow new Error('Buffer not long enough for passed parameters start/length/buffer length' + ' ' + start + ' ' + count + ' ' + indexBuffer.count)\n\t\t\t\t}\n\t\t\t\tgl.bindBuffer(WGL.ELEMENT_ARRAY_BUFFER, indexBuffer.buffer!)\n\t\t\t\t// start parameter has to be multiple of sizeof(WGL.UNSIGNED_SHORT)\n\t\t\t\tgl.drawElements(mode, count, WGL.UNSIGNED_SHORT, 2 * start)\n\t\t\t} else {\n\t\t\t\tif (start + count > minVertexBufferLength) {\n\t\t\t\t\tthrow new Error('invalid')\n\t\t\t\t}\n\t\t\t\tgl.drawArrays(mode, start, count)\n\t\t\t}\n\t\t\tgl.drawCallCount++\n\t\t}\n\n\t\treturn this\n\t}\n}","import {assert, int} from 'ts3dutils'\n\nimport {currentGL, TSGLContext} from './index'\nimport GL = WebGLRenderingContextStrict\nimport GL2 = WebGL2RenderingContext\n\nexport interface TextureOptions {\n\twrap?: GL.TextureWrap // defaults to WGL.CLAMP_TO_EDGE, or set wrapS and wrapT individually.\n\twrapS?: GL.TextureWrap\n\twrapT?: GL.TextureWrap\n\tfilter?: GL.TextureMagFilter // defaults to WGL.LINEAR, or set minFilter and magFilter individually.\n\tminFilter?: GL.TextureMinFilter\n\tmagFilter?: GL.TextureMagFilter\n\tformat?: GL2.TextureFormat // defaults to WGL.RGBA.\n\tinternalFormat?: GL2.TextureInternalFormat\n\ttype?: GL.ReadPixelsType // defaults to WGL.UNSIGNED_BYTE.\n\tdata?: any\n}\n\nexport class Texture {\n\theight: int\n\twidth: int\n\ttexture: WebGLTexture\n\t// e.g. viewerGL.UNSIGNED_BYTE, viewerGL.FLOAT\n\tinternalFormat: GL2.TextureInternalFormat\n\tformat: GL2.TextureFormat\n\t// e.g. viewerGL.RGBA\n\ttype: GL.ReadPixelsType\n\n\t/**\n\t * Provides a simple wrapper around WebGL textures that supports render-to-texture.\n\t *\n\t * The arguments `width` and `height` give the size of the texture in texels.\n\t * WebGL texture dimensions must be powers of two unless `filter` is set to\n\t * either `WGL.NEAREST` or `WGL.LINEAR` and `wrap` is set to `WGL.CLAMP_TO_EDGE`\n\t * (which they are by default).\n\t *\n\t * Texture parameters can be passed in via the `options` argument.\n\t * Example usage:\n\t *\n\t *      let tex = new GL.Texture(256, 256, {\n\t\t *       magFilter: WGL.NEAREST,\n\t\t *       minFilter: WGL.LINEAR,\n\t\t *\n\t\t *       wrapS: WGL.REPEAT,\n\t\t *       wrapT: WGL.REPEAT,\n\t\t *\n\t\t *       format: WGL.RGB, // Defaults to WGL.RGBA\n\t\t *       type: WGL.FLOAT // Defaults to WGL.UNSIGNED_BYTE\n\t\t *     })\n\t *\n\t */\n\tconstructor(width: int, height: int, options: TextureOptions = {}, readonly gl = currentGL()) {\n\t\tthis.width = width\n\t\tthis.height = height\n\t\tthis.format = options.format || gl.RGBA\n\t\tthis.internalFormat = options.internalFormat || gl.RGBA\n\t\tthis.type = options.type || gl.UNSIGNED_BYTE\n\t\tconst magFilter = options.filter || options.magFilter || gl.LINEAR\n\t\tconst minFilter = options.filter || options.minFilter || gl.LINEAR\n\t\tif (this.type === gl.FLOAT) {\n\t\t\tif (gl.version != 2 && !gl.getExtension('OES_texture_float')) {\n\t\t\t\tthrow new Error('OES_texture_float is required but not supported')\n\t\t\t}\n\t\t\tif ((minFilter !== gl.NEAREST || magFilter !== gl.NEAREST) && !gl.getExtension('OES_texture_float_linear')) {\n\t\t\t\tthrow new Error('OES_texture_float_linear is required but not supported')\n\t\t\t}\n\t\t} else if (this.type === gl.HALF_FLOAT_OES) {\n\t\t\tif (!gl.getExtension('OES_texture_half_float')) {\n\t\t\t\tthrow new Error('OES_texture_half_float is required but not supported')\n\t\t\t}\n\t\t\tif ((minFilter !== gl.NEAREST || magFilter !== gl.NEAREST) && !gl.getExtension('OES_texture_half_float_linear')) {\n\t\t\t\tthrow new Error('OES_texture_half_float_linear is required but not supported')\n\t\t\t}\n\t\t}\n\n\t\tthis.texture = gl.createTexture()!\n\t\tgl.bindTexture(gl.TEXTURE_2D, this.texture)\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, magFilter)\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, minFilter)\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, options.wrap || options.wrapS || gl.CLAMP_TO_EDGE)\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, options.wrap || options.wrapT || gl.CLAMP_TO_EDGE)\n\t\tgl.texImage2D(gl.TEXTURE_2D, 0, this.internalFormat as any, width, height, 0, this.format as any, this.type as any, options.data)\n\t}\n\n\tsetData(data: ArrayBufferView) {\n\t\tthis.gl.bindTexture(this.gl.TEXTURE_2D, this.texture)\n\t\tthis.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.format as any, this.width, this.height, 0, this.format as any, this.type as any, data as any)\n\t}\n\n\tbind(unit: int) {\n\t\tthis.gl.activeTexture((this.gl.TEXTURE0 + unit) as GL.TextureUnit)\n\t\tthis.gl.bindTexture(this.gl.TEXTURE_2D, this.texture)\n\t}\n\n\tunbind(unit: int) {\n\t\tthis.gl.activeTexture((this.gl.TEXTURE0 + unit) as GL.TextureUnit)\n\t\tthis.gl.bindTexture(this.gl.TEXTURE_2D, null)\n\t}\n\n\tprivate framebuffer: WebGLFramebuffer | undefined\n\tstatic checkerBoardCanvas: HTMLCanvasElement\n\n\tdrawTo(render: (gl: TSGLContext) => void): void {\n\t\tconst gl = this.gl\n\t\tconst prevFramebuffer = gl.getParameter(gl.FRAMEBUFFER_BINDING)\n\t\tif (!this.framebuffer) {\n\t\t\t// create a renderbuffer for the depth component\n\t\t\tconst prevRenderbuffer = gl.getParameter(gl.RENDERBUFFER_BINDING)\n\t\t\tconst depthRenderbuffer = gl.createRenderbuffer()\n\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, depthRenderbuffer)\n\t\t\t// DEPTH_COMPONENT16 is the only depth format\n\t\t\tgl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, this.width, this.height)\n\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, prevRenderbuffer)\n\n\t\t\t// create a framebuffer to render to\n\t\t\tthis.framebuffer = gl.createFramebuffer()!\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer)\n\t\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture, 0)\n\t\t\tgl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, depthRenderbuffer)\n\t\t\tif (gl.checkFramebufferStatus(gl.FRAMEBUFFER) !== gl.FRAMEBUFFER_COMPLETE) {\n\t\t\t\tthrow new Error('Rendering to this texture is not supported (incomplete this.framebuffer)')\n\t\t\t}\n\t\t} else if (prevFramebuffer !== this.framebuffer) {\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer)\n\t\t}\n\n\t\tconst prevViewport = gl.getParameter(gl.VIEWPORT)\n\n\t\tgl.viewport(0, 0, this.width, this.height)\n\t\trender(gl)\n\n\t\t// restore previous state\n\t\tprevFramebuffer !== this.framebuffer && gl.bindFramebuffer(gl.FRAMEBUFFER, prevFramebuffer)\n\t\tgl.viewport(prevViewport[0], prevViewport[1], prevViewport[2], prevViewport[3])\n\t}\n\n\tswapWith(other: Texture): void {\n\t\tassert(this.gl == other.gl)\n\t\tlet temp\n\t\ttemp = other.texture\n\t\tother.texture = this.texture\n\t\tthis.texture = temp\n\n\t\ttemp = other.width\n\t\tother.width = this.width\n\t\tthis.width = temp\n\n\t\ttemp = other.height\n\t\tother.height = this.height\n\t\tthis.height = temp\n\t}\n\n\t/**\n\t * Return a new texture created from `imgElement`, an `<img>` tag.\n\t */\n\tstatic fromImage(imgElement: HTMLImageElement | HTMLCanvasElement, options: TextureOptions = {}, gl: TSGLContext = currentGL()): Texture {\n\t\tconst texture = new Texture(imgElement.width, imgElement.height, options, gl)\n\t\ttry {\n\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, texture.format as any, texture.format as any, texture.type as any, imgElement)\n\t\t} catch (e) {\n\t\t\tif (location.protocol == 'file:') {\n\t\t\t\tthrow new Error('imgElement not loaded for security reasons (serve this page over \"http://\" instead)')\n\t\t\t} else {\n\t\t\t\tthrow new Error('imgElement not loaded for security reasons (imgElement must originate from the same ' +\n\t\t\t\t\t'domain as this page or use Cross-Origin Resource Sharing)')\n\t\t\t}\n\t\t}\n\t\tif (options.minFilter && options.minFilter != gl.NEAREST && options.minFilter != gl.LINEAR) {\n\t\t\tgl.generateMipmap(gl.TEXTURE_2D)\n\t\t}\n\t\treturn texture\n\t}\n\n\t/**\n\t * Returns a checkerboard texture that will switch to the correct texture when it loads.\n\t */\n\tstatic fromURLSwitch(url: string, options?: TextureOptions, gl = currentGL()): Texture {\n\t\tTexture.checkerBoardCanvas = Texture.checkerBoardCanvas || (function () {\n\t\t\tconst c = document.createElement('canvas').getContext('2d')\n\t\t\tif (!c) throw new Error('Could not create 2d canvas.')\n\t\t\tc.canvas.width = c.canvas.height = 128\n\t\t\tfor (let y = 0; y < c.canvas.height; y += 16) {\n\t\t\t\tfor (let x = 0; x < c.canvas.width; x += 16) {\n\t\t\t\t\t//noinspection JSBitwiseOperatorUsage\n\t\t\t\t\tc.fillStyle = (x ^ y) & 16 ? '#FFF' : '#DDD'\n\t\t\t\t\tc.fillRect(x, y, 16, 16)\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn c.canvas\n\t\t})()\n\t\tconst texture = Texture.fromImage(Texture.checkerBoardCanvas, options)\n\t\tconst image = new Image()\n\t\timage.onload = () => Texture.fromImage(image, options, gl).swapWith(texture)\n\t\t// error event doesn't return a reason. Most likely a 404.\n\t\timage.onerror = () => { throw new Error('Could not load image ' + image.src + '. 404?') }\n\t\timage.src = url\n\t\treturn texture\n\t}\n\n\tstatic fromURL(url: string, options?: TextureOptions, gl = currentGL()): Promise<Texture> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst image = new Image()\n\t\t\timage.onload = () => resolve(Texture.fromImage(image, options, gl))\n\t\t\timage.onerror = () => reject('Could not load image ' + image.src + '. 404?')\n\t\t\timage.src = url\n\t\t})\n\t}\n}","/*\r\n** Copyright (c) 2012 The Khronos Group Inc.\r\n**\r\n** Permission is hereby granted, free of charge, to any person obtaining a\r\n** copy of this software and/or associated documentation files (the\r\n** 'Materials'), to deal in the Materials without restriction, including\r\n** without limitation the rights to use, copy, modify, merge, publish,\r\n** distribute, sublicense, and/or sell copies of the Materials, and to\r\n** permit persons to whom the Materials are furnished to do so, subject to\r\n** the following conditions:\r\n**\r\n** The above copyright notice and this permission notice shall be included\r\n** in all copies or substantial portions of the Materials.\r\n**\r\n** THE MATERIALS ARE PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\n** EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n** MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\n** IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\n** CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\n** TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n** MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.\r\n*/\r\n\r\n\r\n// tslint:disable\r\nimport GL = WebGLRenderingContextStrict\r\n\r\n// Various functions for helping debug WebGL apps.\r\n\r\n/**\r\n * Wrapped logging function.\r\n * @param msg Message to log.\r\n */\r\nfunction log(msg: string) {\r\n\tif (window.console && window.console.log) {\r\n\t\twindow.console.log(msg)\r\n\t}\r\n}\r\n\r\n/**\r\n * Wrapped error logging function.\r\n * @param msg Message to log.\r\n */\r\nfunction error(msg: string) {\r\n\tif (window.console && window.console.error) {\r\n\t\twindow.console.error(msg)\r\n\t} else {\r\n\t\tlog(msg)\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Which arguments are enums based on the number of arguments to the function.\r\n * So\r\n *    'texImage2D': {\r\n *       9: { 0:true, 2:true, 6:true, 7:true },\r\n *       6: { 0:true, 2:true, 3:true, 4:true },\r\n *    },\r\n *\r\n * means if there are 9 arguments then 6 and 7 are enums, if there are 6\r\n * arguments 3 and 4 are enums\r\n *\r\n * @type {!Object.<number, !Object.<number, string>}\r\n */\r\nconst glValidEnumContexts: { [funcName: string]: { [argCount: number]: { [argIndex: number]: boolean | { enumBitwiseOr: string[] } } } } = {\r\n\t// Generic setters and getters\r\n\r\n\t'enable': { 1: { 0: true } },\r\n\t'disable': { 1: { 0: true } },\r\n\t'getParameter': { 1: { 0: true } },\r\n\r\n\t// Rendering\r\n\r\n\t'drawArrays': { 3: { 0: true } },\r\n\t'drawElements': { 4: { 0: true, 2: true } },\r\n\r\n\t// Shaders\r\n\r\n\t'createShader': { 1: { 0: true } },\r\n\t'getShaderParameter': { 2: { 1: true } },\r\n\t'getProgramParameter': { 2: { 1: true } },\r\n\t'getShaderPrecisionFormat': { 2: { 0: true, 1: true } },\r\n\r\n\t// Vertex attributes\r\n\r\n\t'getVertexAttrib': { 2: { 1: true } },\r\n\t'vertexAttribPointer': { 6: { 2: true } },\r\n\r\n\t// Textures\r\n\r\n\t'bindTexture': { 2: { 0: true } },\r\n\t'activeTexture': { 1: { 0: true } },\r\n\t'getTexParameter': { 2: { 0: true, 1: true } },\r\n\t'texParameterf': { 3: { 0: true, 1: true } },\r\n\t'texParameteri': { 3: { 0: true, 1: true, 2: true } },\r\n\t// texImage2D and texSubImage2D are defined below with WebGL 2 entrypoints\r\n\t'copyTexImage2D': { 8: { 0: true, 2: true } },\r\n\t'copyTexSubImage2D': { 8: { 0: true } },\r\n\t'generateMipmap': { 1: { 0: true } },\r\n\t// compressedTexImage2D and compressedTexSubImage2D are defined below with WebGL 2 entrypoints\r\n\r\n\t// Buffer objects\r\n\r\n\t'bindBuffer': { 2: { 0: true } },\r\n\t// bufferData and bufferSubData are defined below with WebGL 2 entrypoints\r\n\t'getBufferParameter': { 2: { 0: true, 1: true } },\r\n\r\n\t// Renderbuffers and framebuffers\r\n\r\n\t'pixelStorei': { 2: { 0: true, 1: true } },\r\n\t// readPixels is defined below with WebGL 2 entrypoints\r\n\t'bindRenderbuffer': { 2: { 0: true } },\r\n\t'bindFramebuffer': { 2: { 0: true } },\r\n\t'checkFramebufferStatus': { 1: { 0: true } },\r\n\t'framebufferRenderbuffer': { 4: { 0: true, 1: true, 2: true } },\r\n\t'framebufferTexture2D': { 5: { 0: true, 1: true, 2: true } },\r\n\t'getFramebufferAttachmentParameter': { 3: { 0: true, 1: true, 2: true } },\r\n\t'getRenderbufferParameter': { 2: { 0: true, 1: true } },\r\n\t'renderbufferStorage': { 4: { 0: true, 1: true } },\r\n\r\n\t// Frame buffer operations (clear, blend, depth test, stencil)\r\n\r\n\t'clear': { 1: { 0: { 'enumBitwiseOr': ['COLOR_BUFFER_BIT', 'DEPTH_BUFFER_BIT', 'STENCIL_BUFFER_BIT'] } } },\r\n\t'depthFunc': { 1: { 0: true } },\r\n\t'blendFunc': { 2: { 0: true, 1: true } },\r\n\t'blendFuncSeparate': { 4: { 0: true, 1: true, 2: true, 3: true } },\r\n\t'blendEquation': { 1: { 0: true } },\r\n\t'blendEquationSeparate': { 2: { 0: true, 1: true } },\r\n\t'stencilFunc': { 3: { 0: true } },\r\n\t'stencilFuncSeparate': { 4: { 0: true, 1: true } },\r\n\t'stencilMaskSeparate': { 2: { 0: true } },\r\n\t'stencilOp': { 3: { 0: true, 1: true, 2: true } },\r\n\t'stencilOpSeparate': { 4: { 0: true, 1: true, 2: true, 3: true } },\r\n\r\n\t// Culling\r\n\r\n\t'cullFace': { 1: { 0: true } },\r\n\t'frontFace': { 1: { 0: true } },\r\n\r\n\t// ANGLE_instanced_arrays extension\r\n\r\n\t'drawArraysInstancedANGLE': { 4: { 0: true } },\r\n\t'drawElementsInstancedANGLE': { 5: { 0: true, 2: true } },\r\n\r\n\t// EXT_blend_minmax extension\r\n\r\n\t'blendEquationEXT': { 1: { 0: true } },\r\n\r\n\t// WebGL 2 Buffer objects\r\n\r\n\t'bufferData': {\r\n\t\t3: { 0: true, 2: true }, // WebGL 1\r\n\t\t4: { 0: true, 2: true }, // WebGL 2\r\n\t\t5: { 0: true, 2: true }  // WebGL 2\r\n\t},\r\n\t'bufferSubData': {\r\n\t\t3: { 0: true }, // WebGL 1\r\n\t\t4: { 0: true }, // WebGL 2\r\n\t\t5: { 0: true }  // WebGL 2\r\n\t},\r\n\t'copyBufferSubData': { 5: { 0: true, 1: true } },\r\n\t'getBufferSubData': { 3: { 0: true }, 4: { 0: true }, 5: { 0: true } },\r\n\r\n\t// WebGL 2 Framebuffer objects\r\n\r\n\t'blitFramebuffer': { 10: { 8: { 'enumBitwiseOr': ['COLOR_BUFFER_BIT', 'DEPTH_BUFFER_BIT', 'STENCIL_BUFFER_BIT'] }, 9: true } },\r\n\t'framebufferTextureLayer': { 5: { 0: true, 1: true } },\r\n\t'invalidateFramebuffer': { 2: { 0: true } },\r\n\t'invalidateSubFramebuffer': { 6: { 0: true } },\r\n\t'readBuffer': { 1: { 0: true } },\r\n\r\n\t// WebGL 2 Renderbuffer objects\r\n\r\n\t'getInternalformatParameter': { 3: { 0: true, 1: true, 2: true } },\r\n\t'renderbufferStorageMultisample': { 5: { 0: true, 2: true } },\r\n\r\n\t// WebGL 2 Texture objects\r\n\r\n\t'texStorage2D': { 5: { 0: true, 2: true } },\r\n\t'texStorage3D': { 6: { 0: true, 2: true } },\r\n\t'texImage2D': {\r\n\t\t9: { 0: true, 2: true, 6: true, 7: true }, // WebGL 1 & 2\r\n\t\t6: { 0: true, 2: true, 3: true, 4: true }, // WebGL 1\r\n\t\t10: { 0: true, 2: true, 6: true, 7: true } // WebGL 2\r\n\t},\r\n\t'texImage3D': {\r\n\t\t10: { 0: true, 2: true, 7: true, 8: true },\r\n\t\t11: { 0: true, 2: true, 7: true, 8: true }\r\n\t},\r\n\t'texSubImage2D': {\r\n\t\t9: { 0: true, 6: true, 7: true }, // WebGL 1 & 2\r\n\t\t7: { 0: true, 4: true, 5: true }, // WebGL 1\r\n\t\t10: { 0: true, 6: true, 7: true } // WebGL 2\r\n\t},\r\n\t'texSubImage3D': {\r\n\t\t11: { 0: true, 8: true, 9: true },\r\n\t\t12: { 0: true, 8: true, 9: true }\r\n\t},\r\n\t'copyTexSubImage3D': { 9: { 0: true } },\r\n\t'compressedTexImage2D': {\r\n\t\t7: { 0: true, 2: true }, // WebGL 1 & 2\r\n\t\t8: { 0: true, 2: true }, // WebGL 2\r\n\t\t9: { 0: true, 2: true }  // WebGL 2\r\n\t},\r\n\t'compressedTexImage3D': {\r\n\t\t8: { 0: true, 2: true },\r\n\t\t9: { 0: true, 2: true },\r\n\t\t10: { 0: true, 2: true }\r\n\t},\r\n\t'compressedTexSubImage2D': {\r\n\t\t8: { 0: true, 6: true }, // WebGL 1 & 2\r\n\t\t9: { 0: true, 6: true }, // WebGL 2\r\n\t\t10: { 0: true, 6: true } // WebGL 2\r\n\t},\r\n\t'compressedTexSubImage3D': {\r\n\t\t10: { 0: true, 8: true },\r\n\t\t11: { 0: true, 8: true },\r\n\t\t12: { 0: true, 8: true }\r\n\t},\r\n\r\n\t// WebGL 2 Vertex attribs\r\n\r\n\t'vertexAttribIPointer': { 5: { 2: true } },\r\n\r\n\t// WebGL 2 Writing to the drawing buffer\r\n\r\n\t'drawArraysInstanced': { 4: { 0: true } },\r\n\t'drawElementsInstanced': { 5: { 0: true, 2: true } },\r\n\t'drawRangeElements': { 6: { 0: true, 4: true } },\r\n\r\n\t// WebGL 2 Reading back pixels\r\n\r\n\t'readPixels': {\r\n\t\t7: { 4: true, 5: true }, // WebGL 1 & 2\r\n\t\t8: { 4: true, 5: true }  // WebGL 2\r\n\t},\r\n\r\n\t// WebGL 2 Multiple Render Targets\r\n\r\n\t'clearBufferfv': { 3: { 0: true }, 4: { 0: true } },\r\n\t'clearBufferiv': { 3: { 0: true }, 4: { 0: true } },\r\n\t'clearBufferuiv': { 3: { 0: true }, 4: { 0: true } },\r\n\t'clearBufferfi': { 4: { 0: true } },\r\n\r\n\t// WebGL 2 Query objects\r\n\r\n\t'beginQuery': { 2: { 0: true } },\r\n\t'endQuery': { 1: { 0: true } },\r\n\t'getQuery': { 2: { 0: true, 1: true } },\r\n\t'getQueryParameter': { 2: { 1: true } },\r\n\r\n\t// WebGL 2 Sampler objects\r\n\r\n\t'samplerParameteri': { 3: { 1: true, 2: true } },\r\n\t'samplerParameterf': { 3: { 1: true } },\r\n\t'getSamplerParameter': { 2: { 1: true } },\r\n\r\n\t// WebGL 2 Sync objects\r\n\r\n\t'fenceSync': { 2: { 0: true, 1: { 'enumBitwiseOr': [] } } },\r\n\t'clientWaitSync': { 3: { 1: { 'enumBitwiseOr': ['SYNC_FLUSH_COMMANDS_BIT'] } } },\r\n\t'waitSync': { 3: { 1: { 'enumBitwiseOr': [] } } },\r\n\t'getSyncParameter': { 2: { 1: true } },\r\n\r\n\t// WebGL 2 Transform Feedback\r\n\r\n\t'bindTransformFeedback': { 2: { 0: true } },\r\n\t'beginTransformFeedback': { 1: { 0: true } },\r\n\t'transformFeedbackVaryings': { 3: { 2: true } },\r\n\r\n\t// WebGL2 Uniform Buffer Objects and Transform Feedback Buffers\r\n\r\n\t'bindBufferBase': { 3: { 0: true } },\r\n\t'bindBufferRange': { 5: { 0: true } },\r\n\t'getIndexedParameter': { 2: { 0: true } },\r\n\t'getActiveUniforms': { 3: { 2: true } },\r\n\t'getActiveUniformBlockParameter': { 3: { 2: true } }\r\n}\r\n\r\n/**\r\n * Map of numbers to names.\r\n * @type {Object}\r\n */\r\nlet glEnums: { [k: number]: string } = null as any\r\n\r\n/**\r\n * Map of names to numbers.\r\n * @type {Object}\r\n */\r\nlet enumStringToValue: { [k: string]: GL.GLenum<string> } = null as any\r\n\r\n/**\r\n * Initializes this module. Safe to call more than once.\r\n * @param ctx A WebGL context. If\r\n *    you have more than one context it doesn't matter which one\r\n *    you pass in, it is only used to pull out constants.\r\n */\r\nexport function init() {\r\n\tif (null === glEnums) {\r\n\t\tglEnums = {}\r\n\t\tenumStringToValue = {}\r\n\t\tconst c = (window as any).WebGL2RenderingContext || (window as any).WebGLRenderingContext\r\n\t\tif (!c) throw new Error('Neither WebGL2RenderingContext nor WebGLRenderingContext exists on window.')\r\n\t\tfor (const propertyName in c) {\r\n\t\t\tconst prop = c[propertyName]\r\n\t\t\tif ('number' === typeof prop) {\r\n\t\t\t\tglEnums[prop] = propertyName\r\n\t\t\t\tenumStringToValue[propertyName] = prop as any\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Returns true or false if value matches any WebGL enum\r\n * @param value Value to check if it might be an enum.\r\n * @return True if value matches one of the WebGL defined enums\r\n */\r\nexport function mightBeEnum(value: number): boolean {\r\n\tinit()\r\n\treturn (glEnums[value] !== undefined)\r\n}\r\n\r\n/**\r\n * Gets an string version of an WebGL enum.\r\n *\r\n * Example:\r\n *   var str = WebGLDebugUtil.glEnumToString(ctx.getError())\r\n *\r\n * @param value Value to return an enum for\r\n * @return The string version of the enum.\r\n */\r\nexport function glEnumToString(value: GL.GLenum<string>): string {\r\n\tinit()\r\n\tvar name = glEnums[value as any]\r\n\treturn (name !== undefined) ? ('gl.' + name) :\r\n\t\t('/*UNKNOWN WebGL ENUM*/ 0x' + (value as any).toString(16) + '')\r\n}\r\n\r\n/**\r\n * Converts the argument of a WebGL function to a string.\r\n * Attempts to convert enum arguments to strings.\r\n *\r\n * Example:\r\n *   WebGLDebugUtil.init(ctx)\r\n *   var str = WebGLDebugUtil.glFunctionArgToString('bindTexture', 2, 0, gl.TEXTURE_2D)\r\n *\r\n * would return 'TEXTURE_2D'\r\n *\r\n * @param functionName the name of the WebGL function.\r\n * @param numArgs the number of arguments passed to the function.\r\n * @param argumentIndex the index of the argument.\r\n * @param value The value of the argument.\r\n * @return The value as a string.\r\n */\r\nexport function glFunctionArgToString(functionName: string, numArgs: number, argumentIndex: number, value: any): string {\r\n\tconst funcInfo = glValidEnumContexts[functionName]\r\n\tif (funcInfo !== undefined) {\r\n\t\tconst funcOverloadInfo = funcInfo[numArgs]\r\n\t\tif (funcOverloadInfo !== undefined) {\r\n\t\t\tconst argInfo = funcOverloadInfo[argumentIndex]\r\n\t\t\tif (argInfo) {\r\n\t\t\t\tif (typeof argInfo === 'object') {\r\n\t\t\t\t\tconst enums = argInfo.enumBitwiseOr\r\n\t\t\t\t\tconst orEnums = []\r\n\t\t\t\t\tlet orResult = 0\r\n\t\t\t\t\tfor (let i = 0; i < enums.length; ++i) {\r\n\t\t\t\t\t\tconst enumValue = enumStringToValue[enums[i]]\r\n\t\t\t\t\t\tif ((value & enumValue) !== 0) {\r\n\t\t\t\t\t\t\torResult |= enumValue\r\n\t\t\t\t\t\t\torEnums.push(glEnumToString(enumValue))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (orResult === value) {\r\n\t\t\t\t\t\treturn orEnums.join(' | ')\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn glEnumToString(value)\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn glEnumToString(value)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (value === null) {\r\n\t\treturn 'null'\r\n\t} else if (value === undefined) {\r\n\t\treturn 'undefined'\r\n\t} else {\r\n\t\treturn value.toString()\r\n\t}\r\n}\r\n\r\n/**\r\n * Converts the arguments of a WebGL function to a string.\r\n * Attempts to convert enum arguments to strings.\r\n *\r\n * @param functionName the name of the WebGL function.\r\n * @param args The arguments.\r\n * @return The arguments as a string.\r\n */\r\nexport function glFunctionArgsToString(functionName: string, args: number[]): string {\r\n\t// apparently we can't do args.join(',')\r\n\tvar argStr = ''\r\n\tvar numArgs = args.length\r\n\tfor (var ii = 0; ii < numArgs; ++ii) {\r\n\t\targStr += ((ii == 0) ? '' : ', ') +\r\n\t\t\tglFunctionArgToString(functionName, numArgs, ii, args[ii])\r\n\t}\r\n\treturn argStr\r\n}\r\n\r\n\r\nfunction makePropertyWrapper(wrapper:any , original: any, propertyName: string) {\r\n\t//log('wrap prop: ' + propertyName)\r\n\twrapper.__defineGetter__(propertyName, function () {\r\n\t\treturn original[propertyName]\r\n\t})\r\n\t// TODO(gmane): this needs to handle properties that take more than\r\n\t// one value?\r\n\twrapper.__defineSetter__(propertyName, function (value: any) {\r\n\t\t//log('set: ' + propertyName)\r\n\t\toriginal[propertyName] = value\r\n\t})\r\n}\r\n\r\n/**\r\n * Given a WebGL context returns a wrapped context that calls\r\n * gl.getError after every command and calls a function if the\r\n * result is not NO_ERROR.\r\n *\r\n * You can supply your own function if you want. For example, if you'd like\r\n * an exception thrown on any GL error you could do this\r\n *\r\n *    function throwOnGLError(err, funcName, args) {\r\n *      throw new Error(WebGLDebugUtils.glEnumToString(err) +\r\n *            ' was caused by call to ' + funcName)\r\n *    }\r\n *\r\n *    ctx = WebGLDebugUtils.makeDebugContext(\r\n *        canvas.getContext('webgl'), throwOnGLError)\r\n *\r\n * @param ctx The webgl context to wrap.\r\n * @param opt_onErrorFunc The function\r\n *     to call when gl.getError returns an error. If not specified the default\r\n *     function calls console.log with a message.\r\n * @param opt_onFunc The\r\n *     function to call when each webgl function is called. You\r\n *     can use this to log all calls for example.\r\n * @param opt_err_ctx The webgl context\r\n *        to call getError on if different than ctx.\r\n */\r\nexport function makeDebugContext(\r\n\tctx: WebGLRenderingContextStrict,\r\n\topt_onErrorFunc?: (err: GL.Error, funcName: string, args: any[]) => void,\r\n\topt_onFunc?: (funcName: string, args: any[]) => void,\r\n\topt_err_ctx: WebGLRenderingContextStrict = ctx\r\n): WebGLRenderingContext {\r\n\tinit()\r\n\topt_onErrorFunc = opt_onErrorFunc || function (err, functionName, args) {\r\n\t\t// apparently we can't do args.join(',')\r\n\t\tvar argStr = ''\r\n\t\tvar numArgs = args.length\r\n\t\tfor (let i = 0; i < numArgs; ++i) {\r\n\t\t\targStr += ((i == 0) ? '' : ', ') +\r\n\t\t\t\tglFunctionArgToString(functionName, numArgs, i, args[i])\r\n\t\t}\r\n\t\terror('WebGL error ' + glEnumToString(err) + ' in ' + functionName +\r\n\t\t\t'(' + argStr + ')')\r\n\t}\r\n\r\n\t// Holds booleans for each GL error so after we get the error ourselves\r\n\t// we can still return it to the client app.\r\n\tconst glErrorShadow: { [k: number]: boolean } = {}\r\n\r\n\t// Makes a function that calls a WebGL function and then calls getError.\r\n\tfunction makeErrorWrapper(ctx: WebGLRenderingContextStrict, functionName: string) {\r\n\t\treturn function (...args: any[]) {\r\n\t\t\tif (opt_onFunc) {\r\n\t\t\t\topt_onFunc(functionName, args)\r\n\t\t\t}\r\n\t\t\tconst result = (ctx as any)[functionName].apply(ctx, args)\r\n\t\t\tconst err = opt_err_ctx.getError()\r\n\t\t\tif (err != 0) {\r\n\t\t\t\tglErrorShadow[err] = true\r\n\t\t\t\topt_onErrorFunc!(err, functionName, args)\r\n\t\t\t}\r\n\t\t\treturn result\r\n\t\t}\r\n\t}\r\n\r\n\t// Make a an object that has a copy of every property of the WebGL context\r\n\t// but wraps all functions.\r\n\tconst wrapper: any = {}\r\n\tfor (let propertyName in ctx) {\r\n\t\tconst prop = ctx[propertyName as keyof WebGLRenderingContextStrict]\r\n\t\tif ('function' === typeof prop) {\r\n\t\t\tif (propertyName != 'getExtension') {\r\n\t\t\t\twrapper[propertyName] = makeErrorWrapper(ctx, propertyName)\r\n\t\t\t} else {\r\n\t\t\t\tlet wrapped = makeErrorWrapper(ctx, propertyName)\r\n\t\t\t\twrapper[propertyName as any] = function () {\r\n\t\t\t\t\tconst result = wrapped.apply(ctx, arguments)\r\n\t\t\t\t\tif (!result) {\r\n\t\t\t\t\t\treturn null\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn makeDebugContext(result, opt_onErrorFunc, opt_onFunc, opt_err_ctx)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tmakePropertyWrapper(wrapper, ctx, propertyName)\r\n\t\t}\r\n\t}\r\n\r\n\t// Override the getError function with one that returns our saved results.\r\n\twrapper.getError = function () {\r\n\t\tfor (const err in glErrorShadow) {\r\n\t\t\tif (glErrorShadow.hasOwnProperty(err)) {\r\n\t\t\t\tif (glErrorShadow[err]) {\r\n\t\t\t\t\tglErrorShadow[err] = false\r\n\t\t\t\t\treturn parseInt(err)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn ctx.NO_ERROR\r\n\t}\r\n\r\n\treturn wrapper\r\n}\r\nexport function isWebGL2RenderingContext(o: any): o is WebGL2RenderingContext {\r\n\treturn !!o.createTransformFeedback\r\n}\r\n/**\r\n * Resets a context to the initial state.\r\n * @param ctx The webgl context to\r\n *     reset.\r\n */\r\nexport function resetToInitialState(ctx2: WebGL2RenderingContext | WebGLRenderingContextStrict) {\r\n\r\n\tif (isWebGL2RenderingContext(ctx2)) {\r\n\t\tctx2.bindVertexArray(null)\r\n\t}\r\n\r\n\tconst numAttribs = ctx2.getParameter(ctx2.MAX_VERTEX_ATTRIBS)\r\n\tconst tmp = ctx2.createBuffer()\r\n\tctx2.bindBuffer(ctx2.ARRAY_BUFFER, tmp)\r\n\tfor (let ii = 0; ii < numAttribs; ++ii) {\r\n\t\tctx2.disableVertexAttribArray(ii)\r\n\t\tctx2.vertexAttribPointer(ii, 4, ctx2.FLOAT, false, 0, 0)\r\n\t\tctx2.vertexAttrib1f(ii, 0)\r\n\t\tif (isWebGL2RenderingContext(ctx2)) {\r\n\t\t\tctx2.vertexAttribDivisor(ii, 0)\r\n\t\t}\r\n\t}\r\n\tctx2.deleteBuffer(tmp)\r\n\r\n\tconst numTextureUnits = ctx2.getParameter(ctx2.MAX_TEXTURE_IMAGE_UNITS)\r\n\tfor (let ii = 0; ii < numTextureUnits; ++ii) {\r\n\t\tctx2.activeTexture((ctx2.TEXTURE0 + ii) as GL.TextureUnit)\r\n\t\tctx2.bindTexture(ctx2.TEXTURE_CUBE_MAP, null)\r\n\t\tctx2.bindTexture(ctx2.TEXTURE_2D, null)\r\n\t\tif (isWebGL2RenderingContext(ctx2)) {\r\n\t\t\tctx2.bindTexture(ctx2.TEXTURE_2D_ARRAY, null)\r\n\t\t\tctx2.bindTexture(ctx2.TEXTURE_3D, null)\r\n\t\t\tctx2.bindSampler(ii, null)\r\n\t\t}\r\n\t}\r\n\r\n\tctx2.activeTexture(ctx2.TEXTURE0)\r\n\tctx2.useProgram(null)\r\n\tctx2.bindBuffer(ctx2.ARRAY_BUFFER, null)\r\n\tctx2.bindBuffer(ctx2.ELEMENT_ARRAY_BUFFER, null)\r\n\tctx2.bindFramebuffer(ctx2.FRAMEBUFFER, null)\r\n\tctx2.bindRenderbuffer(ctx2.RENDERBUFFER, null)\r\n\tctx2.disable(ctx2.BLEND)\r\n\tctx2.disable(ctx2.CULL_FACE)\r\n\tctx2.disable(ctx2.DEPTH_TEST)\r\n\tctx2.disable(ctx2.DITHER)\r\n\tctx2.disable(ctx2.SCISSOR_TEST)\r\n\tctx2.blendColor(0, 0, 0, 0)\r\n\tctx2.blendEquation(ctx2.FUNC_ADD)\r\n\tctx2.blendFunc(ctx2.ONE, ctx2.ZERO)\r\n\tctx2.clearColor(0, 0, 0, 0)\r\n\tctx2.clearDepth(1)\r\n\tctx2.clearStencil(-1)\r\n\tctx2.colorMask(true, true, true, true)\r\n\tctx2.cullFace(ctx2.BACK)\r\n\tctx2.depthFunc(ctx2.LESS)\r\n\tctx2.depthMask(true)\r\n\tctx2.depthRange(0, 1)\r\n\tctx2.frontFace(ctx2.CCW)\r\n\tctx2.hint(ctx2.GENERATE_MIPMAP_HINT, ctx2.DONT_CARE)\r\n\tctx2.lineWidth(1)\r\n\tctx2.pixelStorei(ctx2.PACK_ALIGNMENT, 4)\r\n\tctx2.pixelStorei(ctx2.UNPACK_ALIGNMENT, 4)\r\n\tctx2.pixelStorei(ctx2.UNPACK_FLIP_Y_WEBGL, false)\r\n\tctx2.pixelStorei(ctx2.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false)\r\n\tctx2.pixelStorei(ctx2.UNPACK_COLORSPACE_CONVERSION_WEBGL, ctx2.BROWSER_DEFAULT_WEBGL)\r\n\tctx2.polygonOffset(0, 0)\r\n\tctx2.sampleCoverage(1, false)\r\n\tctx2.scissor(0, 0, ctx2.canvas.width, ctx2.canvas.height)\r\n\tctx2.stencilFunc(ctx2.ALWAYS, 0, 0xFFFFFFFF)\r\n\tctx2.stencilMask(0xFFFFFFFF)\r\n\tctx2.stencilOp(ctx2.KEEP, ctx2.KEEP, ctx2.KEEP)\r\n\tctx2.viewport(0, 0, ctx2.canvas.width, ctx2.canvas.height)\r\n\tctx2.clear(ctx2.COLOR_BUFFER_BIT | ctx2.DEPTH_BUFFER_BIT | ctx2.STENCIL_BUFFER_BIT)\r\n\r\n\tif (isWebGL2RenderingContext(ctx2)) {\r\n\t\tctx2.drawBuffers([ctx2.BACK])\r\n\t\tctx2.readBuffer(ctx2.BACK)\r\n\t\tctx2.bindBuffer(ctx2.COPY_READ_BUFFER, null)\r\n\t\tctx2.bindBuffer(ctx2.COPY_WRITE_BUFFER, null)\r\n\t\tctx2.bindBuffer(ctx2.PIXEL_PACK_BUFFER, null)\r\n\t\tctx2.bindBuffer(ctx2.PIXEL_UNPACK_BUFFER, null)\r\n\t\tconst numTransformFeedbacks = ctx2.getParameter(ctx2.MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS)\r\n\t\tfor (let ii = 0; ii < numTransformFeedbacks; ++ii) {\r\n\t\t\tctx2.bindBufferBase(ctx2.TRANSFORM_FEEDBACK_BUFFER, ii, null)\r\n\t\t}\r\n\t\tconst numUBOs = ctx2.getParameter(ctx2.MAX_UNIFORM_BUFFER_BINDINGS)\r\n\t\tfor (let ii = 0; ii < numUBOs; ++ii) {\r\n\t\t\tctx2.bindBufferBase(ctx2.UNIFORM_BUFFER, ii, null)\r\n\t\t}\r\n\t\tctx2.disable(ctx2.RASTERIZER_DISCARD)\r\n\t\tctx2.pixelStorei(ctx2.UNPACK_IMAGE_HEIGHT, 0)\r\n\t\tctx2.pixelStorei(ctx2.UNPACK_SKIP_IMAGES, 0)\r\n\t\tctx2.pixelStorei(ctx2.UNPACK_ROW_LENGTH, 0)\r\n\t\tctx2.pixelStorei(ctx2.UNPACK_SKIP_ROWS, 0)\r\n\t\tctx2.pixelStorei(ctx2.UNPACK_SKIP_PIXELS, 0)\r\n\t\tctx2.pixelStorei(ctx2.PACK_ROW_LENGTH, 0)\r\n\t\tctx2.pixelStorei(ctx2.PACK_SKIP_ROWS, 0)\r\n\t\tctx2.pixelStorei(ctx2.PACK_SKIP_PIXELS, 0)\r\n\t\tctx2.hint(ctx2.FRAGMENT_SHADER_DERIVATIVE_HINT, ctx2.DONT_CARE)\r\n\t}\r\n\r\n\t// TODO: This should NOT be needed but Firefox fails with 'hint'\r\n\twhile (ctx2.getError()) {}\r\n}\r\n\r\n/**\r\n * Given a canvas element returns a wrapped canvas element that will\r\n * simulate lost context. The canvas returned adds the following functions.\r\n *\r\n * loseContext:\r\n *   simulates a lost context event.\r\n *\r\n * restoreContext:\r\n *   simulates the context being restored.\r\n *\r\n * lostContextInNCalls:\r\n *   loses the context after N gl calls.\r\n *\r\n * getNumCalls:\r\n *   tells you how many gl calls there have been so far.\r\n *\r\n * setRestoreTimeout:\r\n *   sets the number of milliseconds until the context is restored\r\n *   after it has been lost. Defaults to 0. Pass -1 to prevent\r\n *   automatic restoring.\r\n *\r\n * @param canvas The canvas element to wrap.\r\n */\r\nexport function makeLostContextSimulatingCanvas(canvas: HTMLCanvasElement) {\r\n\tconst canvas2 = canvas as any\r\n\tlet unwrappedContext_: any\r\n\tconst onLost_: WebGLContextEventListener[] = []\r\n\tconst onRestored_: WebGLContextEventListener[] = []\r\n\tlet wrappedContext_: any = {}\r\n\tlet contextId_ = 1\r\n\tlet contextLost_ = false\r\n\t// const resourceId_ = 0\r\n\tconst resourceDb_: WebGLObject[] = []\r\n\tlet numCallsToLoseContext_ = 0\r\n\tlet numCalls_ = 0\r\n\tlet canRestore_ = false\r\n\tlet restoreTimeout_ = 0\r\n\r\n\t// Holds booleans for each GL error so can simulate errors.\r\n\tconst glErrorShadow_: { [e: number]: boolean } = {}\r\n\r\n\tcanvas2.getContext = function (f) {\r\n\t\treturn function () {\r\n\t\t\tconst ctx = f.apply(canvas2, arguments)\r\n\t\t\t// Did we get a context and is it a WebGL context?\r\n\t\t\t\t// @ts-ignore\r\n\t\t\tif ((ctx instanceof WebGLRenderingContext) || (window.WebGL2RenderingContext && (ctx instanceof WebGL2RenderingContext))) {\r\n\t\t\t\tif (ctx != unwrappedContext_) {\r\n\t\t\t\t\tif (unwrappedContext_) {\r\n\t\t\t\t\t\tthrow new Error('got different context')\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\tisWebGL2RenderingContext = window.WebGL2RenderingContext && (ctx instanceof WebGL2RenderingContext)\r\n\t\t\t\t\tunwrappedContext_ = ctx\r\n\t\t\t\t\twrappedContext_ = makeLostContextSimulatingContext(unwrappedContext_)\r\n\t\t\t\t}\r\n\t\t\t\treturn wrappedContext_\r\n\t\t\t}\r\n\t\t\treturn ctx\r\n\t\t}\r\n\t}(canvas2.getContext)\r\n\r\n\tfunction wrapEvent(listener: WebGLContextEventListener | { handleEvent: WebGLContextEventListener }) {\r\n\t\tif (typeof (listener) == 'function') {\r\n\t\t\treturn listener\r\n\t\t} else {\r\n\t\t\treturn function (e: CustomWebGLContextEvent) {\r\n\t\t\t\tlistener.handleEvent(e)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction addOnContextLostListener(listener: WebGLContextEventListener | { handleEvent: WebGLContextEventListener }) {\r\n\t\tonLost_.push(wrapEvent(listener))\r\n\t}\r\n\r\n\tfunction addOnContextRestoredListener(listener: WebGLContextEventListener | { handleEvent: WebGLContextEventListener }) {\r\n\t\tonRestored_.push(wrapEvent(listener))\r\n\t}\r\n\r\n\r\n\tfunction wrapAddEventListener(canvas: HTMLCanvasElement) {\r\n\t\tconst f = canvas.addEventListener\r\n\t\tcanvas.addEventListener = function (type: string, listener: any) {\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase 'webglcontextlost':\r\n\t\t\t\t\taddOnContextLostListener(listener)\r\n\t\t\t\t\tbreak\r\n\t\t\t\tcase 'webglcontextrestored':\r\n\t\t\t\t\taddOnContextRestoredListener(listener)\r\n\t\t\t\t\tbreak\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tf.apply(canvas, arguments)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\twrapAddEventListener(canvas2)\r\n\r\n\tcanvas2.loseContext = function () {\r\n\t\tif (!contextLost_) {\r\n\t\t\tcontextLost_ = true\r\n\t\t\tnumCallsToLoseContext_ = 0\r\n\t\t\t++contextId_\r\n\t\t\twhile (unwrappedContext_.getError())\r\n\t\t\t\tclearErrors()\r\n\t\t\tglErrorShadow_[unwrappedContext_.CONTEXT_LOST_WEBGL] = true\r\n\t\t\tconst event = makeWebGLContextEvent('context lost')\r\n\t\t\tconst callbacks = onLost_.slice()\r\n\t\t\tsetTimeout(function () {\r\n\t\t\t\t//log('numCallbacks:' + callbacks.length)\r\n\t\t\t\tfor (let ii = 0; ii < callbacks.length; ++ii) {\r\n\t\t\t\t\t//log('calling callback:' + ii)\r\n\t\t\t\t\tcallbacks[ii](event)\r\n\t\t\t\t}\r\n\t\t\t\tif (restoreTimeout_ >= 0) {\r\n\t\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t\tcanvas2.restoreContext()\r\n\t\t\t\t\t}, restoreTimeout_)\r\n\t\t\t\t}\r\n\t\t\t}, 0)\r\n\t\t}\r\n\t}\r\n\r\n\tcanvas2.restoreContext = function () {\r\n\t\tif (contextLost_) {\r\n\t\t\tif (onRestored_.length) {\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tif (!canRestore_) {\r\n\t\t\t\t\t\tthrow new Error('can not restore. webglcontestlost listener did not call event.preventDefault')\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfreeResources()\r\n\t\t\t\t\tresetToInitialState(unwrappedContext_)\r\n\t\t\t\t\tcontextLost_ = false\r\n\t\t\t\t\tnumCalls_ = 0\r\n\t\t\t\t\tcanRestore_ = false\r\n\t\t\t\t\tconst callbacks = onRestored_.slice()\r\n\t\t\t\t\tconst event = makeWebGLContextEvent('context restored')\r\n\t\t\t\t\tfor (let ii = 0; ii < callbacks.length; ++ii) {\r\n\t\t\t\t\t\tcallbacks[ii](event)\r\n\t\t\t\t\t}\r\n\t\t\t\t}, 0)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tcanvas2.loseContextInNCalls = function (numCalls: number) {\r\n\t\tif (contextLost_) {\r\n\t\t\tthrow new Error('You can not ask a lost context to be lost')\r\n\t\t}\r\n\t\tnumCallsToLoseContext_ = numCalls_ + numCalls\r\n\t}\r\n\r\n\tcanvas2.getNumCalls = function () {\r\n\t\treturn numCalls_\r\n\t}\r\n\r\n\tcanvas2.setRestoreTimeout = function (timeout: number) {\r\n\t\trestoreTimeout_ = timeout\r\n\t}\r\n\r\n\tfunction isWebGLObject(obj: any): obj is WebGLObject {\r\n\t\t//return false\r\n\t\treturn (obj instanceof WebGLBuffer ||\r\n\t\t\tobj instanceof WebGLFramebuffer ||\r\n\t\t\tobj instanceof WebGLProgram ||\r\n\t\t\tobj instanceof WebGLRenderbuffer ||\r\n\t\t\tobj instanceof WebGLShader ||\r\n\t\t\tobj instanceof WebGLTexture)\r\n\t}\r\n\r\n\tfunction checkResources(args: any[]) {\r\n\t\tfor (let i = 0; i < args.length; ++i) {\r\n\t\t\tconst arg = args[i]\r\n\t\t\tif (isWebGLObject(arg)) {\r\n\t\t\t\treturn (arg as any).__webglDebugContextLostId__ == contextId_\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true\r\n\t}\r\n\r\n\tfunction clearErrors() {\r\n\t\tconst k = Object.keys(glErrorShadow_) as any as number[]\r\n\t\tfor (let i = 0; i < k.length; ++i) {\r\n\t\t\tdelete glErrorShadow_[k[i]]\r\n\t\t}\r\n\t}\r\n\r\n\tfunction loseContextIfTime() {\r\n\t\t++numCalls_\r\n\t\tif (!contextLost_) {\r\n\t\t\tif (numCallsToLoseContext_ == numCalls_) {\r\n\t\t\t\tcanvas2.loseContext()\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Makes a function that simulates WebGL when out of context.\r\n\tfunction makeLostContextFunctionWrapper(ctx: WebGLRenderingContext, functionName: string) {\r\n\t\tconst f = (ctx as any)[functionName]\r\n\t\treturn function () {\r\n\t\t\t// log('calling:' + functionName)\r\n\t\t\t// Only call the functions if the context is not lost.\r\n\t\t\tloseContextIfTime()\r\n\t\t\tif (!contextLost_) {\r\n\t\t\t\t//if (!checkResources(arguments)) {\r\n\t\t\t\t//  glErrorShadow_[wrappedContext_.INVALID_OPERATION] = true\r\n\t\t\t\t//  return\r\n\t\t\t\t//}\r\n\t\t\t\tconst result = f.apply(ctx, arguments)\r\n\t\t\t\treturn result\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction freeResources() {\r\n\t\tfor (let ii = 0; ii < resourceDb_.length; ++ii) {\r\n\t\t\tconst resource = resourceDb_[ii]\r\n\t\t\tif (resource instanceof WebGLBuffer) {\r\n\t\t\t\tunwrappedContext_.deleteBuffer(resource)\r\n\t\t\t} else if (resource instanceof WebGLFramebuffer) {\r\n\t\t\t\tunwrappedContext_.deleteFramebuffer(resource)\r\n\t\t\t} else if (resource instanceof WebGLProgram) {\r\n\t\t\t\tunwrappedContext_.deleteProgram(resource)\r\n\t\t\t} else if (resource instanceof WebGLRenderbuffer) {\r\n\t\t\t\tunwrappedContext_.deleteRenderbuffer(resource)\r\n\t\t\t} else if (resource instanceof WebGLShader) {\r\n\t\t\t\tunwrappedContext_.deleteShader(resource)\r\n\t\t\t} else if (resource instanceof WebGLTexture) {\r\n\t\t\t\tunwrappedContext_.deleteTexture(resource)\r\n\t\t\t}\r\n\t\t\telse if (isWebGL2RenderingContext) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tif (resource instanceof WebGLQuery) {\r\n\t\t\t\t\tunwrappedContext_.deleteQuery(resource)\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t} else if (resource instanceof WebGLSampler) {\r\n\t\t\t\t\tunwrappedContext_.deleteSampler(resource)\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t} else if (resource instanceof WebGLSync) {\r\n\t\t\t\t\tunwrappedContext_.deleteSync(resource)\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t} else if (resource instanceof WebGLTransformFeedback) {\r\n\t\t\t\t\tunwrappedContext_.deleteTransformFeedback(resource)\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t} else if (resource instanceof WebGLVertexArrayObject) {\r\n\t\t\t\t\tunwrappedContext_.deleteVertexArray(resource)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tinterface CustomWebGLContextEvent {statusMessage: string, preventDefault: () => void}\r\n\ttype WebGLContextEventListener = (e: CustomWebGLContextEvent) => void\r\n\tfunction makeWebGLContextEvent(statusMessage: string): CustomWebGLContextEvent {\r\n\t\treturn {\r\n\t\t\tstatusMessage: statusMessage,\r\n\t\t\tpreventDefault: function () {\r\n\t\t\t\tcanRestore_ = true\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn canvas2\r\n\r\n\tfunction makeLostContextSimulatingContext(ctx: WebGLRenderingContext) {\r\n\t\t// copy all functions and properties to wrapper\r\n\t\tfor (const propertyName in ctx) {\r\n\t\t\tif (typeof (ctx as any)[propertyName] == 'function') {\r\n\t\t\t\twrappedContext_[propertyName] = makeLostContextFunctionWrapper(\r\n\t\t\t\t\tctx, propertyName)\r\n\t\t\t} else {\r\n\t\t\t\tmakePropertyWrapper(wrappedContext_, ctx, propertyName)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Wrap a few functions specially.\r\n\t\twrappedContext_.getError = function () {\r\n\t\t\tloseContextIfTime()\r\n\t\t\tif (!contextLost_) {\r\n\t\t\t\tlet err\r\n\t\t\t\twhile (err = unwrappedContext_.getError()) {\r\n\t\t\t\t\tglErrorShadow_[err] = true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (const err in glErrorShadow_) {\r\n\t\t\t\tif (glErrorShadow_[err]) {\r\n\t\t\t\t\tdelete glErrorShadow_[err]\r\n\t\t\t\t\treturn err\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn wrappedContext_.NO_ERROR\r\n\t\t}\r\n\r\n\t\tconst creationFunctions = [\r\n\t\t\t'createBuffer',\r\n\t\t\t'createFramebuffer',\r\n\t\t\t'createProgram',\r\n\t\t\t'createRenderbuffer',\r\n\t\t\t'createShader',\r\n\t\t\t'createTexture'\r\n\t\t]\r\n\t\tif (isWebGL2RenderingContext) {\r\n\t\t\tcreationFunctions.push(\r\n\t\t\t\t'createQuery',\r\n\t\t\t\t'createSampler',\r\n\t\t\t\t'fenceSync',\r\n\t\t\t\t'createTransformFeedback',\r\n\t\t\t\t'createVertexArray'\r\n\t\t\t)\r\n\t\t}\r\n\t\tfor (let i = 0; i < creationFunctions.length; ++i) {\r\n\t\t\tconst functionName = creationFunctions[i]\r\n\t\t\twrappedContext_[functionName] = function (f) {\r\n\t\t\t\treturn function () {\r\n\t\t\t\t\tloseContextIfTime()\r\n\t\t\t\t\tif (contextLost_) {\r\n\t\t\t\t\t\treturn null\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst obj = f.apply(ctx, arguments)\r\n\t\t\t\t\tobj.__webglDebugContextLostId__ = contextId_\r\n\t\t\t\t\tresourceDb_.push(obj)\r\n\t\t\t\t\treturn obj\r\n\t\t\t\t}\r\n\t\t\t}((ctx as any)[functionName])\r\n\t\t}\r\n\r\n\t\tconst functionsThatShouldReturnNull = [\r\n\t\t\t'getActiveAttrib',\r\n\t\t\t'getActiveUniform',\r\n\t\t\t'getBufferParameter',\r\n\t\t\t'getContextAttributes',\r\n\t\t\t'getAttachedShaders',\r\n\t\t\t'getFramebufferAttachmentParameter',\r\n\t\t\t'getParameter',\r\n\t\t\t'getProgramParameter',\r\n\t\t\t'getProgramInfoLog',\r\n\t\t\t'getRenderbufferParameter',\r\n\t\t\t'getShaderParameter',\r\n\t\t\t'getShaderInfoLog',\r\n\t\t\t'getShaderSource',\r\n\t\t\t'getTexParameter',\r\n\t\t\t'getUniform',\r\n\t\t\t'getUniformLocation',\r\n\t\t\t'getVertexAttrib'\r\n\t\t]\r\n\t\tif (isWebGL2RenderingContext) {\r\n\t\t\tfunctionsThatShouldReturnNull.push(\r\n\t\t\t\t'getInternalformatParameter',\r\n\t\t\t\t'getQuery',\r\n\t\t\t\t'getQueryParameter',\r\n\t\t\t\t'getSamplerParameter',\r\n\t\t\t\t'getSyncParameter',\r\n\t\t\t\t'getTransformFeedbackVarying',\r\n\t\t\t\t'getIndexedParameter',\r\n\t\t\t\t'getUniformIndices',\r\n\t\t\t\t'getActiveUniforms',\r\n\t\t\t\t'getActiveUniformBlockParameter',\r\n\t\t\t\t'getActiveUniformBlockName'\r\n\t\t\t)\r\n\t\t}\r\n\t\tfor (let ii = 0; ii < functionsThatShouldReturnNull.length; ++ii) {\r\n\t\t\tconst functionName = functionsThatShouldReturnNull[ii]\r\n\t\t\twrappedContext_[functionName] = function (f) {\r\n\t\t\t\treturn function () {\r\n\t\t\t\t\tloseContextIfTime()\r\n\t\t\t\t\tif (contextLost_) {\r\n\t\t\t\t\t\treturn null\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn f.apply(ctx, arguments)\r\n\t\t\t\t}\r\n\t\t\t}(wrappedContext_[functionName])\r\n\t\t}\r\n\r\n\t\tconst isFunctions = [\r\n\t\t\t'isBuffer',\r\n\t\t\t'isEnabled',\r\n\t\t\t'isFramebuffer',\r\n\t\t\t'isProgram',\r\n\t\t\t'isRenderbuffer',\r\n\t\t\t'isShader',\r\n\t\t\t'isTexture'\r\n\t\t]\r\n\t\tif (isWebGL2RenderingContext) {\r\n\t\t\tisFunctions.push(\r\n\t\t\t\t'isQuery',\r\n\t\t\t\t'isSampler',\r\n\t\t\t\t'isSync',\r\n\t\t\t\t'isTransformFeedback',\r\n\t\t\t\t'isVertexArray'\r\n\t\t\t)\r\n\t\t}\r\n\t\tfor (let ii = 0; ii < isFunctions.length; ++ii) {\r\n\t\t\tconst functionName = isFunctions[ii]\r\n\t\t\twrappedContext_[functionName] = function (f) {\r\n\t\t\t\treturn function () {\r\n\t\t\t\t\tloseContextIfTime()\r\n\t\t\t\t\tif (contextLost_) {\r\n\t\t\t\t\t\treturn false\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn f.apply(ctx, arguments)\r\n\t\t\t\t}\r\n\t\t\t}(wrappedContext_[functionName])\r\n\t\t}\r\n\r\n\t\twrappedContext_.checkFramebufferStatus = function (f) {\r\n\t\t\treturn function () {\r\n\t\t\t\tloseContextIfTime()\r\n\t\t\t\tif (contextLost_) {\r\n\t\t\t\t\treturn wrappedContext_.FRAMEBUFFER_UNSUPPORTED\r\n\t\t\t\t}\r\n\t\t\t\treturn f.apply(ctx, arguments)\r\n\t\t\t}\r\n\t\t}(wrappedContext_.checkFramebufferStatus)\r\n\r\n\t\twrappedContext_.getAttribLocation = function (f) {\r\n\t\t\treturn function () {\r\n\t\t\t\tloseContextIfTime()\r\n\t\t\t\tif (contextLost_) {\r\n\t\t\t\t\treturn -1\r\n\t\t\t\t}\r\n\t\t\t\treturn f.apply(ctx, arguments)\r\n\t\t\t}\r\n\t\t}(wrappedContext_.getAttribLocation)\r\n\r\n\t\twrappedContext_.getVertexAttribOffset = function (f) {\r\n\t\t\treturn function () {\r\n\t\t\t\tloseContextIfTime()\r\n\t\t\t\tif (contextLost_) {\r\n\t\t\t\t\treturn 0\r\n\t\t\t\t}\r\n\t\t\t\treturn f.apply(ctx, arguments)\r\n\t\t\t}\r\n\t\t}(wrappedContext_.getVertexAttribOffset)\r\n\r\n\t\twrappedContext_.isContextLost = function () {\r\n\t\t\treturn contextLost_\r\n\t\t}\r\n\r\n\t\tif (isWebGL2RenderingContext) {\r\n\t\t\twrappedContext_.getFragDataLocation = function (f) {\r\n\t\t\t\treturn function () {\r\n\t\t\t\t\tloseContextIfTime()\r\n\t\t\t\t\tif (contextLost_) {\r\n\t\t\t\t\t\treturn -1\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn f.apply(ctx, arguments)\r\n\t\t\t\t}\r\n\t\t\t}(wrappedContext_.getFragDataLocation)\r\n\r\n\t\t\twrappedContext_.clientWaitSync = function (f) {\r\n\t\t\t\treturn function () {\r\n\t\t\t\t\tloseContextIfTime()\r\n\t\t\t\t\tif (contextLost_) {\r\n\t\t\t\t\t\treturn wrappedContext_.WAIT_FAILED\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn f.apply(ctx, arguments)\r\n\t\t\t\t}\r\n\t\t\t}(wrappedContext_.clientWaitSync)\r\n\r\n\t\t\twrappedContext_.getUniformBlockIndex = function (f) {\r\n\t\t\t\treturn function () {\r\n\t\t\t\t\tloseContextIfTime()\r\n\t\t\t\t\tif (contextLost_) {\r\n\t\t\t\t\t\treturn wrappedContext_.INVALID_INDEX\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn f.apply(ctx, arguments)\r\n\t\t\t\t}\r\n\t\t\t}(wrappedContext_.getUniformBlockIndex)\r\n\t\t}\r\n\r\n\t\treturn wrappedContext_\r\n\t}\r\n}\r\n\r\n","import chroma from 'chroma-js'\nimport { addOwnProperties, assert, DEG, int, M4, P3ZX, V, V3, } from 'ts3dutils'\nimport { glEnumToString } from './KhronosGroupWebGLDebug'\n\nimport { makeDebugContext, Mesh, Shader } from './index'\n\nimport GL = WebGLRenderingContextStrict\nexport type GL_COLOR = [number, number, number, number]\n/**\n * There's only one constant, use it for default values. Use chroma-js or similar for actual colors.\n */\nexport const GL_COLOR_BLACK: GL_COLOR = [0, 0, 0, 1]\n\nexport function currentGL(): TSGLContext {\n\treturn TSGLContextBase.gl\n}\n\nexport function isNumber(obj: any) {\n\tconst str = Object.prototype.toString.call(obj)\n\treturn str == '[object Number]' || str == '[object Boolean]'\n}\n\nexport type UniformType = V3 | M4 | number[] | boolean | number\nexport type TSGLContext = TSGLContextBase & (WebGLRenderingContextStrict | WebGL2RenderingContext)\nexport interface TSGLContextBase extends WebGLRenderingContextStrict {}\nexport class TSGLContextBase {\n\tmodelViewMatrix: M4 = M4.identity()\n\tprojectionMatrix: M4 = M4.identity()\n\tstatic readonly MODELVIEW: { __MATRIX_MODE_CONSTANT: any } = 0 as any\n\tstatic readonly PROJECTION: { __MATRIX_MODE_CONSTANT: any } = 1 as any\n\tMODELVIEW: typeof TSGLContextBase.MODELVIEW\n\tPROJECTION: typeof TSGLContextBase.PROJECTION\n\n\treadonly version: 1 | 2\n\n\tstatic HALF_FLOAT_OES: int = 0x8D61\n\tHALF_FLOAT_OES: int\n\n\tprivate tempMatrix = new M4()\n\tprivate resultMatrix = new M4()\n\tprivate modelViewStack: M4[] = []\n\tprivate projectionStack: M4[] = []\n\tprivate currentMatrixName: 'modelViewMatrix' | 'projectionMatrix'\n\tprivate stack: M4[]\n\n\tmeshes: { [name: string]: Mesh }\n\tshaders: { [name: string]: Shader }\n\tpublic drawCallCount: int = 0\n\tpublic projectionMatrixVersion: int = 0\n\tpublic modelViewMatrixVersion: int = 0\n\n\tprotected constructor(gl: TSGLContextBase, private immediate = {\n\t\tmesh: new Mesh()\n\t\t\t.addVertexBuffer('coords', 'ts_TexCoord')\n\t\t\t.addVertexBuffer('colors', 'ts_Color'),\n\t\tmode: -1 as GL.DrawMode | -1,\n\t\tcoord: [0, 0] as [number, number],\n\t\tcolor: [1, 1, 1, 1] as GL_COLOR,\n\t\tpointSize: 1,\n\t\tshader: Shader.create(`\n\t\t\tattribute vec4 ts_Color;\n\t\t\tattribute vec4 ts_Vertex;\n\t\t\tuniform mat4 ts_ModelViewProjectionMatrix;\n\t\t\tattribute vec2 ts_TexCoord;\n            uniform float pointSize;\n            varying vec4 color;\n            varying vec2 coord;\n            void main() {\n                color = ts_Color;\n                coord = ts_TexCoord;\n                gl_Position = ts_ModelViewProjectionMatrix * ts_Vertex;\n                gl_PointSize = pointSize;\n            }\n\t\t`, `\n\t\t\tprecision highp float;\n            uniform sampler2D texture;\n            uniform float pointSize;\n            // uniform bool useTexture;\n            varying vec4 color;\n            varying vec2 coord;\n            void main() {\n                gl_FragColor = color;\n                // if (useTexture) gl_FragColor *= texture2D(texture, coord.xy);\n            }\n        `, gl),\n\t}) {\n\t\tthis.matrixMode(TSGLContextBase.MODELVIEW)\n\t}\n\n\t/// Implement the OpenGL modelview and projection matrix stacks, along with some other useful GLU matrix functions.\n\tmatrixMode(mode: { __MATRIX_MODE_CONSTANT: any }): void {\n\t\tswitch (mode) {\n\t\t\tcase this.MODELVIEW:\n\t\t\t\tthis.currentMatrixName = 'modelViewMatrix'\n\t\t\t\tthis.stack = this.modelViewStack\n\t\t\t\tbreak\n\t\t\tcase this.PROJECTION:\n\t\t\t\tthis.currentMatrixName = 'projectionMatrix'\n\t\t\t\tthis.stack = this.projectionStack\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\tthrow new Error('invalid matrix mode ' + mode)\n\t\t}\n\t}\n\n\tloadIdentity(): void {\n\t\tM4.identity(this[this.currentMatrixName])\n\t\tthis.currentMatrixName == 'projectionMatrix' ? this.projectionMatrixVersion++ : this.modelViewMatrixVersion++\n\t}\n\n\tloadMatrix(m4: M4) {\n\t\tM4.copy(m4, this[this.currentMatrixName])\n\t\tthis.currentMatrixName == 'projectionMatrix' ? this.projectionMatrixVersion++ : this.modelViewMatrixVersion++\n\t}\n\n\tmultMatrix(m4: M4) {\n\t\tM4.multiply(this[this.currentMatrixName], m4, this.resultMatrix)\n\t\tconst temp = this.resultMatrix\n\t\tthis.resultMatrix = this[this.currentMatrixName]\n\t\tthis[this.currentMatrixName] = temp\n\t\tthis.currentMatrixName == 'projectionMatrix' ? this.projectionMatrixVersion++ : this.modelViewMatrixVersion++\n\t}\n\n\tmirror(plane: { normal1: V3, w: number }) {\n\t\tthis.multMatrix(M4.mirror(plane))\n\t}\n\n\tperspective(fovDegrees: number, aspect: number, near: number, far: number) {\n\t\tthis.multMatrix(M4.perspectiveRad(fovDegrees * DEG, aspect, near, far, this.tempMatrix))\n\t}\n\n\tfrustum(left: number, right: number, bottom: number, top: number, near: number, far: number) {\n\t\tthis.multMatrix(M4.frustum(left, right, bottom, top, near, far, this.tempMatrix))\n\t}\n\n\tortho(left: number, right: number, bottom: number, top: number, near: number, far: number) {\n\t\tthis.multMatrix(M4.ortho(left, right, bottom, top, near, far, this.tempMatrix))\n\t}\n\n\tscale(x: number, y: number, z?: number): void\n\tscale(scale: number): void\n\tscale(v: V3): void\n\tscale(...args: any[]) {\n\t\tthis.multMatrix((M4.scale as any)(...args, this.tempMatrix))\n\t}\n\n\tmirroredX() {\n\t\tthis.multMatrix(M4.mirror(P3ZX))\n\t}\n\n\ttranslate(x: number, y?: number, z?: number): void\n\ttranslate(v: V3): void\n\ttranslate(x: any, y?: any, z?: any) {\n\t\tif (undefined !== y) {\n\t\t\tthis.multMatrix(M4.translate(x, y, z, this.tempMatrix))\n\t\t} else {\n\t\t\tthis.multMatrix(M4.translate(x, this.tempMatrix))\n\t\t}\n\t}\n\n\trotate(angleDegrees: number, x: number, y: number, z: number) {\n\t\tthis.multMatrix(M4.rotate(angleDegrees * DEG, {x, y, z}, this.tempMatrix))\n\t}\n\n\tlookAt(eye: V3, center: V3, up: V3) {\n\t\tthis.multMatrix(M4.lookAt(eye, center, up, this.tempMatrix))\n\t}\n\n\tpushMatrix() {\n\t\tthis.stack.push(M4.copy(this[this.currentMatrixName]))\n\t}\n\n\tpopMatrix() {\n\t\tconst pop = this.stack.pop()\n\t\tassert(undefined !== pop)\n\t\tthis[this.currentMatrixName] = pop as M4\n\t\tthis.currentMatrixName == 'projectionMatrix' ? this.projectionMatrixVersion++ : this.modelViewMatrixVersion++\n\t}\n\n\t/**\n\t * World coordinates (WC) to screen/window coordinates matrix\n\t */\n\twcToWindowMatrix() {\n\t\tconst viewport = this.getParameter(this.VIEWPORT)\n\t\tconst [x, y, w, h] = viewport\n\t\tconst viewportToScreenMatrix = new M4([\n\t\t\tw / 2, 0, 0, x + w / 2,\n\t\t\th / 2, 0, 0, y + h / 2,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1,\n\t\t])\n\t\treturn M4.multiplyMultiple(viewportToScreenMatrix, this.projectionMatrix, this.modelViewMatrix)\n\t}\n\n\t/////////// IMMEDIATE MODE\n\t// ### Immediate mode\n\t//\n\t// Provide an implementation of OpenGL's deprecated immediate mode. This is\n\t// deprecated for a reason: constantly re-specifying the geometry is a bad\n\t// idea for performance. You should use a `GL.Mesh` instead, which specifies\n\t// the geometry once and caches it on the graphics card. Still, nothing\n\t// beats a quick `viewerGL.begin(WGL.POINTS); viewerGL.vertex(1, 2, 3); viewerGL.end();` for\n\t// debugging. This intentionally doesn't implement fixed-function lighting\n\t// because it's only meant for quick debugging tasks.\n\n\n\tpointSize(pointSize: number): void {\n\t\tthis.immediate.shader.uniforms({pointSize: pointSize})\n\t}\n\n\tbegin(mode: GL.DrawMode) {\n\t\tif (this.immediate.mode != -1) throw new Error('mismatched viewerGL.begin() and viewerGL.end() calls')\n\t\tthis.immediate.mode = mode\n\t\tthis.immediate.mesh.colors = []\n\t\tthis.immediate.mesh.coords = []\n\t\tthis.immediate.mesh.vertices = []\n\t}\n\n\tcolor(cssColor: string): void\n\tcolor(r: number, g: number, b: number, a?: number): void\n\tcolor(hexInt: int): void\n\tcolor(glColor: GL_COLOR): void\n\tcolor(...args: any[]) {\n\t\tthis.immediate.color =\n\t\t\t(1 == args.length && Array.isArray(args[0]))\n\t\t\t\t? args[0]\n\t\t\t\t: (1 == args.length && 'number' == typeof args[0])\n\t\t\t\t? hexIntToGLColor(args[0])\n\t\t\t\t: (1 == args.length && 'string' == typeof args[0])\n\t\t\t\t\t? chroma(args[0]).gl()\n\t\t\t\t\t: [args[0], args[1], args[2], args[3] || 0]\n\t}\n\n\ttexCoord(s: number, t: number): void\n\ttexCoord(coords: [number, number]): void\n\ttexCoord(coords: { x: number, y: number }): void\n\ttexCoord(...args: any[]) {\n\t\tthis.immediate.coord = V.apply(undefined, args).toArray(2)\n\t}\n\n\tvertex(v: V3): void\n\tvertex(x: number, y: number, z: number): void\n\tvertex(...args: any[]) {\n\t\tthis.immediate.mesh.colors.push(this.immediate.color)\n\t\tthis.immediate.mesh.coords.push(this.immediate.coord)\n\t\tthis.immediate.mesh.vertices.push(V.apply(undefined, args))\n\t}\n\n\tend(): void {\n\t\tif (this.immediate.mode == -1) throw new Error('mismatched viewerGL.begin() and viewerGL.end() calls')\n\t\tthis.immediate.mesh.compile()\n\t\tthis.immediate.shader.uniforms({\n\t\t\tuseTexture: !!TSGLContextBase.gl.getParameter(this.TEXTURE_BINDING_2D),\n\t\t}).drawBuffers(this.immediate.mesh.vertexBuffers, undefined, this.immediate.mode)\n\t\tthis.immediate.mode = -1\n\t}\n\n\n\t////////// MISCELLANEOUS METHODS\n\tstatic gl: TSGLContextBase\n\n\tmakeCurrent() {\n\t\tTSGLContextBase.gl = this\n\t}\n\n\t/**\n\t * Starts an animation loop.\n\t */\n\tanimate(callback: (this: TSGLContextBase, domHighResTimeStamp: number, timeSinceLast: number) => void): () => void {\n\t\tconst requestAnimationFrame: typeof window.requestAnimationFrame =\n\t\t\twindow.requestAnimationFrame ||\n\t\t\t(window as any).mozRequestAnimationFrame ||\n\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\tfunction (callback: FrameRequestCallback) {\n\t\t\t\tsetTimeout(() => callback(performance.now()), 1000 / 60)\n\t\t\t}\n\t\tlet time = performance.now(), keepUpdating = true\n\t\tconst update = (now: number) => {\n\t\t\tif (keepUpdating) {\n\t\t\t\tcallback.call(this, now, now - time)\n\t\t\t\ttime = now\n\t\t\t\trequestAnimationFrame(update)\n\t\t\t}\n\t\t}\n\t\trequestAnimationFrame(update)\n\t\treturn () => { keepUpdating = false }\n\t}\n\n\n\t/**\n\t * Provide an easy way to get a fullscreen app running, including an\n\t * automatic 3D perspective projection matrix by default. This should be\n\t * called once.\n\t *\n\t * Just fullscreen, no automatic camera:\n\t *\n\t *     viewerGL.fullscreen({ camera: false })\n\t *\n\t * Adjusting field of view, near plane distance, and far plane distance:\n\t *\n\t *     viewerGL.fullscreen({ fov: 45, near: 0.1, far: 1000 })\n\t *\n\t * Adding padding from the edge of the window:\n\t *\n\t *     viewerGL.fullscreen({ paddingLeft: 250, paddingBottom: 60 })\n\t */\n\tfullscreen(options: {\n\t\tpaddingTop?: number,\n\t\tpaddingLeft?: number,\n\t\tpaddingRight?: number,\n\t\tpaddingBottom?: number,\n\t\tcamera?: boolean,\n\t\tfov?: number,\n\t\tnear?: number,\n\t\tfar?: number\n\t} = {}) {\n\n\t\tconst top = options.paddingTop || 0\n\t\tconst left = options.paddingLeft || 0\n\t\tconst right = options.paddingRight || 0\n\t\tconst bottom = options.paddingBottom || 0\n\t\tif (!document.body) {\n\t\t\tthrow new Error('document.body doesn\\'t exist yet (call viewerGL.fullscreen() from ' +\n\t\t\t\t'window.onload() or from inside the <body> tag)')\n\t\t}\n\t\tdocument.body.appendChild(this.canvas)\n\t\tdocument.body.style.overflow = 'hidden'\n\t\tthis.canvas.style.position = 'absolute'\n\t\tthis.canvas.style.left = left + 'px'\n\t\tthis.canvas.style.top = top + 'px'\n\t\tthis.canvas.style.width = window.innerWidth - left - right + 'px'\n\t\tthis.canvas.style.bottom = window.innerHeight - top - bottom + 'px'\n\n\t\tconst gl = this\n\n\t\tfunction windowOnResize() {\n\t\t\tgl.canvas.width = (window.innerWidth - left - right) * window.devicePixelRatio\n\t\t\tgl.canvas.height = (window.innerHeight - top - bottom) * window.devicePixelRatio\n\t\t\tgl.viewport(0, 0, gl.canvas.width, gl.canvas.height)\n\t\t\tif (options.camera) {\n\t\t\t\tgl.matrixMode(TSGLContextBase.PROJECTION)\n\t\t\t\tgl.loadIdentity()\n\t\t\t\tgl.perspective(options.fov || 45, gl.canvas.width / gl.canvas.height,\n\t\t\t\t\toptions.near || 0.1, options.far || 1000)\n\t\t\t\tgl.matrixMode(TSGLContextBase.MODELVIEW)\n\t\t\t}\n\t\t}\n\n\t\twindow.addEventListener('resize', windowOnResize)\n\t\twindowOnResize()\n\t\treturn this\n\t}\n\n\tviewportFill() {\n\t\tthis.viewport(0, 0, this.canvas.width, this.canvas.height)\n\t}\n\n\tstatic create(options: Partial<GL.WebGLContextAttributes & {canvas: HTMLCanvasElement, throwOnError: boolean}> = {}): TSGLContext {\n\t\tconst canvas = options.canvas || document.createElement('canvas')\n\t\tif (!options.canvas) {\n\t\t\tcanvas.width = 800\n\t\t\tcanvas.height = 600\n\t\t}\n\t\tif (!('alpha' in options)) options.alpha = false\n\t\tlet newGL: any = undefined\n\t\ttry {\n\t\t\tnewGL = canvas.getContext('webgl2', options)\n\t\t\tnewGL && (newGL.version = 2)\n\t\t\tif (!newGL) {\n\t\t\t\tnewGL = (canvas.getContext('webgl', options) || canvas.getContext('experimental-webgl', options))\n\t\t\t\tnewGL && (newGL.version = 1)\n\t\t\t}\n\t\t\tconsole.log('getting context')\n\t\t} catch (e) {\n\t\t\tconsole.log(e, 'Failed to get context')\n\t\t}\n\t\tif (!newGL) throw new Error('WebGL not supported')\n\t\tif (options.throwOnError) {\n\t\t\tnewGL = makeDebugContext(newGL, (err, funcName) => {\n\t\t\t\tthrow new Error(glEnumToString(err) + ' was caused by ' + funcName)\n\t\t\t})\n\t\t}\n\n\t\tTSGLContextBase.gl = newGL\n\t\taddOwnProperties(newGL, TSGLContextBase.prototype)\n\t\taddOwnProperties(newGL, new TSGLContextBase(newGL))\n\t\t//addEventListeners(newGL)\n\t\treturn newGL\n\t}\n}\nexport namespace TSGLContext {\n\t/**\n\t * `create()` creates a new WebGL context and augments it with more methods. The alpha channel is disabled\n\t * by default because it usually causes unintended transparencies in the canvas.\n\t */\n\texport const create = TSGLContextBase.create\n}\n\n// enum WGL_ERROR {\n// \tNO_ERROR = WGL.NO_ERROR,\n// \tINVALID_ENUM = WGL.INVALID_ENUM,\n// \tINVALID_VALUE = WGL.INVALID_VALUE,\n// \tINVALID_OPERATION = WGL.INVALID_OPERATION,\n// \tINVALID_FRAMEBUFFER_OPERATION = WGL.INVALID_FRAMEBUFFER_OPERATION,\n// \tOUT_OF_MEMORY = WGL.OUT_OF_MEMORY,\n// \tCONTEXT_LOST_WEBGL = WGL.CONTEXT_LOST_WEBGL,\n// }\n\nTSGLContextBase.prototype.MODELVIEW = TSGLContextBase.MODELVIEW\nTSGLContextBase.prototype.PROJECTION = TSGLContextBase.PROJECTION\nTSGLContextBase.prototype.HALF_FLOAT_OES = TSGLContextBase.HALF_FLOAT_OES\n\n\n/**\n *\n * Push two triangles:\n * c - d\n * | \\ |\n * a - b\n */\nexport function pushQuad(triangles: int[], flipped: boolean, a: int, b: int, c: int, d: int) {\n\tif (flipped) {\n\t\ttriangles.push(\n\t\t\ta, c, b,\n\t\t\tb, c, d)\n\t} else {\n\t\ttriangles.push(\n\t\t\ta, b, c,\n\t\t\tb, d, c)\n\t}\n}\n\nfunction hexIntToGLColor(color: int): GL_COLOR {\n\treturn [(color >> 16) / 255.0, ((color >> 8) & 0xff) / 255.0, (color & 0xff) / 255.0, 1.0]\n}\n"],"names":["WGL"],"mappings":"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"}